<nav class="search">
    <div data-quickpanel="quickpanel" class="topNavIconWrapper">
        <h2 id="search-toggle" class="dropdown-toggle ir">Search</h2>

        <form action="#" class="dropdown" id="search-form">
            <label for="searchfor">
                Search for:
                <select name="searchfor" id="searchfor">
                    <option value="">all content</option>
                    <option value="people">people</option>
                    <option value="pages">pages</option>
                    <option value="posts">posts</option>
                    <option value="events">events</option>
                    <option value="communities">communities</option>
                </select>
            </label>
            <label for="searchwhere">
                in
                <select name="searchwhere" id="searchwhere">
                  <option tal:repeat="option scope_options"
                    value="${option.path}"
                    data-label="${option.label}"
                    selected="${'selected' if option.get('selected', None) else None}">${option.name}</option>
                </select>
            </label>
            <fieldset>
                <div class="searchInputWrapper">
                    <input class="float-left search-site-box" type="search"
                           name="SearchTextBox"
                           title="Search this site"
                           accesskey="4" size="15"
                           placeholder="What to search for?"/>
                    <button class="searchButton ir" type="submit">Search
                    </button>
                </div>
            </fieldset>
        </form>
    </div>
    <script type="text/javascript" deferred>
    //<![CDATA[
        $(function() {

            var defaultKindLabel = $('select#searchfor option[value=""]').text();
            var defaultScopeLabel = $('select#searchwhere option[value=""]').text();
            function resetFilters(evt) {
                $('select#searchfor')
                    .val('')
                    .next().text(defaultKindLabel);
                $('select#searchwhere')
                    .val('')
                    .next().text(defaultScopeLabel);
            }

            // Handle the initial selection of the "kind" selector
            resetFilters();

            // wire the livesearch component
            var appUrl = window.head_data.app_url;
            $('#search-form .search-site-box').livesearch({
                appUrl: appUrl,
                livesearchMethod: 'jquery_livesearch',
                advancedSearchMethod: 'searchresults.html',
                resetFilters: resetFilters,
                position: {
                    my: 'right top',
                    at: 'right bottom',
                    of: $('#search-form .searchInputWrapper'),
                    collision: 'none'
                }
            });

            // ui interaction: the "kind" selector change notifies the component
            $('select#searchfor').change(function(evt) {
                  var value = $(this).find('option:selected').attr('value');
                  $('.search-site-box').livesearch('option', 'kind', value);
            });

            // ui interaction: the "scope" selector change notifies the component
            $('select#searchwhere').change(function(evt) {
                  var option = $(this).find('option:selected');
                  $('.search-site-box')
                      .livesearch('option', 'scopePath', option.attr('value'))
                      .livesearch('option', 'scopeLabel', option.data('label'));
            });

            // ui interaction: search icon clicked: trigger a search.
            $('#search-form .searchButton').click(function(evt) {
                $('#search-form .search-site-box').livesearch('searchButtonClicked', evt);
                return false;
            });

        });
    //]]>
    </script>    

</nav>
