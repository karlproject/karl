{"version":3,"sources":["gears_init.js","plupload.js","plupload.gears.js","plupload.silverlight.js","plupload.flash.js","plupload.html4.js","plupload.html5.js","jquery.ui.plupload.js"],"names":[],"mappings":"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","file":"karl-multifileupload.min.js","sourcesContent":["// Copyright 2007, Google Inc.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  1. Redistributions of source code must retain the above copyright notice,\n//     this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright notice,\n//     this list of conditions and the following disclaimer in the documentation\n//     and/or other materials provided with the distribution.\n//  3. Neither the name of Google Inc. nor the names of its contributors may be\n//     used to endorse or promote products derived from this software without\n//     specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n// OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n// OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n// ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Sets up google.gears.*, which is *the only* supported way to access Gears.\n//\n// Circumvent this file at your own risk!\n//\n// In the future, Gears may automatically define google.gears.* without this\n// file. Gears may use these objects to transparently fix bugs and compatibility\n// issues. Applications that use the code below will continue to work seamlessly\n// when that happens.\n\n(function() {\n  // We are already defined. Hooray!\n  if (window.google && google.gears) {\n    return;\n  }\n\n  var factory = null;\n\n  // Firefox\n  if (typeof GearsFactory != 'undefined') {\n    factory = new GearsFactory();\n  } else {\n    // IE\n    try {\n      factory = new ActiveXObject('Gears.Factory');\n      // privateSetGlobalObject is only required and supported on WinCE.\n      if (factory.getBuildInfo().indexOf('ie_mobile') != -1) {\n        factory.privateSetGlobalObject(this);\n      }\n    } catch (e) {\n      // Safari\n      if ((typeof navigator.mimeTypes != 'undefined')\n           && navigator.mimeTypes[\"application/x-googlegears\"]) {\n        factory = document.createElement(\"object\");\n        factory.style.display = \"none\";\n        factory.width = 0;\n        factory.height = 0;\n        factory.type = \"application/x-googlegears\";\n        document.documentElement.appendChild(factory);\n      }\n    }\n  }\n\n  // *Do not* define any objects if Gears is not installed. This mimics the\n  // behavior of Gears defining the objects in the future.\n  if (!factory) {\n    return;\n  }\n\n  // Now set up the objects, being careful not to overwrite anything.\n  //\n  // Note: In Internet Explorer for Windows Mobile, you can't add properties to\n  // the window object. However, global objects are automatically added as\n  // properties of the window object in all browsers.\n  if (!window.google) {\n    google = {};\n  }\n\n  if (!google.gears) {\n    google.gears = {factory: factory};\n  }\n})();\n","/**\r\n * plupload.js\r\n *\r\n * Copyright 2009, Moxiecode Systems AB\r\n * Released under GPL License.\r\n *\r\n * License: http://www.plupload.com/license\r\n * Contributing: http://www.plupload.com/contributing\r\n *\r\n * 2011 Balazs Ree:\r\n * - make an unknown extension _not_ result in an error\r\n *   on file adding\r\n */\r\n\r\n// JSLint defined globals\r\n/*global window:false, escape:false */\r\n\r\n\r\n(function() {\r\n\tvar count = 0, runtimes = [], i18n = {}, mimes = {},\r\n\t\txmlEncodeChars = {'<' : 'lt', '>' : 'gt', '&' : 'amp', '\"' : 'quot', '\\'' : '#39'},\r\n\t\txmlEncodeRegExp = /[<>&\\\"\\']/g, undef, delay = window.setTimeout,\r\n\t\t// A place to store references to event handlers\r\n\t\teventhash = {},\r\n\t\tuid;\r\n\r\n\t// IE W3C like event funcs\r\n\tfunction preventDefault() {\r\n\t\tthis.returnValue = false;\r\n\t}\r\n\r\n\tfunction stopPropagation() {\r\n\t\tthis.cancelBubble = true;\r\n\t}\r\n\r\n\t// Parses the default mime types string into a mimes lookup map\r\n\t(function(mime_data) {\r\n\t\tvar items = mime_data.split(/,/), i, y, ext;\r\n\r\n\t\tfor (i = 0; i < items.length; i += 2) {\r\n\t\t\text = items[i + 1].split(/ /);\r\n\r\n\t\t\tfor (y = 0; y < ext.length; y++) {\r\n\t\t\t\tmimes[ext[y]] = items[i];\r\n\t\t\t}\r\n\t\t}\r\n\t})(\r\n\t\t\"application/msword,doc dot,\" +\r\n\t\t\"application/pdf,pdf,\" +\r\n\t\t\"application/pgp-signature,pgp,\" +\r\n\t\t\"application/postscript,ps ai eps,\" +\r\n\t\t\"application/rtf,rtf,\" +\r\n\t\t\"application/vnd.ms-excel,xls xlb,\" +\r\n\t\t\"application/vnd.ms-powerpoint,ppt pps pot,\" +\r\n\t\t\"application/zip,zip,\" +\r\n\t\t\"application/x-shockwave-flash,swf swfl,\" +\r\n\t\t\"application/vnd.openxmlformats-officedocument.presentationml.presentation,pptx,\" +\r\n\t\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,xlsx,\" +\r\n\t\t\"application/vnd.openxmlformats-officedocument.wordprocessingml.document,docx,\" +\r\n\t\t\"audio/mpeg,mpga mpega mp2 mp3,\" +\r\n\t\t\"audio/x-wav,wav,\" +\r\n\t\t\"audio/mp4,m4a,\" +\r\n\t\t\"image/bmp,bmp,\" +\r\n\t\t\"image/gif,gif,\" +\r\n\t\t\"image/jpeg,jpeg jpg jpe,\" +\r\n\t\t\"image/png,png,\" +\r\n\t\t\"image/svg+xml,svg svgz,\" +\r\n\t\t\"image/tiff,tiff tif,\" +\r\n\t\t\"text/html,htm html xhtml,\" +\r\n\t\t\"text/rtf,rtf,\" +\r\n\t\t\"video/mpeg,mpeg mpg mpe,\" +\r\n\t\t\"video/quicktime,qt mov,\" +\r\n\t\t\"video/mp4,mp4,\" +\r\n\t\t\"video/x-m4v,m4v,\" +\r\n\t\t\"video/x-flv,flv,\" +\r\n\t\t\"video/vnd.rn-realvideo,rv,\" +\r\n\t\t\"text/plain,asc txt text diff log,\" +\r\n\t\t\"application/octet-stream,exe\"\r\n\t);\r\n\r\n\t/**\r\n\t * Plupload class with some global constants and functions.\r\n\t *\r\n\t * @example\r\n\t * // Encode entities\r\n\t * console.log(plupload.xmlEncode(\"My string &lt;&gt;\"));\r\n\t *\r\n\t * // Generate unique id\r\n\t * console.log(plupload.guid());\r\n\t *\r\n\t * @static\r\n\t * @class plupload\r\n\t */\r\n\tvar plupload = {\r\n\t\t/**\r\n\t\t * Plupload version will be replaced on build.\r\n\t\t */\r\n\t\tVERSION : 'dev',\r\n\r\n\t\t/**\r\n\t\t * Inital state of the queue and also the state ones it's finished all it's uploads.\r\n\t\t *\r\n\t\t * @property STOPPED\r\n\t\t * @final\r\n\t\t */\r\n\t\tSTOPPED : 1,\r\n\r\n\t\t/**\r\n\t\t * Upload process is running\r\n\t\t *\r\n\t\t * @property STARTED\r\n\t\t * @final\r\n\t\t */\r\n\t\tSTARTED : 2,\r\n\r\n\t\t/**\r\n\t\t * File is queued for upload\r\n\t\t *\r\n\t\t * @property QUEUED\r\n\t\t * @final\r\n\t\t */\r\n\t\tQUEUED : 1,\r\n\r\n\t\t/**\r\n\t\t * File is being uploaded\r\n\t\t *\r\n\t\t * @property UPLOADING\r\n\t\t * @final\r\n\t\t */\r\n\t\tUPLOADING : 2,\r\n\r\n\t\t/**\r\n\t\t * File has failed to be uploaded\r\n\t\t *\r\n\t\t * @property FAILED\r\n\t\t * @final\r\n\t\t */\r\n\t\tFAILED : 4,\r\n\r\n\t\t/**\r\n\t\t * File has been uploaded successfully\r\n\t\t *\r\n\t\t * @property DONE\r\n\t\t * @final\r\n\t\t */\r\n\t\tDONE : 5,\r\n\r\n\t\t// Error constants used by the Error event\r\n\r\n\t\t/**\r\n\t\t * Generic error for example if an exception is thrown inside Silverlight.\r\n\t\t *\r\n\t\t * @property GENERIC_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tGENERIC_ERROR : -100,\r\n\r\n\t\t/**\r\n\t\t * HTTP transport error. For example if the server produces a HTTP status other than 200.\r\n\t\t *\r\n\t\t * @property HTTP_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tHTTP_ERROR : -200,\r\n\r\n\t\t/**\r\n\t\t * Generic I/O error. For exampe if it wasn't possible to open the file stream on local machine.\r\n\t\t *\r\n\t\t * @property IO_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tIO_ERROR : -300,\r\n\r\n\t\t/**\r\n\t\t * Generic I/O error. For exampe if it wasn't possible to open the file stream on local machine.\r\n\t\t *\r\n\t\t * @property SECURITY_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tSECURITY_ERROR : -400,\r\n\r\n\t\t/**\r\n\t\t * Initialization error. Will be triggered if no runtime was initialized.\r\n\t\t *\r\n\t\t * @property INIT_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tINIT_ERROR : -500,\r\n\r\n\t\t/**\r\n\t\t * File size error. If the user selects a file that is to large it will be blocked and an error of this type will be triggered.\r\n\t\t *\r\n\t\t * @property FILE_SIZE_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tFILE_SIZE_ERROR : -600,\r\n\r\n\t\t/**\r\n\t\t * File extension error. If the user selects a file that isn't valid according to the filters setting.\r\n\t\t *\r\n\t\t * @property FILE_EXTENSION_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tFILE_EXTENSION_ERROR : -601,\r\n\t\t\r\n\t\t/**\r\n\t\t * Runtime will try to detect if image is proper one. Otherwise will throw this error.\r\n\t\t *\r\n\t\t * @property IMAGE_FORMAT_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tIMAGE_FORMAT_ERROR : -700,\r\n\t\t\r\n\t\t/**\r\n\t\t * While working on the image runtime will try to detect if the operation may potentially run out of memeory and will throw this error.\r\n\t\t *\r\n\t\t * @property IMAGE_MEMORY_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tIMAGE_MEMORY_ERROR : -701,\r\n\t\t\r\n\t\t/**\r\n\t\t * Each runtime has an upper limit on a dimension of the image it can handle. If bigger, will throw this error.\r\n\t\t *\r\n\t\t * @property IMAGE_DIMENSIONS_ERROR\r\n\t\t * @final\r\n\t\t */\r\n\t\tIMAGE_DIMENSIONS_ERROR : -702,\r\n\t\t\r\n\r\n\t\t/**\r\n\t\t * Mime type lookup table.\r\n\t\t *\r\n\t\t * @property mimeTypes\r\n\t\t * @type Object\r\n\t\t * @final\r\n\t\t */\r\n\t\tmimeTypes : mimes,\r\n\r\n\t\t/**\r\n\t\t * Extends the specified object with another object.\r\n\t\t *\r\n\t\t * @method extend\r\n\t\t * @param {Object} target Object to extend.\r\n\t\t * @param {Object..} obj Multiple objects to extend with.\r\n\t\t * @return {Object} Same as target, the extended object.\r\n\t\t */\r\n\t\textend : function(target) {\r\n\t\t\tplupload.each(arguments, function(arg, i) {\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tplupload.each(arg, function(value, key) {\r\n\t\t\t\t\t\ttarget[key] = value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn target;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Cleans the specified name from national characters (diacritics). The result will be a name with only a-z, 0-9 and _.\r\n\t\t *\r\n\t\t * @method cleanName\r\n\t\t * @param {String} s String to clean up.\r\n\t\t * @return {String} Cleaned string.\r\n\t\t */\r\n\t\tcleanName : function(name) {\r\n\t\t\tvar i, lookup;\r\n\r\n\t\t\t// Replace diacritics\r\n\t\t\tlookup = [\r\n\t\t\t\t/[\\300-\\306]/g, 'A', /[\\340-\\346]/g, 'a', \r\n\t\t\t\t/\\307/g, 'C', /\\347/g, 'c',\r\n\t\t\t\t/[\\310-\\313]/g, 'E', /[\\350-\\353]/g, 'e',\r\n\t\t\t\t/[\\314-\\317]/g, 'I', /[\\354-\\357]/g, 'i',\r\n\t\t\t\t/\\321/g, 'N', /\\361/g, 'n',\r\n\t\t\t\t/[\\322-\\330]/g, 'O', /[\\362-\\370]/g, 'o',\r\n\t\t\t\t/[\\331-\\334]/g, 'U', /[\\371-\\374]/g, 'u'\r\n\t\t\t];\r\n\r\n\t\t\tfor (i = 0; i < lookup.length; i += 2) {\r\n\t\t\t\tname = name.replace(lookup[i], lookup[i + 1]);\r\n\t\t\t}\r\n\r\n\t\t\t// Replace whitespace\r\n\t\t\tname = name.replace(/\\s+/g, '_');\r\n\r\n\t\t\t// Remove anything else\r\n\t\t\tname = name.replace(/[^a-z0-9_\\-\\.]+/gi, '');\r\n\r\n\t\t\treturn name;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Adds a specific upload runtime like for example flash or gears.\r\n\t\t *\r\n\t\t * @method addRuntime\r\n\t\t * @param {String} name Runtime name for example flash.\r\n\t\t * @param {Object} obj Object containing init/destroy method.\r\n\t\t */\r\n\t\taddRuntime : function(name, runtime) {\t\t\t\r\n\t\t\truntime.name = name;\r\n\t\t\truntimes[name] = runtime;\r\n\t\t\truntimes.push(runtime);\r\n\r\n\t\t\treturn runtime;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Generates an unique ID. This is 99.99% unique since it takes the current time and 5 random numbers.\r\n\t\t * The only way a user would be able to get the same ID is if the two persons at the same exact milisecond manages\r\n\t\t * to get 5 the same random numbers between 0-65535 it also uses a counter so each call will be guaranteed to be page unique.\r\n\t\t * It's more probable for the earth to be hit with an ansteriod. You can also if you want to be 100% sure set the plupload.guidPrefix property\r\n\t\t * to an user unique key.\r\n\t\t *\r\n\t\t * @method guid\r\n\t\t * @return {String} Virtually unique id.\r\n\t\t */\r\n\t\tguid : function() {\r\n\t\t\tvar guid = new Date().getTime().toString(32), i;\r\n\r\n\t\t\tfor (i = 0; i < 5; i++) {\r\n\t\t\t\tguid += Math.floor(Math.random() * 65535).toString(32);\r\n\t\t\t}\r\n\r\n\t\t\treturn (plupload.guidPrefix || 'p') + guid + (count++).toString(32);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Builds a full url out of a base URL and an object with items to append as query string items.\r\n\t\t *\r\n\t\t * @param {String} url Base URL to append query string items to.\r\n\t\t * @param {Object} items Name/value object to serialize as a querystring.\r\n\t\t * @return {String} String with url + serialized query string items.\r\n\t\t */\r\n\t\tbuildUrl : function(url, items) {\r\n\t\t\tvar query = '';\r\n\r\n\t\t\tplupload.each(items, function(value, name) {\r\n\t\t\t\tquery += (query ? '&' : '') + encodeURIComponent(name) + '=' + encodeURIComponent(value);\r\n\t\t\t});\r\n\r\n\t\t\tif (query) {\r\n\t\t\t\turl += (url.indexOf('?') > 0 ? '&' : '?') + query;\r\n\t\t\t}\r\n\r\n\t\t\treturn url;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Executes the callback function for each item in array/object. If you return false in the\r\n\t\t * callback it will break the loop.\r\n\t\t *\r\n\t\t * @param {Object} obj Object to iterate.\r\n\t\t * @param {function} callback Callback function to execute for each item.\r\n\t\t */\r\n\t\teach : function(obj, callback) {\r\n\t\t\tvar length, key, i;\r\n\r\n\t\t\tif (obj) {\r\n\t\t\t\tlength = obj.length;\r\n\r\n\t\t\t\tif (length === undef) {\r\n\t\t\t\t\t// Loop object items\r\n\t\t\t\t\tfor (key in obj) {\r\n\t\t\t\t\t\tif (obj.hasOwnProperty(key)) {\r\n\t\t\t\t\t\t\tif (callback(obj[key], key) === false) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Loop array items\r\n\t\t\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t\t\tif (callback(obj[i], i) === false) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Formats the specified number as a size string for example 1024 becomes 1 KB.\r\n\t\t *\r\n\t\t * @method formatSize\r\n\t\t * @param {Number} size Size to format as string.\r\n\t\t * @return {String} Formatted size string.\r\n\t\t */\r\n\t\tformatSize : function(size) {\r\n\t\t\tif (size === undef || /\\D/.test(size)) {\r\n\t\t\t\treturn plupload.translate('N/A');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// GB\r\n\t\t\tif (size > 1073741824) {\r\n\t\t\t\treturn Math.round(size / 1073741824, 1) + \" GB\";\r\n\t\t\t}\r\n\r\n\t\t\t// MB\r\n\t\t\tif (size > 1048576) {\r\n\t\t\t\treturn Math.round(size / 1048576, 1) + \" MB\";\r\n\t\t\t}\r\n\r\n\t\t\t// KB\r\n\t\t\tif (size > 1024) {\r\n\t\t\t\treturn Math.round(size / 1024, 1) + \" KB\";\r\n\t\t\t}\r\n\r\n\t\t\treturn size + \" b\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the absolute x, y position of an Element. The position will be returned in a object with x, y fields.\r\n\t\t *\r\n\t\t * @method getPos\r\n\t\t * @param {Element} node HTML element or element id to get x, y position from.\r\n\t\t * @param {Element} root Optional root element to stop calculations at.\r\n\t\t * @return {object} Absolute position of the specified element object with x, y fields.\r\n\t\t */\r\n\t\t getPos : function(node, root) {\r\n\t\t\tvar x = 0, y = 0, parent, doc = document, nodeRect, rootRect;\r\n\r\n\t\t\tnode = node;\r\n\t\t\troot = root || doc.body;\r\n\r\n\t\t\t// Returns the x, y cordinate for an element on IE 6 and IE 7\r\n\t\t\tfunction getIEPos(node) {\r\n\t\t\t\tvar bodyElm, rect, x = 0, y = 0;\r\n\r\n\t\t\t\tif (node) {\r\n\t\t\t\t\trect = node.getBoundingClientRect();\r\n\t\t\t\t\tbodyElm = doc.compatMode === \"CSS1Compat\" ? doc.documentElement : doc.body;\r\n\t\t\t\t\tx = rect.left + bodyElm.scrollLeft;\r\n\t\t\t\t\ty = rect.top + bodyElm.scrollTop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx : x,\r\n\t\t\t\t\ty : y\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Use getBoundingClientRect on IE 6 and IE 7 but not on IE 8 in standards mode\r\n\t\t\tif (node && node.getBoundingClientRect && (navigator.userAgent.indexOf('MSIE') > 0 && doc.documentMode !== 8)) {\r\n\t\t\t\tnodeRect = getIEPos(node);\r\n\t\t\t\trootRect = getIEPos(root);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx : nodeRect.x - rootRect.x,\r\n\t\t\t\t\ty : nodeRect.y - rootRect.y\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tparent = node;\r\n\t\t\twhile (parent && parent != root && parent.nodeType) {\r\n\t\t\t\tx += parent.offsetLeft || 0;\r\n\t\t\t\ty += parent.offsetTop || 0;\r\n\t\t\t\tparent = parent.offsetParent;\r\n\t\t\t}\r\n\r\n\t\t\tparent = node.parentNode;\r\n\t\t\twhile (parent && parent != root && parent.nodeType) {\r\n\t\t\t\tx -= parent.scrollLeft || 0;\r\n\t\t\t\ty -= parent.scrollTop || 0;\r\n\t\t\t\tparent = parent.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx : x,\r\n\t\t\t\ty : y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the size of the specified node in pixels.\r\n\t\t *\r\n\t\t * @param {Node} node Node to get the size of.\r\n\t\t * @return {Object} Object with a w and h property.\r\n\t\t */\r\n\t\tgetSize : function(node) {\r\n\t\t\treturn {\r\n\t\t\t\tw : node.offsetWidth || node.clientWidth,\r\n\t\t\t\th : node.offsetHeight || node.clientHeight\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Parses the specified size string into a byte value. For example 10kb becomes 10240.\r\n\t\t *\r\n\t\t * @method parseSize\r\n\t\t * @param {String/Number} size String to parse or number to just pass through.\r\n\t\t * @return {Number} Size in bytes.\r\n\t\t */\r\n\t\tparseSize : function(size) {\r\n\t\t\tvar mul;\r\n\r\n\t\t\tif (typeof(size) == 'string') {\r\n\t\t\t\tsize = /^([0-9]+)([mgk]+)$/.exec(size.toLowerCase().replace(/[^0-9mkg]/g, ''));\r\n\t\t\t\tmul = size[2];\r\n\t\t\t\tsize = +size[1];\r\n\r\n\t\t\t\tif (mul == 'g') {\r\n\t\t\t\t\tsize *= 1073741824;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mul == 'm') {\r\n\t\t\t\t\tsize *= 1048576;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mul == 'k') {\r\n\t\t\t\t\tsize *= 1024;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn size;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Encodes the specified string.\r\n\t\t *\r\n\t\t * @method xmlEncode\r\n\t\t * @param {String} s String to encode.\r\n\t\t * @return {String} Encoded string.\r\n\t\t */\r\n\t\txmlEncode : function(str) {\r\n\t\t\treturn str ? ('' + str).replace(xmlEncodeRegExp, function(chr) {\r\n\t\t\t\treturn xmlEncodeChars[chr] ? '&' + xmlEncodeChars[chr] + ';' : chr;\r\n\t\t\t}) : str;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Forces anything into an array.\r\n\t\t *\r\n\t\t * @method toArray\r\n\t\t * @param {Object} obj Object with length field.\r\n\t\t * @return {Array} Array object containing all items.\r\n\t\t */\r\n\t\ttoArray : function(obj) {\r\n\t\t\tvar i, arr = [];\r\n\r\n\t\t\tfor (i = 0; i < obj.length; i++) {\r\n\t\t\t\tarr[i] = obj[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn arr;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Extends the language pack object with new items.\r\n\t\t *\r\n\t\t * @param {Object} pack Language pack items to add.\r\n\t\t * @return {Object} Extended language pack object.\r\n\t\t */\r\n\t\taddI18n : function(pack) {\r\n\t\t\treturn plupload.extend(i18n, pack);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Translates the specified string by checking for the english string in the language pack lookup.\r\n\t\t *\r\n\t\t * @param {String} str String to look for.\r\n\t\t * @reutrn {String} Translated string or the input string if it wasn't found.\r\n\t\t */\r\n\t\ttranslate : function(str) {\r\n\t\t\treturn i18n[str] || str;\r\n\t\t},\r\n\t\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Checks if specified DOM element has specified class.\r\n\t\t *\r\n\t\t * @param {Object} obj DOM element like object to add handler to.\r\n\t\t * @param {String} name Class name\r\n\t\t */\r\n\t\thasClass : function(obj, name) {\r\n\t\t\tvar regExp;\r\n\t\t\r\n\t\t\tif (obj.className == '') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tregExp = new RegExp(\"(^|\\\\s+)\"+name+\"(\\\\s+|$)\");\r\n\r\n\t\t\treturn regExp.test(obj.className);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Adds specified className to specified DOM element.\r\n\t\t *\r\n\t\t * @param {Object} obj DOM element like object to add handler to.\r\n\t\t * @param {String} name Class name\r\n\t\t */\r\n\t\taddClass : function(obj, name) {\r\n\t\t\tif (!plupload.hasClass(obj, name)) {\r\n\t\t\t\tobj.className = obj.className == '' ? name : obj.className.replace(/\\s+$/, '')+' '+name;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Removes specified className from specified DOM element.\r\n\t\t *\r\n\t\t * @param {Object} obj DOM element like object to add handler to.\r\n\t\t * @param {String} name Class name\r\n\t\t */\r\n\t\tremoveClass : function(obj, name) {\r\n\t\t\tvar regExp = new RegExp(\"(^|\\\\s+)\"+name+\"(\\\\s+|$)\");\r\n\t\t\t\r\n\t\t\tobj.className = obj.className.replace(regExp, function($0, $1, $2) {\r\n\t\t\t\treturn $1 === ' ' && $2 === ' ' ? ' ' : '';\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\r\n\t\t/**\r\n\t\t * Adds an event handler to the specified object and store reference to the handler\r\n\t\t * in objects internal Plupload registry (@see removeEvent).\r\n\t\t *\r\n\t\t * @param {Object} obj DOM element like object to add handler to.\r\n\t\t * @param {String} name Name to add event listener to.\r\n\t\t * @param {Function} callback Function to call when event occurs.\r\n\t\t * @param {String} (optional) key that might be used to add specifity to the event record.\r\n\t\t */\r\n\t\taddEvent : function(obj, name, callback) {\r\n\t\t\tvar func, events, types, key;\r\n\t\t\t\r\n\t\t\t// if passed in, event will be locked with this key - one would need to provide it to removeEvent\r\n\t\t\tkey = arguments[3];\r\n\t\t\t\t\t\t\r\n\t\t\tname = name.toLowerCase();\r\n\t\t\t\t\t\t\r\n\t\t\t// Initialize unique identifier if needed\r\n\t\t\tif (uid === undef) {\r\n\t\t\t\tuid = 'Plupload_' + plupload.guid();\r\n\t\t\t}\r\n\r\n\t\t\t// Add event listener\r\n\t\t\tif (obj.attachEvent) {\r\n\t\t\t\t\r\n\t\t\t\tfunc = function() {\r\n\t\t\t\t\tvar evt = window.event;\r\n\r\n\t\t\t\t\tif (!evt.target) {\r\n\t\t\t\t\t\tevt.target = evt.srcElement;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tevt.preventDefault = preventDefault;\r\n\t\t\t\t\tevt.stopPropagation = stopPropagation;\r\n\r\n\t\t\t\t\tcallback(evt);\r\n\t\t\t\t};\r\n\t\t\t\tobj.attachEvent('on' + name, func);\r\n\t\t\t\t\r\n\t\t\t} else if (obj.addEventListener) {\r\n\t\t\t\tfunc = callback;\r\n\t\t\t\t\r\n\t\t\t\tobj.addEventListener(name, func, false);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Log event handler to objects internal Plupload registry\r\n\t\t\tif (obj[uid] === undef) {\r\n\t\t\t\tobj[uid] = plupload.guid();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!eventhash.hasOwnProperty(obj[uid])) {\r\n\t\t\t\teventhash[obj[uid]] = {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tevents = eventhash[obj[uid]];\r\n\t\t\t\r\n\t\t\tif (!events.hasOwnProperty(name)) {\r\n\t\t\t\tevents[name] = [];\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\tevents[name].push({\r\n\t\t\t\tfunc: func,\r\n\t\t\t\torig: callback, // store original callback for IE\r\n\t\t\t\tkey: key\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove event handler from the specified object. If third argument (callback)\r\n\t\t * is not specified remove all events with the specified name.\r\n\t\t *\r\n\t\t * @param {Object} obj DOM element to remove event listener(s) from.\r\n\t\t * @param {String} name Name of event listener to remove.\r\n\t\t * @param {Function|String} (optional) might be a callback or unique key to match.\r\n\t\t */\r\n\t\tremoveEvent: function(obj, name) {\r\n\t\t\tvar type, callback, key,\r\n\t\t\t\t\r\n\t\t\t\t// check if object is empty\r\n\t\t\t\tisEmptyObj = function(obj) {\r\n\t\t\t\t\tfor (var prop in obj) {\r\n\t\t\t\t\t\treturn false;\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t};\r\n\t\t\t\r\n\t\t\t// match the handler either by callback or by key\t\r\n\t\t\tif (typeof(arguments[2]) == \"function\") {\r\n\t\t\t\tcallback = arguments[2];\r\n\t\t\t} else {\r\n\t\t\t\tkey = arguments[2];\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\tname = name.toLowerCase();\r\n\t\t\t\r\n\t\t\tif (obj[uid] && eventhash[obj[uid]] && eventhash[obj[uid]][name]) {\r\n\t\t\t\ttype = eventhash[obj[uid]][name];\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tfor (var i=type.length-1; i>=0; i--) {\r\n\t\t\t\t// undefined or not, key should match\t\t\t\r\n\t\t\t\tif (type[i].key === key || type[i].orig === callback) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif (obj.detachEvent) {\r\n\t\t\t\t\t\tobj.detachEvent('on'+name, type[i].func);\r\n\t\t\t\t\t} else if (obj.removeEventListener) {\r\n\t\t\t\t\t\tobj.removeEventListener(name, type[i].func, false);\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttype[i].orig = null;\r\n\t\t\t\t\ttype[i].func = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\ttype.splice(i, 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// If callback was passed we are done here, otherwise proceed\r\n\t\t\t\t\tif (callback !== undef) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\t// If event array got empty, remove it\r\n\t\t\tif (!type.length) {\r\n\t\t\t\tdelete eventhash[obj[uid]][name];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// If Plupload registry has become empty, remove it\r\n\t\t\tif (isEmptyObj(eventhash[obj[uid]])) {\r\n\t\t\t\tdelete eventhash[obj[uid]];\r\n\t\t\t\t\r\n\t\t\t\t// IE doesn't let you remove DOM object property with - delete\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdelete obj[uid];\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tobj[uid] = undef;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove all kind of events from the specified object\r\n\t\t *\r\n\t\t * @param {Object} obj DOM element to remove event listeners from.\r\n\t\t * @param {String} (optional) unique key to match, when removing events.\r\n\t\t */\r\n\t\tremoveAllEvents: function(obj) {\r\n\t\t\tvar key = arguments[1];\r\n\t\t\t\r\n\t\t\tif (obj[uid] === undef || !obj[uid]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tplupload.each(eventhash[obj[uid]], function(events, name) {\r\n\t\t\t\tplupload.removeEvent(obj, name, key);\r\n\t\t\t});\t\t\r\n\t\t}\t\t\r\n\t};\r\n\t\r\n\r\n\t/**\r\n\t * Uploader class, an instance of this class will be created for each upload field.\r\n\t *\r\n\t * @example\r\n\t * var uploader = new plupload.Uploader({\r\n\t *     runtimes : 'gears,html5,flash',\r\n\t *     browse_button : 'button_id'\r\n\t * });\r\n\t *\r\n\t * uploader.bind('Init', function(up) {\r\n\t *     alert('Supports drag/drop: ' + (!!up.features.dragdrop));\r\n\t * });\r\n\t *\r\n\t * uploader.bind('FilesAdded', function(up, files) {\r\n\t *     alert('Selected files: ' + files.length);\r\n\t * });\r\n\t *\r\n\t * uploader.bind('QueueChanged', function(up) {\r\n\t *     alert('Queued files: ' + uploader.files.length);\r\n\t * });\r\n\t *\r\n\t * uploader.init();\r\n\t *\r\n\t * @class plupload.Uploader\r\n\t */\r\n\r\n\t/**\r\n\t * Constructs a new uploader instance.\r\n\t *\r\n\t * @constructor\r\n\t * @method Uploader\r\n\t * @param {Object} settings Initialization settings, to be used by the uploader instance and runtimes.\r\n\t */\r\n\tplupload.Uploader = function(settings) {\r\n\t\tvar events = {}, total, files = [], startTime;\r\n\r\n\t\t// Inital total state\r\n\t\ttotal = new plupload.QueueProgress();\r\n\r\n\t\t// Default settings\r\n\t\tsettings = plupload.extend({\r\n\t\t\tchunk_size : 0,\r\n\t\t\tmultipart : true,\r\n\t\t\tmulti_selection : true,\r\n\t\t\tfile_data_name : 'file',\r\n\t\t\tfilters : []\r\n\t\t}, settings);\r\n\r\n\t\t// Private methods\r\n\t\tfunction uploadNext() {\r\n\t\t\tvar file, count = 0, i;\r\n\r\n\t\t\tif (this.state == plupload.STARTED) {\r\n\t\t\t\t// Find first QUEUED file\r\n\t\t\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\t\t\tif (!file && files[i].status == plupload.QUEUED) {\r\n\t\t\t\t\t\tfile = files[i];\r\n\t\t\t\t\t\tfile.status = plupload.UPLOADING;\r\n\t\t\t\t\t\tthis.trigger(\"BeforeUpload\", file);\r\n\t\t\t\t\t\tthis.trigger(\"UploadFile\", file);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// All files are DONE or FAILED\r\n\t\t\t\tif (count == files.length) {\r\n\t\t\t\t\tthis.trigger(\"UploadComplete\", files);\r\n\t\t\t\t\tthis.stop();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction calc() {\r\n\t\t\tvar i, file;\r\n\r\n\t\t\t// Reset stats\r\n\t\t\ttotal.reset();\r\n\r\n\t\t\t// Check status, size, loaded etc on all files\r\n\t\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\t\tfile = files[i];\r\n\r\n\t\t\t\tif (file.size !== undef) {\r\n\t\t\t\t\ttotal.size += file.size;\r\n\t\t\t\t\ttotal.loaded += file.loaded;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttotal.size = undef;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (file.status == plupload.DONE) {\r\n\t\t\t\t\ttotal.uploaded++;\r\n\t\t\t\t} else if (file.status == plupload.FAILED) {\r\n\t\t\t\t\ttotal.failed++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttotal.queued++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we couldn't calculate a total file size then use the number of files to calc percent\r\n\t\t\tif (total.size === undef) {\r\n\t\t\t\ttotal.percent = files.length > 0 ? Math.ceil(total.uploaded / files.length * 100) : 0;\r\n\t\t\t} else {\r\n\t\t\t\ttotal.bytesPerSec = Math.ceil(total.loaded / ((+new Date() - startTime || 1) / 1000.0));\r\n\t\t\t\ttotal.percent = total.size > 0 ? Math.ceil(total.loaded / total.size * 100) : 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add public methods\r\n\t\tplupload.extend(this, {\r\n\t\t\t/**\r\n\t\t\t * Current state of the total uploading progress. This one can either be plupload.STARTED or plupload.STOPPED.\r\n\t\t\t * These states are controlled by the stop/start methods. The default value is STOPPED.\r\n\t\t\t *\r\n\t\t\t * @property state\r\n\t\t\t * @type Number\r\n\t\t\t */\r\n\t\t\tstate : plupload.STOPPED,\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Current runtime name.\r\n\t\t\t *\r\n\t\t\t * @property runtime\r\n\t\t\t * @type String\r\n\t\t\t */\r\n\t\t\truntime: '',\r\n\r\n\t\t\t/**\r\n\t\t\t * Map of features that are available for the uploader runtime. Features will be filled\r\n\t\t\t * before the init event is called, these features can then be used to alter the UI for the end user.\r\n\t\t\t * Some of the current features that might be in this map is: dragdrop, chunks, jpgresize, pngresize.\r\n\t\t\t *\r\n\t\t\t * @property features\r\n\t\t\t * @type Object\r\n\t\t\t */\r\n\t\t\tfeatures : {},\r\n\r\n\t\t\t/**\r\n\t\t\t * Current upload queue, an array of File instances.\r\n\t\t\t *\r\n\t\t\t * @property files\r\n\t\t\t * @type Array\r\n\t\t\t * @see plupload.File\r\n\t\t\t */\r\n\t\t\tfiles : files,\r\n\r\n\t\t\t/**\r\n\t\t\t * Object with name/value settings.\r\n\t\t\t *\r\n\t\t\t * @property settings\r\n\t\t\t * @type Object\r\n\t\t\t */\r\n\t\t\tsettings : settings,\r\n\r\n\t\t\t/**\r\n\t\t\t * Total progess information. How many files has been uploaded, total percent etc.\r\n\t\t\t *\r\n\t\t\t * @property total\r\n\t\t\t * @type plupload.QueueProgress\r\n\t\t\t */\r\n\t\t\ttotal : total,\r\n\r\n\t\t\t/**\r\n\t\t\t * Unique id for the Uploader instance.\r\n\t\t\t *\r\n\t\t\t * @property id\r\n\t\t\t * @type String\r\n\t\t\t */\r\n\t\t\tid : plupload.guid(),\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes the Uploader instance and adds internal event listeners.\r\n\t\t\t *\r\n\t\t\t * @method init\r\n\t\t\t */\r\n\t\t\tinit : function() {\r\n\t\t\t\tvar self = this, i, runtimeList, a, runTimeIndex = 0, items;\r\n\r\n\t\t\t\tif (typeof(settings.preinit) == \"function\") {\r\n\t\t\t\t\tsettings.preinit(self);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tplupload.each(settings.preinit, function(func, name) {\r\n\t\t\t\t\t\tself.bind(name, func);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsettings.page_url = settings.page_url || document.location.pathname.replace(/\\/[^\\/]+$/g, '/');\r\n\r\n\t\t\t\t// If url is relative force it absolute to the current page\r\n\t\t\t\tif (!/^(\\w+:\\/\\/|\\/)/.test(settings.url)) {\r\n\t\t\t\t\tsettings.url = settings.page_url + settings.url;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convert settings\r\n\t\t\t\tsettings.chunk_size = plupload.parseSize(settings.chunk_size);\r\n\t\t\t\tsettings.max_file_size = plupload.parseSize(settings.max_file_size);\r\n\r\n\t\t\t\t// Add files to queue\r\n\t\t\t\tself.bind('FilesAdded', function(up, selected_files) {\r\n\t\t\t\t\tvar i, file, count = 0, extensionsRegExp, filters = settings.filters;\r\n\r\n\t\t\t\t\t// Convert extensions to regexp\r\n\t\t\t\t\tif (filters && filters.length) {\r\n\t\t\t\t\t\textensionsRegExp = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tplupload.each(filters, function(filter) {\r\n\t\t\t\t\t\t\tplupload.each(filter.extensions.split(/,/), function(ext) {\r\n\t\t\t\t\t\t\t\textensionsRegExp.push('\\\\.' + ext.replace(new RegExp('[' + ('/^$.*+?|()[]{}\\\\'.replace(/./g, '\\\\$&')) + ']', 'g'), '\\\\$&'));\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\textensionsRegExp = new RegExp(extensionsRegExp.join('|') + '$', 'i');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (i = 0; i < selected_files.length; i++) {\r\n\t\t\t\t\t\tfile = selected_files[i];\r\n\t\t\t\t\t\tfile.loaded = 0;\r\n\t\t\t\t\t\tfile.percent = 0;\r\n\t\t\t\t\t\tfile.status = plupload.QUEUED;\r\n\r\n\t\t\t\t\t\t// Invalid file extension\r\n\t\t\t\t\t\t//if (extensionsRegExp && !extensionsRegExp.test(file.name)) {\r\n\r\n\t\t\t\t\t\t//\tup.trigger('Error', {\r\n\t\t\t\t\t\t//\t\tcode : plupload.FILE_EXTENSION_ERROR,\r\n\t\t\t\t\t\t//\t\tmessage : plupload.translate('File extension error.'),\r\n\t\t\t\t\t\t//\t\tfile : file\r\n\t\t\t\t\t\t//\t});\r\n\r\n\t\t\t\t\t\t//\tcontinue;\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\t// Invalid file size\r\n\t\t\t\t\t\tif (file.size !== undef && file.size > settings.max_file_size) {\r\n\t\t\t\t\t\t\tup.trigger('Error', {\r\n\t\t\t\t\t\t\t\tcode : plupload.FILE_SIZE_ERROR,\r\n\t\t\t\t\t\t\t\tmessage : plupload.translate('File size error.'),\r\n\t\t\t\t\t\t\t\tfile : file\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add valid file to list\r\n\t\t\t\t\t\tfiles.push(file);\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only trigger QueueChanged event if any files where added\r\n\t\t\t\t\tif (count) {\r\n\t\t\t\t\t\tdelay(function() {\r\n\t\t\t\t\t\t\tself.trigger(\"QueueChanged\");\r\n\t\t\t\t\t\t\tself.refresh();\r\n\t\t\t\t\t\t}, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn false; // Stop the FilesAdded event from immediate propagation\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Generate unique target filenames\r\n\t\t\t\tif (settings.unique_names) {\r\n\t\t\t\t\tself.bind(\"UploadFile\", function(up, file) {\r\n\t\t\t\t\t\tvar matches = file.name.match(/\\.([^.]+)$/), ext = \"tmp\";\r\n\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\text = matches[1];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfile.target_name = file.id + '.' + ext;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.bind('UploadProgress', function(up, file) {\r\n\t\t\t\t\tfile.percent = file.size > 0 ? Math.ceil(file.loaded / file.size * 100) : 100;\r\n\t\t\t\t\tcalc();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself.bind('StateChanged', function(up) {\r\n\t\t\t\t\tif (up.state == plupload.STARTED) {\r\n\t\t\t\t\t\t// Get start time to calculate bps\r\n\t\t\t\t\t\tstartTime = (+new Date());\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself.bind('QueueChanged', calc);\r\n\r\n\t\t\t\tself.bind(\"Error\", function(up, err) {\r\n\t\t\t\t\t// Set failed status if an error occured on a file\r\n\t\t\t\t\tif (err.file) {\r\n\t\t\t\t\t\terr.file.status = plupload.FAILED;\r\n\t\t\t\t\t\tcalc();\r\n\r\n\t\t\t\t\t\t// Upload next file but detach it from the error event\r\n\t\t\t\t\t\t// since other custom listeners might want to stop the queue\r\n\t\t\t\t\t\tif (up.state == plupload.STARTED) {\r\n\t\t\t\t\t\t\tdelay(function() {\r\n\t\t\t\t\t\t\t\tuploadNext.call(self);\r\n\t\t\t\t\t\t\t}, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself.bind(\"FileUploaded\", function(up, file) {\r\n\t\t\t\t\tfile.status = plupload.DONE;\r\n\t\t\t\t\tfile.loaded = file.size;\r\n\t\t\t\t\tup.trigger('UploadProgress', file);\r\n\r\n\t\t\t\t\t// Upload next file but detach it from the error event\r\n\t\t\t\t\t// since other custom listeners might want to stop the queue\r\n\t\t\t\t\tdelay(function() {\r\n\t\t\t\t\t\tuploadNext.call(self);\r\n\t\t\t\t\t}, 1);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Setup runtimeList\r\n\t\t\t\tif (settings.runtimes) {\r\n\t\t\t\t\truntimeList = [];\r\n\t\t\t\t\titems = settings.runtimes.split(/\\s?,\\s?/);\r\n\r\n\t\t\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\t\t\tif (runtimes[items[i]]) {\r\n\t\t\t\t\t\t\truntimeList.push(runtimes[items[i]]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\truntimeList = runtimes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Call init on each runtime in sequence\r\n\t\t\t\tfunction callNextInit() {\r\n\t\t\t\t\tvar runtime = runtimeList[runTimeIndex++], features, requiredFeatures, i;\r\n\r\n\t\t\t\t\tif (runtime) {\r\n\t\t\t\t\t\tfeatures = runtime.getFeatures();\r\n\r\n\t\t\t\t\t\t// Check if runtime supports required features\r\n\t\t\t\t\t\trequiredFeatures = self.settings.required_features;\r\n\t\t\t\t\t\tif (requiredFeatures) {\r\n\t\t\t\t\t\t\trequiredFeatures = requiredFeatures.split(',');\r\n\r\n\t\t\t\t\t\t\tfor (i = 0; i < requiredFeatures.length; i++) {\r\n\t\t\t\t\t\t\t\t// Specified feature doesn't exist\r\n\t\t\t\t\t\t\t\tif (!features[requiredFeatures[i]]) {\r\n\t\t\t\t\t\t\t\t\tcallNextInit();\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Try initializing the runtime\r\n\t\t\t\t\t\truntime.init(self, function(res) {\r\n\t\t\t\t\t\t\tif (res && res.success) {\r\n\t\t\t\t\t\t\t\t// Successful initialization\r\n\t\t\t\t\t\t\t\tself.features = features;\r\n\t\t\t\t\t\t\t\tself.runtime = runtime.name;\r\n\t\t\t\t\t\t\t\tself.trigger('Init', {runtime : runtime.name});\r\n\t\t\t\t\t\t\t\tself.trigger('PostInit');\r\n\t\t\t\t\t\t\t\tself.refresh();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcallNextInit();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Trigger an init error if we run out of runtimes\r\n\t\t\t\t\t\tself.trigger('Error', {\r\n\t\t\t\t\t\t\tcode : plupload.INIT_ERROR,\r\n\t\t\t\t\t\t\tmessage : plupload.translate('Init error.')\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallNextInit();\r\n\r\n\t\t\t\tif (typeof(settings.init) == \"function\") {\r\n\t\t\t\t\tsettings.init(self);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tplupload.each(settings.init, function(func, name) {\r\n\t\t\t\t\t\tself.bind(name, func);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Refreshes the upload instance by dispatching out a refresh event to all runtimes.\r\n\t\t\t * This would for example reposition flash/silverlight shims on the page.\r\n\t\t\t *\r\n\t\t\t * @method refresh\r\n\t\t\t */\r\n\t\t\trefresh : function() {\r\n\t\t\t\tthis.trigger(\"Refresh\");\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Starts uploading the queued files.\r\n\t\t\t *\r\n\t\t\t * @method start\r\n\t\t\t */\r\n\t\t\tstart : function() {\r\n\t\t\t\tif (this.state != plupload.STARTED) {\r\n\t\t\t\t\tthis.state = plupload.STARTED;\r\n\t\t\t\t\tthis.trigger(\"StateChanged\");\r\n\r\n\t\t\t\t\tuploadNext.call(this);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Stops the upload of the queued files.\r\n\t\t\t *\r\n\t\t\t * @method stop\r\n\t\t\t */\r\n\t\t\tstop : function() {\r\n\t\t\t\tif (this.state != plupload.STOPPED) {\r\n\t\t\t\t\tthis.state = plupload.STOPPED;\r\n\t\t\t\t\tthis.trigger(\"StateChanged\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns the specified file object by id.\r\n\t\t\t *\r\n\t\t\t * @method getFile\r\n\t\t\t * @param {String} id File id to look for.\r\n\t\t\t * @return {plupload.File} File object or undefined if it wasn't found;\r\n\t\t\t */\r\n\t\t\tgetFile : function(id) {\r\n\t\t\t\tvar i;\r\n\r\n\t\t\t\tfor (i = files.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (files[i].id === id) {\r\n\t\t\t\t\t\treturn files[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes a specific file.\r\n\t\t\t *\r\n\t\t\t * @method removeFile\r\n\t\t\t * @param {plupload.File} file File to remove from queue.\r\n\t\t\t */\r\n\t\t\tremoveFile : function(file) {\r\n\t\t\t\tvar i;\r\n\r\n\t\t\t\tfor (i = files.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (files[i].id === file.id) {\r\n\t\t\t\t\t\treturn this.splice(i, 1)[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes part of the queue and returns the files removed. This will also trigger the FilesRemoved and QueueChanged events.\r\n\t\t\t *\r\n\t\t\t * @method splice\r\n\t\t\t * @param {Number} start (Optional) Start index to remove from.\r\n\t\t\t * @param {Number} length (Optional) Lengh of items to remove.\r\n\t\t\t * @return {Array} Array of files that was removed.\r\n\t\t\t */\r\n\t\t\tsplice : function(start, length) {\r\n\t\t\t\tvar removed;\r\n\r\n\t\t\t\t// Splice and trigger events\r\n\t\t\t\tremoved = files.splice(start === undef ? 0 : start, length === undef ? files.length : length);\r\n\r\n\t\t\t\tthis.trigger(\"FilesRemoved\", removed);\r\n\t\t\t\tthis.trigger(\"QueueChanged\");\r\n\r\n\t\t\t\treturn removed;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Dispatches the specified event name and it's arguments to all listeners.\r\n\t\t\t *\r\n\t\t\t *\r\n\t\t\t * @method trigger\r\n\t\t\t * @param {String} name Event name to fire.\r\n\t\t\t * @param {Object..} Multiple arguments to pass along to the listener functions.\r\n\t\t\t */\r\n\t\t\ttrigger : function(name) {\r\n\t\t\t\tvar list = events[name.toLowerCase()], i, args;\r\n\r\n\t\t\t\t// console.log(name, arguments);\r\n\r\n\t\t\t\tif (list) {\r\n\t\t\t\t\t// Replace name with sender in args\r\n\t\t\t\t\targs = Array.prototype.slice.call(arguments);\r\n\t\t\t\t\targs[0] = this;\r\n\r\n\t\t\t\t\t// Dispatch event to all listeners\r\n\t\t\t\t\tfor (i = 0; i < list.length; i++) {\r\n\t\t\t\t\t\t// Fire event, break chain if false is returned\r\n\t\t\t\t\t\tif (list[i].func.apply(list[i].scope, args) === false) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adds an event listener by name.\r\n\t\t\t *\r\n\t\t\t * @method bind\r\n\t\t\t * @param {String} name Event name to listen for.\r\n\t\t\t * @param {function} func Function to call ones the event gets fired.\r\n\t\t\t * @param {Object} scope Optional scope to execute the specified function in.\r\n\t\t\t */\r\n\t\t\tbind : function(name, func, scope) {\r\n\t\t\t\tvar list;\r\n\r\n\t\t\t\tname = name.toLowerCase();\r\n\t\t\t\tlist = events[name] || [];\r\n\t\t\t\tlist.push({func : func, scope : scope || this});\r\n\t\t\t\tevents[name] = list;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes the specified event listener.\r\n\t\t\t *\r\n\t\t\t * @method unbind\r\n\t\t\t * @param {String} name Name of event to remove.\r\n\t\t\t * @param {function} func Function to remove from listener.\r\n\t\t\t */\r\n\t\t\tunbind : function(name) {\r\n\t\t\t\tname = name.toLowerCase();\r\n\r\n\t\t\t\tvar list = events[name], i, func = arguments[1];\r\n\r\n\t\t\t\tif (list) {\r\n\t\t\t\t\tif (func !== undef) {\r\n\t\t\t\t\t\tfor (i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tif (list[i].func === func) {\r\n\t\t\t\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlist = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// delete event list if it has become empty\r\n\t\t\t\t\tif (!list.length) {\r\n\t\t\t\t\t\tdelete events[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes all event listeners.\r\n\t\t\t *\r\n\t\t\t * @method unbindAll\r\n\t\t\t */\r\n\t\t\tunbindAll : function() {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\t\r\n\t\t\t\tplupload.each(events, function(list, name) {\r\n\t\t\t\t\tself.unbind(name);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Destroys Plupload instance and cleans after itself.\r\n\t\t\t *\r\n\t\t\t * @method destroy\r\n\t\t\t */\r\n\t\t\tdestroy : function() {\t\t\t\t\t\t\t\r\n\t\t\t\tthis.trigger('Destroy');\r\n\t\t\t\t\r\n\t\t\t\t// Clean-up after uploader itself\r\n\t\t\t\tthis.unbindAll();\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when the current RunTime has been initialized.\r\n\t\t\t *\r\n\t\t\t * @event Init\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires after the init event incase you need to perform actions there.\r\n\t\t\t *\r\n\t\t\t * @event PostInit\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when the silverlight/flash or other shim needs to move.\r\n\t\t\t *\r\n\t\t\t * @event Refresh\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t */\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Fires when the overall state is being changed for the upload queue.\r\n\t\t\t *\r\n\t\t\t * @event StateChanged\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when a file is to be uploaded by the runtime.\r\n\t\t\t *\r\n\t\t\t * @event UploadFile\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {plupload.File} file File to be uploaded.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when just before a file is uploaded. This event enables you to override settings\r\n\t\t\t * on the uploader instance before the file is uploaded.\r\n\t\t\t *\r\n\t\t\t * @event BeforeUpload\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {plupload.File} file File to be uploaded.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when the file queue is changed. In other words when files are added/removed to the files array of the uploader instance.\r\n\t\t\t *\r\n\t\t\t * @event QueueChanged\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t */\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Fires while a file is being uploaded. Use this event to update the current file upload progress.\r\n\t\t\t *\r\n\t\t\t * @event UploadProgress\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {plupload.File} file File that is currently being uploaded.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires while a file was removed from queue.\r\n\t\t\t *\r\n\t\t\t * @event FilesRemoved\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {Array} files Array of files that got removed.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires while when the user selects files to upload.\r\n\t\t\t *\r\n\t\t\t * @event FilesAdded\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {Array} files Array of file objects that was added to queue/selected by the user.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when a file is successfully uploaded.\r\n\t\t\t *\r\n\t\t\t * @event FileUploaded\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {plupload.File} file File that was uploaded.\r\n\t\t\t * @param {Object} response Object with response properties.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when file chunk is uploaded.\r\n\t\t\t *\r\n\t\t\t * @event ChunkUploaded\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {plupload.File} file File that the chunk was uploaded for.\r\n\t\t\t * @param {Object} response Object with response properties.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when all files in a queue are uploaded.\r\n\t\t\t *\r\n\t\t\t * @event UploadComplete\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {Array} files Array of file objects that was added to queue/selected by the user.\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when a error occurs.\r\n\t\t\t *\r\n\t\t\t * @event Error\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t * @param {Object} error Contains code, message and sometimes file and other details.\r\n\t\t\t */\r\n\t\t\t \r\n\t\t\t /**\r\n\t\t\t * Fires when destroy method is called.\r\n\t\t\t *\r\n\t\t\t * @event Destroy\r\n\t\t\t * @param {plupload.Uploader} uploader Uploader instance sending the event.\r\n\t\t\t */\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * File instance.\r\n\t *\r\n\t * @class plupload.File\r\n\t * @param {String} name Name of the file.\r\n\t * @param {Number} size File size.\r\n\t */\r\n\r\n\t/**\r\n\t * Constructs a new file instance.\r\n\t *\r\n\t * @constructor\r\n\t * @method File\r\n\t * @param {String} id Unique file id.\r\n\t * @param {String} name File name.\r\n\t * @param {Number} size File size in bytes.\r\n\t */\r\n\tplupload.File = function(id, name, size) {\r\n\t\tvar self = this; // Setup alias for self to reduce code size when it's compressed\r\n\r\n\t\t/**\r\n\t\t * File id this is a globally unique id for the specific file.\r\n\t\t *\r\n\t\t * @property id\r\n\t\t * @type String\r\n\t\t */\r\n\t\tself.id = id;\r\n\r\n\t\t/**\r\n\t\t * File name for example \"myfile.gif\".\r\n\t\t *\r\n\t\t * @property name\r\n\t\t * @type String\r\n\t\t */\r\n\t\tself.name = name;\r\n\r\n\t\t/**\r\n\t\t * File size in bytes.\r\n\t\t *\r\n\t\t * @property size\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.size = size;\r\n\r\n\t\t/**\r\n\t\t * Number of bytes uploaded of the files total size.\r\n\t\t *\r\n\t\t * @property loaded\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.loaded = 0;\r\n\r\n\t\t/**\r\n\t\t * Number of percentage uploaded of the file.\r\n\t\t *\r\n\t\t * @property percent\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.percent = 0;\r\n\r\n\t\t/**\r\n\t\t * Status constant matching the plupload states QUEUED, UPLOADING, FAILED, DONE.\r\n\t\t *\r\n\t\t * @property status\r\n\t\t * @type Number\r\n\t\t * @see plupload\r\n\t\t */\r\n\t\tself.status = 0;\r\n\t};\r\n\r\n\t/**\r\n\t * Runtime class gets implemented by each upload runtime.\r\n\t *\r\n\t * @class plupload.Runtime\r\n\t * @static\r\n\t */\r\n\tplupload.Runtime = function() {\r\n\t\t/**\r\n\t\t * Returns a list of supported features for the runtime.\r\n\t\t *\r\n\t\t * @return {Object} Name/value object with supported features.\r\n\t\t */\r\n\t\tthis.getFeatures = function() {\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initializes the upload runtime. This method should add necessary items to the DOM and register events needed for operation. \r\n\t\t *\r\n\t\t * @method init\r\n\t\t * @param {plupload.Uploader} uploader Uploader instance that needs to be initialized.\r\n\t\t * @param {function} callback Callback function to execute when the runtime initializes or fails to initialize. If it succeeds an object with a parameter name success will be set to true.\r\n\t\t */\r\n\t\tthis.init = function(uploader, callback) {\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Runtime class gets implemented by each upload runtime.\r\n\t *\r\n\t * @class plupload.QueueProgress\r\n\t */\r\n\r\n\t/**\r\n\t * Constructs a queue progress.\r\n\t *\r\n\t * @constructor\r\n\t * @method QueueProgress\r\n\t */\r\n\t plupload.QueueProgress = function() {\r\n\t\tvar self = this; // Setup alias for self to reduce code size when it's compressed\r\n\r\n\t\t/**\r\n\t\t * Total queue file size.\r\n\t\t *\r\n\t\t * @property size\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.size = 0;\r\n\r\n\t\t/**\r\n\t\t * Total bytes uploaded.\r\n\t\t *\r\n\t\t * @property loaded\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.loaded = 0;\r\n\r\n\t\t/**\r\n\t\t * Number of files uploaded.\r\n\t\t *\r\n\t\t * @property uploaded\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.uploaded = 0;\r\n\r\n\t\t/**\r\n\t\t * Number of files failed to upload.\r\n\t\t *\r\n\t\t * @property failed\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.failed = 0;\r\n\r\n\t\t/**\r\n\t\t * Number of files yet to be uploaded.\r\n\t\t *\r\n\t\t * @property queued\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.queued = 0;\r\n\r\n\t\t/**\r\n\t\t * Total percent of the uploaded bytes.\r\n\t\t *\r\n\t\t * @property percent\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.percent = 0;\r\n\r\n\t\t/**\r\n\t\t * Bytes uploaded per second.\r\n\t\t *\r\n\t\t * @property bytesPerSec\r\n\t\t * @type Number\r\n\t\t */\r\n\t\tself.bytesPerSec = 0;\r\n\r\n\t\t/**\r\n\t\t * Resets the progress to it's initial values.\r\n\t\t *\r\n\t\t * @method reset\r\n\t\t */\r\n\t\tself.reset = function() {\r\n\t\t\tself.size = self.loaded = self.uploaded = self.failed = self.queued = self.percent = self.bytesPerSec = 0;\r\n\t\t};\r\n\t};\r\n\r\n\t// Create runtimes namespace\r\n\tplupload.runtimes = {};\r\n\r\n\t// Expose plupload namespace\r\n\twindow.plupload = plupload;\r\n})();\r\n","/**\r\n * plupload.gears.js\r\n *\r\n * Copyright 2009, Moxiecode Systems AB\r\n * Released under GPL License.\r\n *\r\n * License: http://www.plupload.com/license\r\n * Contributing: http://www.plupload.com/contributing\r\n */\r\n\r\n// JSLint defined globals\r\n/*global window:false, document:false, plupload:false, google:false */\r\n\r\n(function(window, document, plupload, undef) {\r\n\tvar blobs = {};\r\n\r\n\tfunction scaleImage(image_blob, width, height, quality, mime) {\r\n\t\tvar percentage, canvas, context, scale;\r\n\r\n\t\t// Setup canvas and scale\r\n\t\tcanvas = google.gears.factory.create('beta.canvas');\r\n\t\ttry {\r\n\t\t\tcanvas.decode(image_blob);\r\n\t\t\tscale = Math.min(width / canvas.width, height / canvas.height);\r\n\r\n\t\t\tif (scale < 1) {\r\n\t\t\t\tcanvas.resize(Math.round(canvas.width * scale), Math.round(canvas.height * scale));\r\n\r\n\t\t\t\treturn canvas.encode(mime, {quality : quality / 100});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// Ignore for example when a user uploads a file that can't be decoded\r\n\t\t}\r\n\r\n\t\treturn image_blob;\r\n\t}\r\n\r\n\t/**\r\n\t * Gears implementation. This runtime supports these features: dragdrop, jpgresize, pngresize, chunks.\r\n\t *\r\n\t * @static\r\n\t * @class plupload.runtimes.Gears\r\n\t * @extends plupload.Runtime\r\n\t */\r\n\tplupload.runtimes.Gears = plupload.addRuntime(\"gears\", {\r\n\t\t/**\r\n\t\t * Returns a list of supported features for the runtime.\r\n\t\t *\r\n\t\t * @return {Object} Name/value object with supported features.\r\n\t\t */\r\n\t\tgetFeatures : function() {\r\n\t\t\treturn {\r\n\t\t\t\tdragdrop: true,\r\n\t\t\t\tjpgresize: true,\r\n\t\t\t\tpngresize: true,\r\n\t\t\t\tchunks: true,\r\n\t\t\t\tprogress: true,\r\n\t\t\t\tmultipart: true\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes the upload runtime.\r\n\t\t *\r\n\t\t * @method init\r\n\t\t * @param {plupload.Uploader} uploader Uploader instance that needs to be initialized.\r\n\t\t * @param {function} callback Callback to execute when the runtime initializes or fails to initialize. If it succeeds an object with a parameter name success will be set to true.\r\n\t\t */\r\n\t\tinit : function(uploader, callback) {\r\n\t\t\tvar desktop;\r\n\r\n\t\t\t// Check for gears support\r\n\t\t\tif (!window.google || !google.gears) {\r\n\t\t\t\treturn callback({success : false});\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tdesktop = google.gears.factory.create('beta.desktop');\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// Might fail on the latest Gecko build for some odd reason\r\n\t\t\t\treturn callback({success : false});\r\n\t\t\t}\r\n\r\n\t\t\tfunction addSelectedFiles(selected_files) {\r\n\t\t\t\tvar file, i, files = [], id;\r\n\r\n\t\t\t\t// Add the selected files to the file queue\r\n\t\t\t\tfor (i = 0; i < selected_files.length; i++) {\r\n\t\t\t\t\tfile = selected_files[i];\r\n\r\n\t\t\t\t\t// Store away gears blob internally\r\n\t\t\t\t\tid = plupload.guid();\r\n\t\t\t\t\tblobs[id] = file.blob;\r\n\r\n\t\t\t\t\tfiles.push(new plupload.File(id, file.name, file.blob.length));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Fire FilesAdded event\r\n\t\t\t\tuploader.trigger(\"FilesAdded\", files);\r\n\t\t\t}\r\n\r\n\t\t\t// Add drop handler\r\n\t\t\tuploader.bind(\"PostInit\", function() {\r\n\t\t\t\tvar settings = uploader.settings, dropElm = document.getElementById(settings.drop_element);\r\n\r\n\t\t\t\tif (dropElm) {\r\n\t\t\t\t\t// Block browser default drag over\r\n\t\t\t\t\tplupload.addEvent(dropElm, 'dragover', function(e) {\r\n\t\t\t\t\t\tdesktop.setDropEffect(e, 'copy');\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}, uploader.id);\r\n\r\n\t\t\t\t\t// Attach drop handler and grab files from Gears\r\n\t\t\t\t\tplupload.addEvent(dropElm, 'drop', function(e) {\r\n\t\t\t\t\t\tvar dragData = desktop.getDragData(e, 'application/x-gears-files');\r\n\r\n\t\t\t\t\t\tif (dragData) {\r\n\t\t\t\t\t\t\taddSelectedFiles(dragData.files);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}, uploader.id);\r\n\r\n\t\t\t\t\t// Prevent IE leak\r\n\t\t\t\t\tdropElm = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add browse button\r\n\t\t\t\tplupload.addEvent(document.getElementById(settings.browse_button), 'click', function(e) {\r\n\t\t\t\t\tvar filters = [], i, a, ext;\r\n\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tfor (i = 0; i < settings.filters.length; i++) {\r\n\t\t\t\t\t\text = settings.filters[i].extensions.split(',');\r\n\r\n\t\t\t\t\t\tfor (a = 0; a < ext.length; a++) {\r\n\t\t\t\t\t\t\tfilters.push('.' + ext[a]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdesktop.openFiles(addSelectedFiles, {singleFile : !settings.multi_selection, filter : filters});\r\n\t\t\t\t}, uploader.id);\r\n\t\t\t});\r\n\r\n\t\t\tuploader.bind(\"UploadFile\", function(up, file) {\r\n\t\t\t\tvar chunk = 0, chunks, chunkSize, loaded = 0, resize = up.settings.resize, chunking;\r\n\r\n\t\t\t\t// If file is png or jpeg and resize is configured then resize it\r\n\t\t\t\tif (resize && /\\.(png|jpg|jpeg)$/i.test(file.name)) {\r\n\t\t\t\t\tblobs[file.id] = scaleImage(blobs[file.id], resize.width, resize.height, resize.quality || 90, /\\.png$/i.test(file.name) ? 'image/png' : 'image/jpeg');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfile.size = blobs[file.id].length;\r\n\r\n\t\t\t\tchunkSize = up.settings.chunk_size;\r\n\t\t\t\tchunking = chunkSize > 0;\r\n\t\t\t\tchunks = Math.ceil(file.size / chunkSize);\r\n\r\n\t\t\t\t// If chunking is disabled then upload the whole file in one huge chunk\r\n\t\t\t\tif (!chunking) {\r\n\t\t\t\t\tchunkSize = file.size;\r\n\t\t\t\t\tchunks = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction uploadNextChunk() {\r\n\t\t\t\t\tvar req, curChunkSize, multipart = up.settings.multipart, multipartLength = 0, reqArgs = {name : file.target_name || file.name}, url = up.settings.url;\r\n\r\n\t\t\t\t\t// Sends the binary blob multipart encoded or raw depending on config\r\n\t\t\t\t\tfunction sendBinaryBlob(blob) {\r\n\t\t\t\t\t\tvar builder, boundary = '----pluploadboundary' + plupload.guid(), dashdash = '--', crlf = '\\r\\n', multipartBlob, mimeType;\r\n\r\n\t\t\t\t\t\t// Build multipart request\r\n\t\t\t\t\t\tif (multipart) {\r\n\t\t\t\t\t\t\treq.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + boundary);\r\n\t\t\t\t\t\t\tbuilder = google.gears.factory.create('beta.blobbuilder');\r\n\r\n\t\t\t\t\t\t\t// Append mutlipart parameters\r\n\t\t\t\t\t\t\tplupload.each(plupload.extend(reqArgs, up.settings.multipart_params), function(value, name) {\r\n\t\t\t\t\t\t\t\tbuilder.append(\r\n\t\t\t\t\t\t\t\t\tdashdash + boundary + crlf +\r\n\t\t\t\t\t\t\t\t\t'Content-Disposition: form-data; name=\"' + name + '\"' + crlf + crlf\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tbuilder.append(value + crlf);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tmimeType = plupload.mimeTypes[file.name.replace(/^.+\\.([^.]+)/, '$1')] || 'application/octet-stream';\r\n\r\n\t\t\t\t\t\t\t// Add file header\r\n\t\t\t\t\t\t\tbuilder.append(\r\n\t\t\t\t\t\t\t\tdashdash + boundary + crlf +\r\n\t\t\t\t\t\t\t\t'Content-Disposition: form-data; name=\"' + up.settings.file_data_name + '\"; filename=\"' + file.name + '\"' + crlf +\r\n\t\t\t\t\t\t\t\t'Content-Type: ' + mimeType + crlf + crlf\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Add file data\r\n\t\t\t\t\t\t\tbuilder.append(blob);\r\n\r\n\t\t\t\t\t\t\t// Add footer\r\n\t\t\t\t\t\t\tbuilder.append(crlf + dashdash + boundary + dashdash + crlf);\r\n\t\t\t\t\t\t\tmultipartBlob = builder.getAsBlob();\r\n\t\t\t\t\t\t\tmultipartLength = multipartBlob.length - blob.length;\r\n\t\t\t\t\t\t\tblob = multipartBlob;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Send blob or multipart blob depending on config\r\n\t\t\t\t\t\treq.send(blob);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// File upload finished\r\n\t\t\t\t\tif (file.status == plupload.DONE || file.status == plupload.FAILED || up.state == plupload.STOPPED) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only add chunking args if needed\r\n\t\t\t\t\tif (chunking) {\r\n\t\t\t\t\t\treqArgs.chunk = chunk;\r\n\t\t\t\t\t\treqArgs.chunks = chunks;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Setup current chunk size\r\n\t\t\t\t\tcurChunkSize = Math.min(chunkSize, file.size - (chunk  * chunkSize));\r\n\r\n\t\t\t\t\tif (!multipart) {\r\n\t\t\t\t\t\turl = plupload.buildUrl(up.settings.url, reqArgs);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treq = google.gears.factory.create('beta.httprequest');\r\n\t\t\t\t\treq.open('POST', url);\r\n\r\n\t\t\t\t\t// Add disposition and type if multipart is disabled\r\n\t\t\t\t\tif (!multipart) {\r\n\t\t\t\t\t\treq.setRequestHeader('Content-Disposition', 'attachment; filename=\"' + file.name + '\"');\r\n\t\t\t\t\t\treq.setRequestHeader('Content-Type', 'application/octet-stream');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set custom headers\r\n\t\t\t\t\tplupload.each(up.settings.headers, function(value, name) {\r\n\t\t\t\t\t\treq.setRequestHeader(name, value);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treq.upload.onprogress = function(progress) {\r\n\t\t\t\t\t\tfile.loaded = loaded + progress.loaded - multipartLength;\r\n\t\t\t\t\t\tup.trigger('UploadProgress', file);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\treq.onreadystatechange = function() {\r\n\t\t\t\t\t\tvar chunkArgs;\r\n\r\n\t\t\t\t\t\tif (req.readyState == 4) {\r\n\t\t\t\t\t\t\tif (req.status == 200) {\r\n\t\t\t\t\t\t\t\tchunkArgs = {\r\n\t\t\t\t\t\t\t\t\tchunk : chunk,\r\n\t\t\t\t\t\t\t\t\tchunks : chunks,\r\n\t\t\t\t\t\t\t\t\tresponse : req.responseText,\r\n\t\t\t\t\t\t\t\t\tstatus : req.status\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\tup.trigger('ChunkUploaded', file, chunkArgs);\r\n\r\n\t\t\t\t\t\t\t\t// Stop upload\r\n\t\t\t\t\t\t\t\tif (chunkArgs.cancelled) {\r\n\t\t\t\t\t\t\t\t\tfile.status = plupload.FAILED;\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tloaded += curChunkSize;\r\n\r\n\t\t\t\t\t\t\t\tif (++chunk >= chunks) {\r\n\t\t\t\t\t\t\t\t\tfile.status = plupload.DONE;\r\n\t\t\t\t\t\t\t\t\tup.trigger('FileUploaded', file, {\r\n\t\t\t\t\t\t\t\t\t\tresponse : req.responseText,\r\n\t\t\t\t\t\t\t\t\t\tstatus : req.status\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tuploadNextChunk();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tup.trigger('Error', {\r\n\t\t\t\t\t\t\t\t\tcode : plupload.HTTP_ERROR,\r\n\t\t\t\t\t\t\t\t\tmessage : plupload.translate('HTTP Error.'),\r\n\t\t\t\t\t\t\t\t\tfile : file,\r\n\t\t\t\t\t\t\t\t\tchunk : chunk,\r\n\t\t\t\t\t\t\t\t\tchunks : chunks,\r\n\t\t\t\t\t\t\t\t\tstatus : req.status\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (chunk < chunks) {\r\n\t\t\t\t\t\tsendBinaryBlob(blobs[file.id].slice(chunk * chunkSize, curChunkSize));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Start uploading chunks\r\n\t\t\t\tuploadNextChunk();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tuploader.bind(\"Destroy\", function(up) {\r\n\t\t\t\tvar name, element,\r\n\t\t\t\t\telements = {\t\t\r\n\t\t\t\t\t\tbrowseButton:\tup.settings.browse_button, \r\n\t\t\t\t\t\tdropElm:\t\tup.settings.drop_element\t\r\n\t\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t// Unbind event handlers\r\n\t\t\t\tfor (name in elements) {\r\n\t\t\t\t\telement = document.getElementById(elements[name]);\r\n\t\t\t\t\tif (element) {\r\n\t\t\t\t\t\tplupload.removeAllEvents(element, up.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\r\n\t\t\tcallback({success : true});\r\n\t\t}\r\n\t});\r\n})(window, document, plupload);\r\n","/**\r\n * plupload.silverlight.js\r\n *\r\n * Copyright 2009, Moxiecode Systems AB\r\n * Released under GPL License.\r\n *\r\n * License: http://www.plupload.com/license\r\n * Contributing: http://www.plupload.com/contributing\r\n */\r\n\r\n// JSLint defined globals\r\n/*global window:false, document:false, plupload:false, ActiveXObject:false */\r\n\r\n(function(window, document, plupload, undef) {\r\n\tvar uploadInstances = {}, initialized = {};\r\n\r\n\tfunction jsonSerialize(obj) {\r\n\t\tvar value, type = typeof obj, isArray, i, key;\r\n\r\n\t\t// Encode strings\r\n\t\tif (type === 'string') {\r\n\t\t\tvalue = '\\bb\\tt\\nn\\ff\\rr\\\"\"\\'\\'\\\\\\\\';\r\n\r\n\t\t\treturn '\"' + obj.replace(/([\\u0080-\\uFFFF\\x00-\\x1f\\\"])/g, function(a, b) {\r\n\t\t\t\tvar idx = value.indexOf(b);\r\n\r\n\t\t\t\tif (idx + 1) {\r\n\t\t\t\t\treturn '\\\\' + value.charAt(idx + 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ta = b.charCodeAt().toString(16);\r\n\r\n\t\t\t\treturn '\\\\u' + '0000'.substring(a.length) + a;\r\n\t\t\t}) + '\"';\r\n\t\t}\r\n\r\n\t\t// Loop objects/arrays\r\n\t\tif (type == 'object') {\r\n\t\t\tisArray = obj.length !== undef;\r\n\t\t\tvalue = '';\r\n\r\n\t\t\tif (isArray) {\r\n\t\t\t\tfor (i = 0; i < obj.length; i++) {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tvalue += ',';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvalue += jsonSerialize(obj[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = '[' + value + ']';\r\n\t\t\t} else {\r\n\t\t\t\tfor (key in obj) {\r\n\t\t\t\t\tif (obj.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t\tvalue += ',';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvalue += jsonSerialize(key) + ':' + jsonSerialize(obj[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = '{' + value + '}';\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Treat undefined as null\r\n\t\tif (obj === undef) {\r\n\t\t\treturn 'null';\r\n\t\t}\r\n\r\n\t\t// Convert all other types to string\r\n\t\treturn '' + obj;\r\n\t}\r\n\r\n\tfunction isInstalled(version) {\r\n\t\tvar isVersionSupported = false, container = null, control = null, actualVer,\r\n\t\t\tactualVerArray, reqVerArray, requiredVersionPart, actualVersionPart, index = 0;\r\n\r\n\t\ttry {\r\n\t\t\ttry {\r\n\t\t\t\tcontrol = new ActiveXObject('AgControl.AgControl');\r\n\r\n\t\t\t\tif (control.IsVersionSupported(version)) {\r\n\t\t\t\t\tisVersionSupported = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontrol = null;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tvar plugin = navigator.plugins[\"Silverlight Plug-In\"];\r\n\r\n\t\t\t\tif (plugin) {\r\n\t\t\t\t\tactualVer = plugin.description;\r\n\r\n\t\t\t\t\tif (actualVer === \"1.0.30226.2\") {\r\n\t\t\t\t\t\tactualVer = \"2.0.30226.2\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tactualVerArray = actualVer.split(\".\");\r\n\r\n\t\t\t\t\twhile (actualVerArray.length > 3) {\r\n\t\t\t\t\t\tactualVerArray.pop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twhile ( actualVerArray.length < 4) {\r\n\t\t\t\t\t\tactualVerArray.push(0);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treqVerArray = version.split(\".\");\r\n\r\n\t\t\t\t\twhile (reqVerArray.length > 4) {\r\n\t\t\t\t\t\treqVerArray.pop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\trequiredVersionPart = parseInt(reqVerArray[index], 10);\r\n\t\t\t\t\t\tactualVersionPart = parseInt(actualVerArray[index], 10);\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t} while (index < reqVerArray.length && requiredVersionPart === actualVersionPart);\r\n\r\n\t\t\t\t\tif (requiredVersionPart <= actualVersionPart && !isNaN(requiredVersionPart)) {\r\n\t\t\t\t\t\tisVersionSupported = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e2) {\r\n\t\t\tisVersionSupported = false;\r\n\t\t}\r\n\r\n\t\treturn isVersionSupported;\r\n\t}\r\n\r\n\tplupload.silverlight = {\r\n\t\ttrigger : function(id, name) {\r\n\t\t\tvar uploader = uploadInstances[id], i, args;\r\n\t\t\t\r\n\t\t\tif (uploader) {\r\n\t\t\t\targs = plupload.toArray(arguments).slice(1);\r\n\t\t\t\targs[0] = 'Silverlight:' + name;\r\n\r\n\t\t\t\t// Detach the call so that error handling in the browser is presented correctly\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tuploader.trigger.apply(uploader, args);\r\n\t\t\t\t}, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Silverlight implementation. This runtime supports these features: jpgresize, pngresize, chunks.\r\n\t *\r\n\t * @static\r\n\t * @class plupload.runtimes.Silverlight\r\n\t * @extends plupload.Runtime\r\n\t */\r\n\tplupload.runtimes.Silverlight = plupload.addRuntime(\"silverlight\", {\r\n\t\t/**\r\n\t\t * Returns a list of supported features for the runtime.\r\n\t\t *\r\n\t\t * @return {Object} Name/value object with supported features.\r\n\t\t */\r\n\t\tgetFeatures : function() {\r\n\t\t\treturn {\r\n\t\t\t\tjpgresize: true,\r\n\t\t\t\tpngresize: true,\r\n\t\t\t\tchunks: true,\r\n\t\t\t\tprogress: true,\r\n\t\t\t\tmultipart: true\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes the upload runtime. This runtime supports these features: jpgresize, pngresize, chunks.\r\n\t\t *\r\n\t\t * @method init\r\n\t\t * @param {plupload.Uploader} uploader Uploader instance that needs to be initialized.\r\n\t\t * @param {function} callback Callback to execute when the runtime initializes or fails to initialize. If it succeeds an object with a parameter name success will be set to true.\r\n\t\t */\r\n\t\tinit : function(uploader, callback) {\r\n\t\t\tvar silverlightContainer, filter = '', filters = uploader.settings.filters, i, container = document.body;\r\n\r\n\t\t\t// Check if Silverlight is installed, Silverlight windowless parameter doesn't work correctly on Opera so we disable it for now\r\n\t\t\tif (!isInstalled('2.0.31005.0') || (window.opera && window.opera.buildNumber)) {\r\n\t\t\t\tcallback({success : false});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinitialized[uploader.id] = false;\r\n\t\t\tuploadInstances[uploader.id] = uploader;\r\n\r\n\t\t\t// Create silverlight container and insert it at an absolute position within the browse button\r\n\t\t\tsilverlightContainer = document.createElement('div');\r\n\t\t\tsilverlightContainer.id = uploader.id + '_silverlight_container';\r\n\r\n\t\t\tplupload.extend(silverlightContainer.style, {\r\n\t\t\t\tposition : 'absolute',\r\n\t\t\t\ttop : '0px',\r\n\t\t\t\tbackground : uploader.settings.shim_bgcolor || 'transparent',\r\n\t\t\t\tzIndex : 99999,\r\n\t\t\t\twidth : '100px',\r\n\t\t\t\theight : '100px',\r\n\t\t\t\toverflow : 'hidden',\r\n\t\t\t\topacity : uploader.settings.shim_bgcolor || document.documentMode > 8 ? '' : 0.01 // Force transparent if bgcolor is undefined\r\n\t\t\t});\r\n\r\n\t\t\tsilverlightContainer.className = 'plupload silverlight';\r\n\r\n\t\t\tif (uploader.settings.container) {\r\n\t\t\t\tcontainer = document.getElementById(uploader.settings.container);\r\n\t\t\t\tcontainer.style.position = 'relative';\r\n\t\t\t}\r\n\r\n\t\t\tcontainer.appendChild(silverlightContainer);\r\n\r\n\t\t\tfor (i = 0; i < filters.length; i++) {\r\n\t\t\t\tfilter += (filter != '' ? '|' : '') + filters[i].title + \" | *.\" + filters[i].extensions.replace(/,/g, ';*.');\r\n\t\t\t}\r\n\r\n\t\t\t// Insert the Silverlight object inide the Silverlight container\r\n\t\t\tsilverlightContainer.innerHTML = '<object id=\"' + uploader.id + '_silverlight\" data=\"data:application/x-silverlight,\" type=\"application/x-silverlight-2\" style=\"outline:none;\" width=\"1024\" height=\"1024\">' +\r\n\t\t\t\t'<param name=\"source\" value=\"' + uploader.settings.silverlight_xap_url + '\"/>' +\r\n\t\t\t\t'<param name=\"background\" value=\"Transparent\"/>' +\r\n\t\t\t\t'<param name=\"windowless\" value=\"true\"/>' +\r\n\t\t\t\t'<param name=\"enablehtmlaccess\" value=\"true\"/>' +\r\n\t\t\t\t'<param name=\"initParams\" value=\"id=' + uploader.id + ',filter=' + filter + ',multiselect=' + uploader.settings.multi_selection + '\"/>' +\r\n\t\t\t\t'</object>';\r\n\r\n\t\t\tfunction getSilverlightObj() {\r\n\t\t\t\treturn document.getElementById(uploader.id + '_silverlight').content.Upload;\r\n\t\t\t}\r\n\r\n\t\t\tuploader.bind(\"Silverlight:Init\", function() {\r\n\t\t\t\tvar selectedFiles, lookup = {};\r\n\t\t\t\t\r\n\t\t\t\t// Prevent eventual reinitialization of the instance\r\n\t\t\t\tif (initialized[uploader.id]) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tinitialized[uploader.id] = true;\r\n\r\n\t\t\t\tuploader.bind(\"Silverlight:StartSelectFiles\", function(up) {\r\n\t\t\t\t\tselectedFiles = [];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Silverlight:SelectFile\", function(up, sl_id, name, size) {\r\n\t\t\t\t\tvar id;\r\n\r\n\t\t\t\t\t// Store away silverlight ids\r\n\t\t\t\t\tid = plupload.guid();\r\n\t\t\t\t\tlookup[id] = sl_id;\r\n\t\t\t\t\tlookup[sl_id] = id;\r\n\r\n\t\t\t\t\t// Expose id, name and size\r\n\t\t\t\t\tselectedFiles.push(new plupload.File(id, name, size));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Silverlight:SelectSuccessful\", function() {\r\n\t\t\t\t\t// Trigger FilesAdded event if we added any\r\n\t\t\t\t\tif (selectedFiles.length) {\r\n\t\t\t\t\t\tuploader.trigger(\"FilesAdded\", selectedFiles);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Silverlight:UploadChunkError\", function(up, file_id, chunk, chunks, message) {\r\n\t\t\t\t\tuploader.trigger(\"Error\", {\r\n\t\t\t\t\t\tcode : plupload.IO_ERROR,\r\n\t\t\t\t\t\tmessage : 'IO Error.',\r\n\t\t\t\t\t\tdetails : message,\r\n\t\t\t\t\t\tfile : up.getFile(lookup[file_id])\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Silverlight:UploadFileProgress\", function(up, sl_id, loaded, total) {\r\n\t\t\t\t\tvar file = up.getFile(lookup[sl_id]);\r\n\r\n\t\t\t\t\tif (file.status != plupload.FAILED) {\r\n\t\t\t\t\t\tfile.size = total;\r\n\t\t\t\t\t\tfile.loaded = loaded;\r\n\r\n\t\t\t\t\t\tup.trigger('UploadProgress', file);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Refresh\", function(up) {\r\n\t\t\t\t\tvar browseButton, browsePos, browseSize;\r\n\r\n\t\t\t\t\tbrowseButton = document.getElementById(up.settings.browse_button);\r\n\t\t\t\t\tif (browseButton) {\r\n\t\t\t\t\t\tbrowsePos = plupload.getPos(browseButton, document.getElementById(up.settings.container));\r\n\t\t\t\t\t\tbrowseSize = plupload.getSize(browseButton);\r\n\t\r\n\t\t\t\t\t\tplupload.extend(document.getElementById(up.id + '_silverlight_container').style, {\r\n\t\t\t\t\t\t\ttop : browsePos.y + 'px',\r\n\t\t\t\t\t\t\tleft : browsePos.x + 'px',\r\n\t\t\t\t\t\t\twidth : browseSize.w + 'px',\r\n\t\t\t\t\t\t\theight : browseSize.h + 'px'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Silverlight:UploadChunkSuccessful\", function(up, sl_id, chunk, chunks, text) {\r\n\t\t\t\t\tvar chunkArgs, file = up.getFile(lookup[sl_id]);\r\n\r\n\t\t\t\t\tchunkArgs = {\r\n\t\t\t\t\t\tchunk : chunk,\r\n\t\t\t\t\t\tchunks : chunks,\r\n\t\t\t\t\t\tresponse : text\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tup.trigger('ChunkUploaded', file, chunkArgs);\r\n\r\n\t\t\t\t\t// Stop upload if file is maked as failed\r\n\t\t\t\t\tif (file.status != plupload.FAILED) {\r\n\t\t\t\t\t\tgetSilverlightObj().UploadNextChunk();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Last chunk then dispatch FileUploaded event\r\n\t\t\t\t\tif (chunk == chunks - 1) {\r\n\t\t\t\t\t\tfile.status = plupload.DONE;\r\n\r\n\t\t\t\t\t\tup.trigger('FileUploaded', file, {\r\n\t\t\t\t\t\t\tresponse : text\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Silverlight:UploadSuccessful\", function(up, sl_id, response) {\r\n\t\t\t\t\tvar file = up.getFile(lookup[sl_id]);\r\n\r\n\t\t\t\t\tfile.status = plupload.DONE;\r\n\r\n\t\t\t\t\tup.trigger('FileUploaded', file, {\r\n\t\t\t\t\t\tresponse : response\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"FilesRemoved\", function(up, files) {\r\n\t\t\t\t\tvar i;\r\n\r\n\t\t\t\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\tgetSilverlightObj().RemoveFile(lookup[files[i].id]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"UploadFile\", function(up, file) {\r\n\t\t\t\t\tvar settings = up.settings, resize = settings.resize || {};\r\n\r\n\t\t\t\t\tgetSilverlightObj().UploadFile(\r\n\t\t\t\t\t\tlookup[file.id],\r\n\t\t\t\t\t\tup.settings.url,\r\n\t\t\t\t\t\tjsonSerialize({\r\n\t\t\t\t\t\t\tname : file.target_name || file.name,\r\n\t\t\t\t\t\t\tmime : plupload.mimeTypes[file.name.replace(/^.+\\.([^.]+)/, '$1')] || 'application/octet-stream',\r\n\t\t\t\t\t\t\tchunk_size : settings.chunk_size,\r\n\t\t\t\t\t\t\timage_width : resize.width,\r\n\t\t\t\t\t\t\timage_height : resize.height,\r\n\t\t\t\t\t\t\timage_quality : resize.quality || 90,\r\n\t\t\t\t\t\t\tmultipart : !!settings.multipart,\r\n\t\t\t\t\t\t\tmultipart_params : settings.multipart_params || {},\r\n\t\t\t\t\t\t\tfile_data_name : settings.file_data_name,\r\n\t\t\t\t\t\t\theaders : settings.headers\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Silverlight:MouseEnter', function(up) {\r\n\t\t\t\t\tvar browseButton, hoverClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\thoverClass = up.settings.browse_button_hover;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && hoverClass) {\r\n\t\t\t\t\t\tplupload.addClass(browseButton, hoverClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Silverlight:MouseLeave', function(up) {\r\n\t\t\t\t\tvar browseButton, hoverClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\thoverClass = up.settings.browse_button_hover;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && hoverClass) {\r\n\t\t\t\t\t\tplupload.removeClass(browseButton, hoverClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Silverlight:MouseLeftButtonDown', function(up) {\r\n\t\t\t\t\tvar browseButton, activeClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\tactiveClass = up.settings.browse_button_active;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && activeClass) {\r\n\t\t\t\t\t\tplupload.addClass(browseButton, activeClass);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Make sure that browse_button has active state removed from it\r\n\t\t\t\t\t\tplupload.addEvent(document.body, 'mouseup', function() {\r\n\t\t\t\t\t\t\tplupload.removeClass(browseButton, activeClass);\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Sliverlight:StartSelectFiles', function(up) {\r\n\t\t\t\t\tvar browseButton, activeClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\tactiveClass = up.settings.browse_button_active;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && activeClass) {\r\n\t\t\t\t\t\tplupload.removeClass(browseButton, activeClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind(\"Destroy\", function(up) {\r\n\t\t\t\t\tvar silverlightContainer;\r\n\t\t\t\t\t\r\n\t\t\t\t\tplupload.removeAllEvents(document.body, up.id);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelete initialized[up.id];\r\n\t\t\t\t\tdelete uploadInstances[up.id];\r\n\t\t\t\t\t\r\n\t\t\t\t\tsilverlightContainer = document.getElementById(up.id + '_silverlight_container');\r\n\t\t\t\t\tif (silverlightContainer) {\r\n\t\t\t\t\t\tcontainer.removeChild(silverlightContainer);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcallback({success : true});\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n})(window, document, plupload);\r\n","/**\r\n * plupload.flash.js\r\n *\r\n * Copyright 2009, Moxiecode Systems AB\r\n * Released under GPL License.\r\n *\r\n * License: http://www.plupload.com/license\r\n * Contributing: http://www.plupload.com/contributing\r\n */\r\n\r\n// JSLint defined globals\r\n/*global window:false, document:false, plupload:false, ActiveXObject:false, escape:false */\r\n\r\n(function(window, document, plupload, undef) {\r\n\tvar uploadInstances = {}, initialized = {};\r\n\r\n\tfunction getFlashVersion() {\r\n\t\tvar version;\r\n\r\n\t\ttry {\r\n\t\t\tversion = navigator.plugins['Shockwave Flash'];\r\n\t\t\tversion = version.description;\r\n\t\t} catch (e1) {\r\n\t\t\ttry {\r\n\t\t\t\tversion = new ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version');\r\n\t\t\t} catch (e2) {\r\n\t\t\t\tversion = '0.0';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tversion = version.match(/\\d+/g);\r\n\r\n\t\treturn parseFloat(version[0] + '.' + version[1]);\r\n\t}\r\n\r\n\tplupload.flash = {\r\n\t\t/**\r\n\t\t * Will be executed by the Flash runtime when it sends out events.\r\n\t\t *\r\n\t\t * @param {String} id If for the upload instance.\r\n\t\t * @param {String} name Event name to trigger.\r\n\t\t * @param {Object} obj Parameters to be passed with event.\r\n\t\t */\r\n\t\ttrigger : function(id, name, obj) {\r\n\t\t\t\t\t\r\n\t\t\t// Detach the call so that error handling in the browser is presented correctly\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tvar uploader = uploadInstances[id], i, args;\r\n\r\n\t\t\t\tif (uploader) {\r\n\t\t\t\t\tuploader.trigger('Flash:' + name, obj);\r\n\t\t\t\t}\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * FlashRuntime implementation. This runtime supports these features: jpgresize, pngresize, chunks.\r\n\t *\r\n\t * @static\r\n\t * @class plupload.runtimes.Flash\r\n\t * @extends plupload.Runtime\r\n\t */\r\n\tplupload.runtimes.Flash = plupload.addRuntime(\"flash\", {\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns a list of supported features for the runtime.\r\n\t\t *\r\n\t\t * @return {Object} Name/value object with supported features.\r\n\t\t */\r\n\t\tgetFeatures : function() {\r\n\t\t\treturn {\r\n\t\t\t\tjpgresize: true,\r\n\t\t\t\tpngresize: true,\r\n\t\t\t\tmaxWidth: 8091,\r\n\t\t\t\tmaxHeight: 8091,\r\n\t\t\t\tchunks: true,\r\n\t\t\t\tprogress: true,\r\n\t\t\t\tmultipart: true\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes the upload runtime. This method should add necessary items to the DOM and register events needed for operation. \r\n\t\t *\r\n\t\t * @method init\r\n\t\t * @param {plupload.Uploader} uploader Uploader instance that needs to be initialized.\r\n\t\t * @param {function} callback Callback to execute when the runtime initializes or fails to initialize. If it succeeds an object with a parameter name success will be set to true.\r\n\t\t */\r\n\t\tinit : function(uploader, callback) {\r\n\t\t\tvar browseButton, flashContainer, flashVars, waitCount = 0, container = document.body;\r\n\r\n\t\t\tif (getFlashVersion() < 10) {\r\n\t\t\t\tcallback({success : false});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tinitialized[uploader.id] = false;\r\n\t\t\tuploadInstances[uploader.id] = uploader;\r\n\r\n\t\t\t// Find browse button and set to to be relative\r\n\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\r\n\t\t\t// Create flash container and insert it at an absolute position within the browse button\r\n\t\t\tflashContainer = document.createElement('div');\r\n\t\t\tflashContainer.id = uploader.id + '_flash_container';\r\n\r\n\t\t\tplupload.extend(flashContainer.style, {\r\n\t\t\t\tposition : 'absolute',\r\n\t\t\t\ttop : '0px',\r\n\t\t\t\tbackground : uploader.settings.shim_bgcolor || 'transparent',\r\n\t\t\t\tzIndex : 99999,\r\n\t\t\t\twidth : '100%',\r\n\t\t\t\theight : '100%'\r\n\t\t\t});\r\n\r\n\t\t\tflashContainer.className = 'plupload flash';\r\n\r\n\t\t\tif (uploader.settings.container) {\r\n\t\t\t\tcontainer = document.getElementById(uploader.settings.container);\r\n\t\t\t\tcontainer.style.position = 'relative';\r\n\t\t\t}\r\n\r\n\t\t\tcontainer.appendChild(flashContainer);\r\n\r\n\t\t\tflashVars = 'id=' + escape(uploader.id);\r\n\r\n\t\t\t// Insert the Flash inide the flash container\r\n\t\t\tflashContainer.innerHTML = '<object id=\"' + uploader.id + '_flash\" width=\"100%\" height=\"100%\" style=\"outline:0\" type=\"application/x-shockwave-flash\" data=\"' + uploader.settings.flash_swf_url + '\">' +\r\n\t\t\t\t'<param name=\"movie\" value=\"' + uploader.settings.flash_swf_url + '\" />' +\r\n\t\t\t\t'<param name=\"flashvars\" value=\"' + flashVars + '\" />' +\r\n\t\t\t\t'<param name=\"wmode\" value=\"transparent\" />' +\r\n\t\t\t\t'<param name=\"allowscriptaccess\" value=\"always\" /></object>';\r\n\r\n\t\t\tfunction getFlashObj() {\r\n\t\t\t\treturn document.getElementById(uploader.id + '_flash');\r\n\t\t\t}\r\n\r\n\t\t\tfunction waitLoad() {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t// Wait for 5 sec\r\n\t\t\t\tif (waitCount++ > 5000) {\r\n\t\t\t\t\tcallback({success : false});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!initialized[uploader.id]) {\r\n\t\t\t\t\tsetTimeout(waitLoad, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twaitLoad();\r\n\r\n\t\t\t// Fix IE memory leaks\r\n\t\t\tbrowseButton = flashContainer = null;\r\n\r\n\t\t\t// Wait for Flash to send init event\r\n\t\t\tuploader.bind(\"Flash:Init\", function() {\t\r\n\t\t\t\tvar lookup = {}, i, resize = uploader.settings.resize || {};\r\n\r\n\t\t\t\tgetFlashObj().setFileFilters(uploader.settings.filters, uploader.settings.multi_selection);\r\n\r\n\t\t\t\t// Prevent eventual reinitialization of the instance\r\n\t\t\t\tif (initialized[uploader.id]) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinitialized[uploader.id] = true;\r\n\r\n\t\t\t\tuploader.bind(\"UploadFile\", function(up, file) {\r\n\t\t\t\t\tvar settings = up.settings;\r\n\r\n\t\t\t\t\tgetFlashObj().uploadFile(lookup[file.id], settings.url, {\r\n\t\t\t\t\t\tname : file.target_name || file.name,\r\n\t\t\t\t\t\tmime : plupload.mimeTypes[file.name.replace(/^.+\\.([^.]+)/, '$1')] || 'application/octet-stream',\r\n\t\t\t\t\t\tchunk_size : settings.chunk_size,\r\n\t\t\t\t\t\twidth : resize.width,\r\n\t\t\t\t\t\theight : resize.height,\r\n\t\t\t\t\t\tquality : resize.quality || 90,\r\n\t\t\t\t\t\tmultipart : settings.multipart,\r\n\t\t\t\t\t\tmultipart_params : settings.multipart_params || {},\r\n\t\t\t\t\t\tfile_data_name : settings.file_data_name,\r\n\t\t\t\t\t\tformat : /\\.(jpg|jpeg)$/i.test(file.name) ? 'jpg' : 'png',\r\n\t\t\t\t\t\theaders : settings.headers,\r\n\t\t\t\t\t\turlstream_upload : settings.urlstream_upload\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tuploader.bind(\"Flash:UploadProcess\", function(up, flash_file) {\r\n\t\t\t\t\tvar file = up.getFile(lookup[flash_file.id]);\r\n\r\n\t\t\t\t\tif (file.status != plupload.FAILED) {\r\n\t\t\t\t\t\tfile.loaded = flash_file.loaded;\r\n\t\t\t\t\t\tfile.size = flash_file.size;\r\n\r\n\t\t\t\t\t\tup.trigger('UploadProgress', file);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Flash:UploadChunkComplete\", function(up, info) {\r\n\t\t\t\t\tvar chunkArgs, file = up.getFile(lookup[info.id]);\r\n\r\n\t\t\t\t\tchunkArgs = {\r\n\t\t\t\t\t\tchunk : info.chunk,\r\n\t\t\t\t\t\tchunks : info.chunks,\r\n\t\t\t\t\t\tresponse : info.text\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tup.trigger('ChunkUploaded', file, chunkArgs);\r\n\r\n\t\t\t\t\t// Stop upload if file is maked as failed\r\n\t\t\t\t\tif (file.status != plupload.FAILED) {\r\n\t\t\t\t\t\tgetFlashObj().uploadNextChunk();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Last chunk then dispatch FileUploaded event\r\n\t\t\t\t\tif (info.chunk == info.chunks - 1) {\r\n\t\t\t\t\t\tfile.status = plupload.DONE;\r\n\r\n\t\t\t\t\t\tup.trigger('FileUploaded', file, {\r\n\t\t\t\t\t\t\tresponse : info.text\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Flash:SelectFiles\", function(up, selected_files) {\r\n\t\t\t\t\tvar file, i, files = [], id;\r\n\r\n\t\t\t\t\t// Add the selected files to the file queue\r\n\t\t\t\t\tfor (i = 0; i < selected_files.length; i++) {\r\n\t\t\t\t\t\tfile = selected_files[i];\r\n\r\n\t\t\t\t\t\t// Store away flash ref internally\r\n\t\t\t\t\t\tid = plupload.guid();\r\n\t\t\t\t\t\tlookup[id] = file.id;\r\n\t\t\t\t\t\tlookup[file.id] = id;\r\n\r\n\t\t\t\t\t\tfiles.push(new plupload.File(id, file.name, file.size));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Trigger FilesAdded event if we added any\r\n\t\t\t\t\tif (files.length) {\r\n\t\t\t\t\t\tuploader.trigger(\"FilesAdded\", files);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Flash:SecurityError\", function(up, err) {\r\n\t\t\t\t\tuploader.trigger('Error', {\r\n\t\t\t\t\t\tcode : plupload.SECURITY_ERROR,\r\n\t\t\t\t\t\tmessage : plupload.translate('Security error.'),\r\n\t\t\t\t\t\tdetails : err.message,\r\n\t\t\t\t\t\tfile : uploader.getFile(lookup[err.id])\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Flash:GenericError\", function(up, err) {\r\n\t\t\t\t\tuploader.trigger('Error', {\r\n\t\t\t\t\t\tcode : plupload.GENERIC_ERROR,\r\n\t\t\t\t\t\tmessage : plupload.translate('Generic error.'),\r\n\t\t\t\t\t\tdetails : err.message,\r\n\t\t\t\t\t\tfile : uploader.getFile(lookup[err.id])\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Flash:IOError\", function(up, err) {\r\n\t\t\t\t\tuploader.trigger('Error', {\r\n\t\t\t\t\t\tcode : plupload.IO_ERROR,\r\n\t\t\t\t\t\tmessage : plupload.translate('IO error.'),\r\n\t\t\t\t\t\tdetails : err.message,\r\n\t\t\t\t\t\tfile : uploader.getFile(lookup[err.id])\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind(\"Flash:ImageError\", function(up, err) {\r\n\t\t\t\t\tuploader.trigger('Error', {\r\n\t\t\t\t\t\tcode : parseInt(err.code),\r\n\t\t\t\t\t\tmessage : plupload.translate('Image error.'),\r\n\t\t\t\t\t\tfile : uploader.getFile(lookup[err.id])\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Flash:StageEvent:rollOver', function(up) {\r\n\t\t\t\t\tvar browseButton, hoverClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\thoverClass = up.settings.browse_button_hover;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && hoverClass) {\r\n\t\t\t\t\t\tplupload.addClass(browseButton, hoverClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Flash:StageEvent:rollOut', function(up) {\r\n\t\t\t\t\tvar browseButton, hoverClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\thoverClass = up.settings.browse_button_hover;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && hoverClass) {\r\n\t\t\t\t\t\tplupload.removeClass(browseButton, hoverClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Flash:StageEvent:mouseDown', function(up) {\r\n\t\t\t\t\tvar browseButton, activeClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\tactiveClass = up.settings.browse_button_active;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && activeClass) {\r\n\t\t\t\t\t\tplupload.addClass(browseButton, activeClass);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Make sure that browse_button has active state removed from it\r\n\t\t\t\t\t\tplupload.addEvent(document.body, 'mouseup', function() {\r\n\t\t\t\t\t\t\tplupload.removeClass(browseButton, activeClass);\t\r\n\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind('Flash:StageEvent:mouseUp', function(up) {\r\n\t\t\t\t\tvar browseButton, activeClass;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\t\tactiveClass = up.settings.browse_button_active;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (browseButton && activeClass) {\r\n\t\t\t\t\t\tplupload.removeClass(browseButton, activeClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"QueueChanged\", function(up) {\r\n\t\t\t\t\tuploader.refresh();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"FilesRemoved\", function(up, files) {\r\n\t\t\t\t\tvar i;\r\n\r\n\t\t\t\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\tgetFlashObj().removeFile(lookup[files[i].id]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"StateChanged\", function(up) {\r\n\t\t\t\t\tuploader.refresh();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuploader.bind(\"Refresh\", function(up) {\r\n\t\t\t\t\tvar browseButton, browsePos, browseSize;\r\n\r\n\t\t\t\t\t// Set file filters incase it has been changed dynamically\r\n\t\t\t\t\tgetFlashObj().setFileFilters(uploader.settings.filters, uploader.settings.multi_selection);\r\n\r\n\t\t\t\t\tbrowseButton = document.getElementById(up.settings.browse_button);\r\n\t\t\t\t\tif (browseButton) {\r\n\t\t\t\t\t\tbrowsePos = plupload.getPos(browseButton, document.getElementById(up.settings.container));\r\n\t\t\t\t\t\tbrowseSize = plupload.getSize(browseButton);\r\n\t\r\n\t\t\t\t\t\tplupload.extend(document.getElementById(up.id + '_flash_container').style, {\r\n\t\t\t\t\t\t\ttop : browsePos.y + 'px',\r\n\t\t\t\t\t\t\tleft : browsePos.x + 'px',\r\n\t\t\t\t\t\t\twidth : browseSize.w + 'px',\r\n\t\t\t\t\t\t\theight : browseSize.h + 'px'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tuploader.bind(\"Destroy\", function(up) {\r\n\t\t\t\t\tvar flashContainer;\r\n\t\t\t\t\t\r\n\t\t\t\t\tplupload.removeAllEvents(document.body, up.id);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelete initialized[up.id];\r\n\t\t\t\t\tdelete uploadInstances[up.id];\r\n\t\t\t\t\t\r\n\t\t\t\t\tflashContainer = document.getElementById(up.id + '_flash_container');\r\n\t\t\t\t\tif (flashContainer) {\r\n\t\t\t\t\t\tcontainer.removeChild(flashContainer);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tcallback({success : true});\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n})(window, document, plupload);\r\n","/**\r\n * plupload.html4.js\r\n *\r\n * Copyright 2010, Ryan Demmer\r\n * Copyright 2009, Moxiecode Systems AB\r\n * Released under GPL License.\r\n *\r\n * License: http://www.plupload.com/license\r\n * Contributing: http://www.plupload.com/contributing\r\n */\r\n\r\n// JSLint defined globals\r\n/*global plupload:false, window:false */\r\n\r\n(function(window, document, plupload, undef) {\r\n\tfunction getById(id) {\r\n\t\treturn document.getElementById(id);\r\n\t}\r\n\r\n\t/**\r\n\t * HTML4 implementation. This runtime has no special features it uses an form that posts files into an hidden iframe.\r\n\t *\r\n\t * @static\r\n\t * @class plupload.runtimes.Html4\r\n\t * @extends plupload.Runtime\r\n\t */\r\n\tplupload.runtimes.Html4 = plupload.addRuntime(\"html4\", {\r\n\t\t/**\r\n\t\t * Returns a list of supported features for the runtime.\r\n\t\t *\r\n\t\t * @return {Object} Name/value object with supported features.\r\n\t\t */\r\n\t\tgetFeatures : function() {\r\n\t\t\t// Only multipart feature\r\n\t\t\treturn {\r\n\t\t\t\tmultipart: true,\r\n\t\t\t\t\r\n\t\t\t\t/* WebKit let you trigger file dialog programmatically while FF and Opera - do not, so we\r\n\t\t\t\tsniff for it here... probably not that good idea, but impossibillity of controlling cursor style \r\n\t\t\t\ton top of add files button obviously feels even worse */\r\n\t\t\t\tcanOpenDialog: navigator.userAgent.indexOf('WebKit') !== -1\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes the upload runtime.\r\n\t\t *\r\n\t\t * @method init\r\n\t\t * @param {plupload.Uploader} uploader Uploader instance that needs to be initialized.\r\n\t\t * @param {function} callback Callback to execute when the runtime initializes or fails to initialize. If it succeeds an object with a parameter name success will be set to true.\r\n\t\t */\r\n\t\tinit : function(uploader, callback) {\r\n\t\t\tuploader.bind(\"Init\", function(up) {\r\n\t\t\t\tvar container = document.body, iframe, url = \"javascript\", currentFile,\r\n\t\t\t\t\tinput, currentFileId, fileIds = [], IE = /MSIE/.test(navigator.userAgent), mimes = [],\r\n\t\t\t\t\tfilters = up.settings.filters, i, ext, type, y;\r\n\r\n\t\t\t\t// Convert extensions to mime types list\r\n\t\t\t\tfor (i = 0; i < filters.length; i++) {\r\n\t\t\t\t\text = filters[i].extensions.split(/,/);\r\n\r\n\t\t\t\t\tfor (y = 0; y < ext.length; y++) {\r\n\t\t\t\t\t\ttype = plupload.mimeTypes[ext[y]];\r\n\r\n\t\t\t\t\t\tif (type) {\r\n\t\t\t\t\t\t\tmimes.push(type);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmimes = mimes.join(',');\r\n\r\n\t\t\t\tfunction createForm() {\r\n\t\t\t\t\tvar form, input, bgcolor, browseButton;\r\n\r\n\t\t\t\t\t// Setup unique id for form\r\n\t\t\t\t\tcurrentFileId = plupload.guid();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Save id for Destroy handler\r\n\t\t\t\t\tfileIds.push(currentFileId);\r\n\r\n\t\t\t\t\t// Create form\r\n\t\t\t\t\tform = document.createElement('form');\r\n\t\t\t\t\tform.setAttribute('id', 'form_' + currentFileId);\r\n\t\t\t\t\tform.setAttribute('method', 'post');\r\n\t\t\t\t\tform.setAttribute('enctype', 'multipart/form-data');\r\n\t\t\t\t\tform.setAttribute('encoding', 'multipart/form-data');\r\n\t\t\t\t\tform.setAttribute(\"target\", up.id + '_iframe');\r\n\t\t\t\t\tform.style.position = 'absolute';\r\n\r\n\t\t\t\t\t// Create input and set attributes\r\n\t\t\t\t\tinput = document.createElement('input');\r\n\t\t\t\t\tinput.setAttribute('id', 'input_' + currentFileId);\r\n\t\t\t\t\tinput.setAttribute('type', 'file');\r\n\t\t\t\t\tinput.setAttribute('accept', mimes);\r\n\t\t\t\t\tinput.setAttribute('size', 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbrowseButton = getById(up.settings.browse_button);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Route click event to input element programmatically, if possible\r\n\t\t\t\t\tif (up.features.canOpenDialog && browseButton) {\r\n\t\t\t\t\t\tplupload.addEvent(getById(up.settings.browse_button), 'click', function(e) {\r\n\t\t\t\t\t\t\tinput.click();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set input styles\r\n\t\t\t\t\tplupload.extend(input.style, {\r\n\t\t\t\t\t\twidth : '100%',\r\n\t\t\t\t\t\theight : '100%',\r\n\t\t\t\t\t\topacity : 0,\r\n\t\t\t\t\t\tfontSize: '2em' // force input element to be bigger then needed to occupy whole space\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tplupload.extend(form.style, {\r\n\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Show the container if shim_bgcolor is specified\r\n\t\t\t\t\tbgcolor = up.settings.shim_bgcolor;\r\n\t\t\t\t\tif (bgcolor) {\r\n\t\t\t\t\t\tform.style.background = bgcolor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// no opacity in IE\r\n\t\t\t\t\tif (IE) {\r\n\t\t\t\t\t\tplupload.extend(input.style, {\r\n\t\t\t\t\t\t\tfilter : \"alpha(opacity=0)\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// add change event\r\n\t\t\t\t\tplupload.addEvent(input, 'change', function(e) {\r\n\t\t\t\t\t\tvar element = e.target, name, files = [], topElement;\r\n\r\n\t\t\t\t\t\tif (element.value) {\r\n\t\t\t\t\t\t\tgetById('form_' + currentFileId).style.top = -0xFFFFF + \"px\";\r\n\r\n\t\t\t\t\t\t\t// Get file name\r\n\t\t\t\t\t\t\tname = element.value.replace(/\\\\/g, '/');\r\n\t\t\t\t\t\t\tname = name.substring(name.length, name.lastIndexOf('/') + 1);\r\n\r\n\t\t\t\t\t\t\t// Push files\r\n\t\t\t\t\t\t\tfiles.push(new plupload.File(currentFileId, name));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Clean-up events - they won't be needed anymore\r\n\t\t\t\t\t\t\tif (!up.features.canOpenDialog) {\r\n\t\t\t\t\t\t\t\tplupload.removeAllEvents(form, up.id);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tplupload.removeEvent(browseButton, 'click', up.id);\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplupload.removeEvent(input, 'change', up.id);\r\n\r\n\t\t\t\t\t\t\t// Create and position next form\r\n\t\t\t\t\t\t\tcreateForm();\r\n\r\n\t\t\t\t\t\t\t// Fire FilesAdded event\r\n\t\t\t\t\t\t\tif (files.length) {\r\n\t\t\t\t\t\t\t\tuploader.trigger(\"FilesAdded\", files);\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, up.id);\r\n\r\n\t\t\t\t\t// append to container\r\n\t\t\t\t\tform.appendChild(input);\r\n\t\t\t\t\tcontainer.appendChild(form);\r\n\r\n\t\t\t\t\tup.refresh();\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tfunction createIframe() {\r\n\t\t\t\t\tvar temp = document.createElement('div');\r\n\r\n\t\t\t\t\t// Create iframe using a temp div since IE 6 won't be able to set the name using setAttribute or iframe.name\r\n\t\t\t\t\ttemp.innerHTML = '<iframe id=\"' + up.id + '_iframe\" name=\"' + up.id + '_iframe\" src=\"' + url + ':&quot;&quot;\" style=\"display:none\"></iframe>';\r\n\t\t\t\t\tiframe = temp.firstChild;\r\n\t\t\t\t\tcontainer.appendChild(iframe);\r\n\r\n\t\t\t\t\t// Add IFrame onload event\r\n\t\t\t\t\tplupload.addEvent(iframe, 'load', function(e) {\r\n\t\t\t\t\t\tvar n = e.target, el, result;\r\n\r\n\t\t\t\t\t\t// Ignore load event if there is no file\r\n\t\t\t\t\t\tif (!currentFile) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tel = n.contentWindow.document || n.contentDocument || window.frames[n.id].document;\r\n\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\t// Probably a permission denied error\r\n\t\t\t\t\t\t\tup.trigger('Error', {\r\n\t\t\t\t\t\t\t\tcode : plupload.SECURITY_ERROR,\r\n\t\t\t\t\t\t\t\tmessage : plupload.translate('Security error.'),\r\n\t\t\t\t\t\t\t\tfile : currentFile\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Get result\r\n\t\t\t\t\t\tresult = el.documentElement.innerText || el.documentElement.textContent;\r\n\r\n\t\t\t\t\t\t// Assume no error\r\n\t\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t\tcurrentFile.status = plupload.DONE;\r\n\t\t\t\t\t\t\tcurrentFile.loaded = 1025;\r\n\t\t\t\t\t\t\tcurrentFile.percent = 100;\r\n\r\n\t\t\t\t\t\t\tup.trigger('UploadProgress', currentFile);\r\n\t\t\t\t\t\t\tup.trigger('FileUploaded', currentFile, {\r\n\t\t\t\t\t\t\t\tresponse : result\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, up.id);\r\n\t\t\t\t} // end createIframe\r\n\t\t\t\t\r\n\t\t\t\tif (up.settings.container) {\r\n\t\t\t\t\tcontainer = getById(up.settings.container);\r\n\t\t\t\t\tcontainer.style.position = 'relative';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Upload file\r\n\t\t\t\tup.bind(\"UploadFile\", function(up, file) {\r\n\t\t\t\t\tvar form, input;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// File upload finished\r\n\t\t\t\t\tif (file.status == plupload.DONE || file.status == plupload.FAILED || up.state == plupload.STOPPED) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Get the form and input elements\r\n\t\t\t\t\tform = getById('form_' + file.id);\r\n\t\t\t\t\tinput = getById('input_' + file.id);\r\n\r\n\t\t\t\t\t// Set input element name attribute which allows it to be submitted\r\n\t\t\t\t\tinput.setAttribute('name', up.settings.file_data_name);\r\n\r\n\t\t\t\t\t// Store action\r\n\t\t\t\t\tform.setAttribute(\"action\", up.settings.url);\r\n\r\n\t\t\t\t\t// Append multipart parameters\r\n\t\t\t\t\tplupload.each(plupload.extend({name : file.target_name || file.name}, up.settings.multipart_params), function(value, name) {\r\n\t\t\t\t\t\tvar hidden = document.createElement('input');\r\n\r\n\t\t\t\t\t\tplupload.extend(hidden, {\r\n\t\t\t\t\t\t\ttype : 'hidden',\r\n\t\t\t\t\t\t\tname : name,\r\n\t\t\t\t\t\t\tvalue : value\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tform.insertBefore(hidden, form.firstChild);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tcurrentFile = file;\r\n\r\n\t\t\t\t\t// Hide the current form\r\n\t\t\t\t\tgetById('form_' + currentFileId).style.top = -0xFFFFF + \"px\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tform.submit();\r\n\t\t\t\t\tform.parentNode.removeChild(form);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tup.bind('FileUploaded', function(up) {\r\n\t\t\t\t\tup.refresh(); // just to get the form back on top of browse_button\r\n\t\t\t\t});\t\t\t\t\r\n\r\n\t\t\t\tup.bind('StateChanged', function(up) {\r\n\t\t\t\t\tif (up.state == plupload.STARTED) {\r\n\t\t\t\t\t\tcreateIframe();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (up.state == plupload.STOPPED) {\r\n\t\t\t\t\t\twindow.setTimeout(function() {\r\n\t\t\t\t\t\t\tplupload.removeEvent(iframe, 'load', up.id);\r\n\t\t\t\t\t\t\tiframe.parentNode.removeChild(iframe);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Refresh button, will reposition the input form\r\n\t\t\t\tup.bind(\"Refresh\", function(up) {\r\n\t\t\t\t\tvar browseButton, topElement, hoverClass, activeClass, browsePos, browseSize, inputContainer, inputFile, pzIndex;\r\n\r\n\t\t\t\t\tbrowseButton = getById(up.settings.browse_button);\r\n\t\t\t\t\tif (browseButton) {\r\n\t\t\t\t\t\tbrowsePos = plupload.getPos(browseButton, getById(up.settings.container));\r\n\t\t\t\t\t\tbrowseSize = plupload.getSize(browseButton);\r\n\t\t\t\t\t\tinputContainer = getById('form_' + currentFileId);\r\n\t\t\t\t\t\tinputFile = getById('input_' + currentFileId);\r\n\t\r\n\t\t\t\t\t\tplupload.extend(inputContainer.style, {\r\n\t\t\t\t\t\t\ttop : browsePos.y + 'px',\r\n\t\t\t\t\t\t\tleft : browsePos.x + 'px',\r\n\t\t\t\t\t\t\twidth : browseSize.w + 'px',\r\n\t\t\t\t\t\t\theight : browseSize.h + 'px'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// for IE and WebKit place input element underneath the browse button and route onclick event \r\n\t\t\t\t\t\t// TODO: revise when browser support for this feature will change\r\n\t\t\t\t\t\tif (up.features.canOpenDialog) {\r\n\t\t\t\t\t\t\tpzIndex = parseInt(browseButton.parentNode.style.zIndex, 10);\r\n\r\n\t\t\t\t\t\t\tif (isNaN(pzIndex)) {\r\n\t\t\t\t\t\t\t\tpzIndex = 0;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tplupload.extend(browseButton.style, {\r\n\t\t\t\t\t\t\t\tposition : 'relative',\r\n\t\t\t\t\t\t\t\tzIndex : pzIndex\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tplupload.extend(inputContainer.style, {\r\n\t\t\t\t\t\t\t\tzIndex : pzIndex - 1\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t/* Since we have to place input[type=file] on top of the browse_button for some browsers (FF, Opera),\r\n\t\t\t\t\t\tbrowse_button loses interactivity, here we try to neutralize this issue highlighting browse_button\r\n\t\t\t\t\t\twith a special class\r\n\t\t\t\t\t\tTODO: needs to be revised as things will change */\r\n\t\t\t\t\t\thoverClass = up.settings.browse_button_hover;\r\n\t\t\t\t\t\tactiveClass = up.settings.browse_button_active;\r\n\t\t\t\t\t\ttopElement = up.features.canOpenDialog ? browseButton : inputContainer;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hoverClass) {\r\n\t\t\t\t\t\t\tplupload.addEvent(topElement, 'mouseover', function() {\r\n\t\t\t\t\t\t\t\tplupload.addClass(browseButton, hoverClass);\t\r\n\t\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t\t\tplupload.addEvent(topElement, 'mouseout', function() {\r\n\t\t\t\t\t\t\t\tplupload.removeClass(browseButton, hoverClass);\r\n\t\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (activeClass) {\r\n\t\t\t\t\t\t\tplupload.addEvent(topElement, 'mousedown', function() {\r\n\t\t\t\t\t\t\t\tplupload.addClass(browseButton, activeClass);\t\r\n\t\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t\t\tplupload.addEvent(document.body, 'mouseup', function() {\r\n\t\t\t\t\t\t\t\tplupload.removeClass(browseButton, activeClass);\t\r\n\t\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Remove files\r\n\t\t\t\tuploader.bind(\"FilesRemoved\", function(up, files) {\r\n\t\t\t\t\tvar i, n;\r\n\r\n\t\t\t\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\tn = getById('form_' + files[i].id);\r\n\t\t\t\t\t\tif (n) {\r\n\t\t\t\t\t\t\tn.parentNode.removeChild(n);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// Completely destroy the runtime\r\n\t\t\t\tuploader.bind(\"Destroy\", function(up) {\r\n\t\t\t\t\tvar name, element, form,\r\n\t\t\t\t\t\telements = {\r\n\t\t\t\t\t\t\tinputContainer: 'form_' + currentFileId,\r\n\t\t\t\t\t\t\tinputFile: 'input_' + currentFileId,\t\r\n\t\t\t\t\t\t\tbrowseButton: up.settings.browse_button\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Unbind event handlers\r\n\t\t\t\t\tfor (name in elements) {\r\n\t\t\t\t\t\telement = getById(elements[name]);\r\n\t\t\t\t\t\tif (element) {\r\n\t\t\t\t\t\t\tplupload.removeAllEvents(element, up.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplupload.removeAllEvents(document.body, up.id);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Remove mark-up\r\n\t\t\t\t\tplupload.each(fileIds, function(id, i) {\r\n\t\t\t\t\t\tform = getById('form_' + id);\r\n\t\t\t\t\t\tif (form) {\r\n\t\t\t\t\t\t\tcontainer.removeChild(form);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Create initial form\r\n\t\t\t\tcreateForm();\r\n\t\t\t});\r\n\r\n\t\t\tcallback({success : true});\r\n\t\t}\r\n\t});\r\n})(window, document, plupload);\r\n","/**\r\n * plupload.html5.js\r\n *\r\n * Copyright 2009, Moxiecode Systems AB\r\n * Released under GPL License.\r\n *\r\n * License: http://www.plupload.com/license\r\n * Contributing: http://www.plupload.com/contributing\r\n *\r\n *\r\n * 2011-12-04 Balazs Ree <ree@greenfinity.hu>:\r\n *    - Apply html5 (FireFox) fix from forward version 1.5\r\n *\r\n */\r\n\r\n// JSLint defined globals\r\n/*global plupload:false, File:false, window:false, atob:false, FormData:false, FileReader:false, ArrayBuffer:false, Uint8Array:false, BlobBuilder:false, unescape:false */\r\n\r\n(function(window, document, plupload, undef) {\r\n\tvar fakeSafariDragDrop, ExifParser;\r\n\r\n\tfunction readFileAsDataURL(file, callback) {\r\n\t\tvar reader;\r\n\r\n\t\t// Use FileReader if it's available\r\n\t\tif (\"FileReader\" in window) {\r\n\t\t\treader = new FileReader();\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onload = function() {\r\n\t\t\t\tcallback(reader.result);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn callback(file.getAsDataURL());\r\n\t\t}\r\n\t}\r\n\r\n\tfunction readFileAsBinary(file, callback) {\r\n\t\tvar reader;\r\n\r\n\t\t// Use FileReader if it's available\r\n\t\tif (\"FileReader\" in window) {\r\n\t\t\treader = new FileReader();\r\n\t\t\treader.readAsBinaryString(file);\r\n\t\t\treader.onload = function() {\r\n\t\t\t\tcallback(reader.result);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn callback(file.getAsBinary());\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scaleImage(image_file, max_width, max_height, mime, callback) {\r\n\t\tvar canvas, context, img, scale;\r\n\r\n\t\treadFileAsDataURL(image_file, function(data) {\r\n\t\t\t// Setup canvas and context\r\n\t\t\tcanvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.style.display = 'none';\r\n\t\t\tdocument.body.appendChild(canvas);\r\n\t\t\tcontext = canvas.getContext('2d');\r\n\r\n\t\t\t// Load image\r\n\t\t\timg = new Image();\r\n\t\t\timg.onload = function() {\r\n\t\t\t\tvar width, height, percentage, APP1, parser;\r\n\r\n\t\t\t\tscale = Math.min(max_width / img.width, max_height / img.height);\r\n\r\n\t\t\t\tif (scale < 1) {\r\n\t\t\t\t\twidth = Math.round(img.width * scale);\r\n\t\t\t\t\theight = Math.round(img.height * scale);\r\n\r\n\t\t\t\t\t// Scale image and canvas\r\n\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\tcanvas.height = height;\r\n\t\t\t\t\tcontext.drawImage(img, 0, 0, width, height);\r\n\r\n\t\t\t\t\t// Get original EXIF info\r\n\t\t\t\t\tparser = new ExifParser();\r\n\t\t\t\t\tparser.init(atob(data.substring(data.indexOf('base64,') + 7)));\r\n\t\t\t\t\tAPP1 = parser.APP1({width: width, height: height});\r\n\r\n\t\t\t\t\t// Remove data prefix information and grab the base64 encoded data and decode it\r\n\t\t\t\t\tdata = canvas.toDataURL(mime);\r\n\t\t\t\t\tdata = data.substring(data.indexOf('base64,') + 7);\r\n\t\t\t\t\tdata = atob(data);\r\n\r\n\t\t\t\t\t// Restore EXIF info to scaled image\r\n\t\t\t\t\tif (APP1) {\r\n\t\t\t\t\t\tparser.init(data);\r\n\t\t\t\t\t\tparser.setAPP1(APP1);\r\n\t\t\t\t\t\tdata = parser.getBinary();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove canvas and execute callback with decoded image data\r\n\t\t\t\t\tcanvas.parentNode.removeChild(canvas);\r\n\t\t\t\t\tcallback({success : true, data : data});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Image does not need to be resized\r\n\t\t\t\t\tcallback({success : false});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\timg.src = data;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * HMTL5 implementation. This runtime supports these features: dragdrop, jpgresize, pngresize.\r\n\t *\r\n\t * @static\r\n\t * @class plupload.runtimes.Html5\r\n\t * @extends plupload.Runtime\r\n\t */\r\n\tplupload.runtimes.Html5 = plupload.addRuntime(\"html5\", {\r\n\t\t/**\r\n\t\t * Returns a list of supported features for the runtime.\r\n\t\t *\r\n\t\t * @return {Object} Name/value object with supported features.\r\n\t\t */\r\n\t\tgetFeatures : function() {\r\n\t\t\tvar xhr, hasXhrSupport, hasProgress, dataAccessSupport, sliceSupport, win = window;\r\n\r\n\t\t\thasXhrSupport = hasProgress = dataAccessSupport = sliceSupport = false;\r\n\t\t\t\r\n\t\t\t/* Introduce sendAsBinary for cutting edge WebKit builds that have support for BlobBuilder and typed arrays:\r\n\t\t\tcredits: http://javascript0.org/wiki/Portable_sendAsBinary, \r\n\t\t\tmore info: http://code.google.com/p/chromium/issues/detail?id=35705 \r\n\t\t\t*/\t\t\t\r\n\t\t\tif (win.Uint8Array && win.ArrayBuffer && !XMLHttpRequest.prototype.sendAsBinary) {\r\n\t\t\t\tXMLHttpRequest.prototype.sendAsBinary = function(datastr) {\r\n\t\t\t\t\tvar data, ui8a, bb, blob;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata = new ArrayBuffer(datastr.length);\r\n\t\t\t\t\tui8a = new Uint8Array(data, 0);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i=0; i<datastr.length; i++) {\r\n\t\t\t\t\t\tui8a[i] = (datastr.charCodeAt(i) & 0xff);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbb = new BlobBuilder();\r\n\t\t\t\t\tbb.append(data);\r\n\t\t\t\t\tblob = bb.getBlob();\r\n\t\t\t\t\tthis.send(blob);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (win.XMLHttpRequest) {\r\n\t\t\t\txhr = new XMLHttpRequest();\r\n\t\t\t\thasProgress = !!xhr.upload;\r\n\t\t\t\thasXhrSupport = !!(xhr.sendAsBinary || xhr.upload);\r\n\t\t\t}\r\n\r\n\t\t\t// Check for support for various features\r\n\t\t\tif (hasXhrSupport) {\r\n\t\t\t\t// Set dataAccessSupport only for Gecko since BlobBuilder and XHR doesn't handle binary data correctly\t\t\t\t\r\n\t\t\t\tdataAccessSupport = !!(File && (File.prototype.getAsDataURL || win.FileReader) && xhr.sendAsBinary);\r\n\t\t\t\tsliceSupport = !!(File && File.prototype.slice);\r\n\t\t\t}\r\n\r\n\t\t\t// Sniff for Safari and fake drag/drop\r\n\t\t\tfakeSafariDragDrop = navigator.userAgent.indexOf('Safari') > 0 && navigator.vendor.indexOf('Apple') !== -1;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t// Detect drag/drop file support by sniffing, will try to find a better way\r\n\t\t\t\thtml5: hasXhrSupport, // This is a special one that we check inside the init call\r\n\t\t\t\tdragdrop: win.mozInnerScreenX !== undef || sliceSupport || fakeSafariDragDrop,\r\n\t\t\t\tjpgresize: dataAccessSupport,\r\n\t\t\t\tpngresize: dataAccessSupport,\r\n\t\t\t\tmultipart: dataAccessSupport || !!win.FileReader || !!win.FormData,\r\n\t\t\t\tprogress: hasProgress,\r\n\t\t\t\tchunking: sliceSupport || dataAccessSupport,\r\n\t\t\t\t\r\n\t\t\t\t/* WebKit let you trigger file dialog programmatically while FF and Opera - do not, so we\r\n\t\t\t\tsniff for it here... probably not that good idea, but impossibillity of controlling cursor style  \r\n\t\t\t\ton top of add files button obviously feels even worse */\r\n\t\t\t\tcanOpenDialog: navigator.userAgent.indexOf('WebKit') !== -1\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes the upload runtime.\r\n\t\t *\r\n\t\t * @method init\r\n\t\t * @param {plupload.Uploader} uploader Uploader instance that needs to be initialized.\r\n\t\t * @param {function} callback Callback to execute when the runtime initializes or fails to initialize. If it succeeds an object with a parameter name success will be set to true.\r\n\t\t */\r\n\t\tinit : function(uploader, callback) {\r\n\t\t\tvar html5files = {}, features;\r\n\r\n\t\t\tfunction addSelectedFiles(native_files) {\r\n\t\t\t\tvar file, i, files = [], id, fileNames = {};\r\n\r\n\t\t\t\t// Add the selected files to the file queue\r\n\t\t\t\tfor (i = 0; i < native_files.length; i++) {\r\n\t\t\t\t\tfile = native_files[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Safari on Windows will add first file from dragged set multiple times\r\n\t\t\t\t\t// @see: https://bugs.webkit.org/show_bug.cgi?id=37957\r\n\t\t\t\t\tif (fileNames[file.name]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfileNames[file.name] = true;\r\n\r\n\t\t\t\t\t// Store away gears blob internally\r\n\t\t\t\t\tid = plupload.guid();\r\n\t\t\t\t\thtml5files[id] = file;\r\n\r\n\t\t\t\t\t// Expose id, name and size\r\n                                        // XXX RB fix backported from later version 1.5\r\n\t\t\t\t\tfiles.push(new plupload.File(id, file.fileName || file.name, file.fileSize || file.size)); // File.fileSize depricated\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Trigger FilesAdded event if we added any\r\n\t\t\t\tif (files.length) {\r\n\t\t\t\t\tuploader.trigger(\"FilesAdded\", files);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// No HTML5 upload support\r\n\t\t\tfeatures = this.getFeatures();\r\n\t\t\tif (!features.html5) {\r\n\t\t\t\tcallback({success : false});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tuploader.bind(\"Init\", function(up) {\r\n\t\t\t\tvar inputContainer, browseButton, mimes = [], i, y, filters = up.settings.filters, ext, type, container = document.body, inputFile;\r\n\r\n\t\t\t\t// Create input container and insert it at an absolute position within the browse button\r\n\t\t\t\tinputContainer = document.createElement('div');\r\n\t\t\t\tinputContainer.id = up.id + '_html5_container';\r\n\r\n\t\t\t\t// Convert extensions to mime types list\r\n\t\t\t\tfor (i = 0; i < filters.length; i++) {\r\n\t\t\t\t\text = filters[i].extensions.split(/,/);\r\n\r\n\t\t\t\t\tfor (y = 0; y < ext.length; y++) {\r\n\t\t\t\t\t\ttype = plupload.mimeTypes[ext[y]];\r\n\r\n\t\t\t\t\t\tif (type) {\r\n\t\t\t\t\t\t\tmimes.push(type);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplupload.extend(inputContainer.style, {\r\n\t\t\t\t\tposition : 'absolute',\r\n\t\t\t\t\tbackground : uploader.settings.shim_bgcolor || 'transparent',\r\n\t\t\t\t\twidth : '100px',\r\n\t\t\t\t\theight : '100px',\r\n\t\t\t\t\toverflow : 'hidden',\r\n\t\t\t\t\tzIndex : 99999,\r\n\t\t\t\t\topacity : uploader.settings.shim_bgcolor ? '' : 0 // Force transparent if bgcolor is undefined\r\n\t\t\t\t});\r\n\r\n\t\t\t\tinputContainer.className = 'plupload html5';\r\n\r\n\t\t\t\tif (uploader.settings.container) {\r\n\t\t\t\t\tcontainer = document.getElementById(uploader.settings.container);\r\n\t\t\t\t\tcontainer.style.position = 'relative';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainer.appendChild(inputContainer);\r\n\r\n\t\t\t\t// Insert the input inside the input container\r\n\t\t\t\tinputContainer.innerHTML = '<input id=\"' + uploader.id + '_html5\" ' +\r\n\t\t\t\t\t\t\t\t\t\t\t'style=\"width:100%;height:100%;\" type=\"file\" accept=\"' + mimes.join(',') + '\" ' +\r\n\t\t\t\t\t\t\t\t\t\t\t(uploader.settings.multi_selection ? 'multiple=\"multiple\"' : '') + ' />';\r\n\t\t\t\t\r\n\t\t\t\tinputFile = document.getElementById(uploader.id + '_html5');\r\n\t\t\t\tinputFile.onchange = function() {\r\n\t\t\t\t\t// Add the selected files from file input\r\n\t\t\t\t\taddSelectedFiles(this.files);\r\n\r\n\t\t\t\t\t// Clearing the value enables the user to select the same file again if they want to\r\n\t\t\t\t\tthis.value = '';\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t/* Since we have to place input[type=file] on top of the browse_button for some browsers (FF, Opera),\r\n\t\t\t\tbrowse_button loses interactivity, here we try to neutralize this issue highlighting browse_button\r\n\t\t\t\twith a special class\r\n\t\t\t\tTODO: needs to be revised as things will change */\r\n\t\t\t\tbrowseButton = document.getElementById(up.settings.browse_button);\r\n\t\t\t\tif (browseButton) {\t\t\t\t\r\n\t\t\t\t\tvar hoverClass = up.settings.browse_button_hover,\r\n\t\t\t\t\t\tactiveClass = up.settings.browse_button_active,\r\n\t\t\t\t\t\ttopElement = up.features.canOpenDialog ? browseButton : inputContainer;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hoverClass) {\r\n\t\t\t\t\t\tplupload.addEvent(topElement, 'mouseover', function() {\r\n\t\t\t\t\t\t\tplupload.addClass(browseButton, hoverClass);\t\r\n\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t\tplupload.addEvent(topElement, 'mouseout', function() {\r\n\t\t\t\t\t\t\tplupload.removeClass(browseButton, hoverClass);\t\r\n\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (activeClass) {\r\n\t\t\t\t\t\tplupload.addEvent(topElement, 'mousedown', function() {\r\n\t\t\t\t\t\t\tplupload.addClass(browseButton, activeClass);\t\r\n\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t\tplupload.addEvent(document.body, 'mouseup', function() {\r\n\t\t\t\t\t\t\tplupload.removeClass(browseButton, activeClass);\t\r\n\t\t\t\t\t\t}, up.id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Route click event to the input[type=file] element for supporting browsers\r\n\t\t\t\t\tif (up.features.canOpenDialog) {\r\n\t\t\t\t\t\tplupload.addEvent(browseButton, 'click', function(e) {\r\n\t\t\t\t\t\t\tdocument.getElementById(up.id + '_html5').click();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}, up.id); \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Add drop handler\r\n\t\t\tuploader.bind(\"PostInit\", function() {\r\n\t\t\t\tvar dropElm = document.getElementById(uploader.settings.drop_element);\r\n\r\n\t\t\t\tif (dropElm) {\r\n\t\t\t\t\t// Lets fake drag/drop on Safari by moving a input type file in front of the mouse pointer when we drag into the drop zone\r\n\t\t\t\t\t// TODO: Remove this logic once Safari has official drag/drop support\r\n\t\t\t\t\tif (fakeSafariDragDrop) {\r\n\t\t\t\t\t\tplupload.addEvent(dropElm, 'dragenter', function(e) {\r\n\t\t\t\t\t\t\tvar dropInputElm, dropPos, dropSize;\r\n\r\n\t\t\t\t\t\t\t// Get or create drop zone\r\n\t\t\t\t\t\t\tdropInputElm = document.getElementById(uploader.id + \"_drop\");\r\n\t\t\t\t\t\t\tif (!dropInputElm) {\r\n\t\t\t\t\t\t\t\tdropInputElm = document.createElement(\"input\");\r\n\t\t\t\t\t\t\t\tdropInputElm.setAttribute('type', \"file\");\r\n\t\t\t\t\t\t\t\tdropInputElm.setAttribute('id', uploader.id + \"_drop\");\r\n\t\t\t\t\t\t\t\tdropInputElm.setAttribute('multiple', 'multiple');\r\n\r\n\t\t\t\t\t\t\t\tplupload.addEvent(dropInputElm, 'change', function() {\r\n\t\t\t\t\t\t\t\t\t// Add the selected files from file input\r\n\t\t\t\t\t\t\t\t\taddSelectedFiles(this.files);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// Remove input element\r\n\t\t\t\t\t\t\t\t\tplupload.removeEvent(dropInputElm, 'change', uploader.id);\r\n\t\t\t\t\t\t\t\t\tdropInputElm.parentNode.removeChild(dropInputElm);\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}, uploader.id);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdropElm.appendChild(dropInputElm);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdropPos = plupload.getPos(dropElm, document.getElementById(uploader.settings.container));\r\n\t\t\t\t\t\t\tdropSize = plupload.getSize(dropElm);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tplupload.extend(dropElm.style, {\r\n\t\t\t\t\t\t\t\tposition : 'relative'\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tplupload.extend(dropInputElm.style, {\r\n\t\t\t\t\t\t\t\tposition : 'absolute',\r\n\t\t\t\t\t\t\t\tdisplay : 'block',\r\n\t\t\t\t\t\t\t\ttop : 0,\r\n\t\t\t\t\t\t\t\tleft : 0,\r\n\t\t\t\t\t\t\t\twidth : dropSize.w + 'px',\r\n\t\t\t\t\t\t\t\theight : dropSize.h + 'px',\r\n\t\t\t\t\t\t\t\topacity : 0\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, uploader.id);\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Block browser default drag over\r\n\t\t\t\t\tplupload.addEvent(dropElm, 'dragover', function(e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}, uploader.id);\r\n\r\n\t\t\t\t\t// Attach drop handler and grab files\r\n\t\t\t\t\tplupload.addEvent(dropElm, 'drop', function(e) {\r\n\t\t\t\t\t\tvar dataTransfer = e.dataTransfer;\r\n\r\n\t\t\t\t\t\t// Add dropped files\r\n\t\t\t\t\t\tif (dataTransfer && dataTransfer.files) {\r\n\t\t\t\t\t\t\taddSelectedFiles(dataTransfer.files);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}, uploader.id);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tuploader.bind(\"Refresh\", function(up) {\r\n\t\t\t\tvar browseButton, browsePos, browseSize, inputContainer, pzIndex;\r\n\t\t\t\t\t\r\n\t\t\t\tbrowseButton = document.getElementById(uploader.settings.browse_button);\r\n\t\t\t\tif (browseButton) {\r\n\t\t\t\t\tbrowsePos = plupload.getPos(browseButton, document.getElementById(up.settings.container));\r\n\t\t\t\t\tbrowseSize = plupload.getSize(browseButton);\r\n\t\t\t\t\tinputContainer = document.getElementById(uploader.id + '_html5_container');\r\n\t\r\n\t\t\t\t\tplupload.extend(inputContainer.style, {\r\n\t\t\t\t\t\ttop : browsePos.y + 'px',\r\n\t\t\t\t\t\tleft : browsePos.x + 'px',\r\n\t\t\t\t\t\twidth : browseSize.w + 'px',\r\n\t\t\t\t\t\theight : browseSize.h + 'px'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// for IE and WebKit place input element underneath the browse button and route onclick event \r\n\t\t\t\t\t// TODO: revise when browser support for this feature will change\r\n\t\t\t\t\tif (uploader.features.canOpenDialog) {\r\n\t\t\t\t\t\tpzIndex = parseInt(browseButton.parentNode.style.zIndex, 10);\r\n\t\r\n\t\t\t\t\t\tif (isNaN(pzIndex)) {\r\n\t\t\t\t\t\t\tpzIndex = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tplupload.extend(browseButton.style, {\r\n\t\t\t\t\t\t\tposition : 'relative',\r\n\t\t\t\t\t\t\tzIndex : pzIndex\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tplupload.extend(inputContainer.style, {\r\n\t\t\t\t\t\t\tzIndex : pzIndex - 1\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tuploader.bind(\"UploadFile\", function(up, file) {\r\n\t\t\t\tvar settings = up.settings, nativeFile, resize;\r\n\r\n\t\t\t\tfunction sendBinaryBlob(blob) {\r\n\t\t\t\t\tvar chunk = 0, loaded = 0;\r\n\r\n\t\t\t\t\tfunction uploadNextChunk() {\r\n\t\t\t\t\t\tvar chunkBlob = blob, xhr, upload, chunks, args, multipartDeltaSize = 0,\r\n\t\t\t\t\t\t\tboundary = '----pluploadboundary' + plupload.guid(), chunkSize, curChunkSize, formData,\r\n\t\t\t\t\t\t\tdashdash = '--', crlf = '\\r\\n', multipartBlob = '', mimeType, url = up.settings.url;\r\n\r\n\t\t\t\t\t\t// File upload finished\r\n\t\t\t\t\t\tif (file.status == plupload.DONE || file.status == plupload.FAILED || up.state == plupload.STOPPED) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Standard arguments\r\n\t\t\t\t\t\targs = {name : file.target_name || file.name};\r\n\r\n\t\t\t\t\t\t// Only add chunking args if needed\r\n\t\t\t\t\t\tif (settings.chunk_size && features.chunking) {\r\n\t\t\t\t\t\t\tchunkSize = settings.chunk_size;\r\n\t\t\t\t\t\t\tchunks = Math.ceil(file.size / chunkSize);\r\n\t\t\t\t\t\t\tcurChunkSize = Math.min(chunkSize, file.size - (chunk * chunkSize));\r\n\r\n\t\t\t\t\t\t\t// Blob is string so we need to fake chunking, this is not\r\n\t\t\t\t\t\t\t// ideal since the whole file is loaded into memory\r\n\t\t\t\t\t\t\tif (typeof(blob) == 'string') {\r\n\t\t\t\t\t\t\t\tchunkBlob = blob.substring(chunk * chunkSize, chunk * chunkSize + curChunkSize);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Slice the chunk\r\n\t\t\t\t\t\t\t\tchunkBlob = blob.slice(chunk * chunkSize, curChunkSize);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Setup query string arguments\r\n\t\t\t\t\t\t\targs.chunk = chunk;\r\n\t\t\t\t\t\t\targs.chunks = chunks;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcurChunkSize = file.size;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Setup XHR object\r\n\t\t\t\t\t\txhr = new XMLHttpRequest();\r\n\t\t\t\t\t\tupload = xhr.upload;\r\n\r\n\t\t\t\t\t\t// Do we have upload progress support\r\n\t\t\t\t\t\tif (upload) {\r\n\t\t\t\t\t\t\tupload.onprogress = function(e) {\r\n\t\t\t\t\t\t\t\tfile.loaded = Math.min(file.size, loaded + e.loaded - multipartDeltaSize); // Loaded can be larger than file size due to multipart encoding\r\n\t\t\t\t\t\t\t\tup.trigger('UploadProgress', file);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add name, chunk and chunks to query string on direct streaming\r\n\t\t\t\t\t\tif (!up.settings.multipart || !features.multipart) {\r\n\t\t\t\t\t\t\turl = plupload.buildUrl(up.settings.url, args);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\targs.name = file.target_name || file.name;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\txhr.open(\"post\", url, true);\r\n\r\n\t\t\t\t\t\txhr.onreadystatechange = function() {\r\n\t\t\t\t\t\t\tvar httpStatus, chunkArgs;\r\n\r\n\t\t\t\t\t\t\tif (xhr.readyState == 4) {\r\n\t\t\t\t\t\t\t\t// Getting the HTTP status might fail on some Gecko versions\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\thttpStatus = xhr.status;\r\n\t\t\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\t\t\thttpStatus = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Is error status\r\n\t\t\t\t\t\t\t\tif (httpStatus >= 400) {\r\n\t\t\t\t\t\t\t\t\tup.trigger('Error', {\r\n\t\t\t\t\t\t\t\t\t\tcode : plupload.HTTP_ERROR,\r\n\t\t\t\t\t\t\t\t\t\tmessage : plupload.translate('HTTP Error.'),\r\n\t\t\t\t\t\t\t\t\t\tfile : file,\r\n\t\t\t\t\t\t\t\t\t\tstatus : httpStatus\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Handle chunk response\r\n\t\t\t\t\t\t\t\t\tif (chunks) {\r\n\t\t\t\t\t\t\t\t\t\tchunkArgs = {\r\n\t\t\t\t\t\t\t\t\t\t\tchunk : chunk,\r\n\t\t\t\t\t\t\t\t\t\t\tchunks : chunks,\r\n\t\t\t\t\t\t\t\t\t\t\tresponse : xhr.responseText,\r\n\t\t\t\t\t\t\t\t\t\t\tstatus : httpStatus\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\t\tup.trigger('ChunkUploaded', file, chunkArgs);\r\n\t\t\t\t\t\t\t\t\t\tloaded += curChunkSize;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Stop upload\r\n\t\t\t\t\t\t\t\t\t\tif (chunkArgs.cancelled) {\r\n\t\t\t\t\t\t\t\t\t\t\tfile.status = plupload.FAILED;\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tfile.loaded = Math.min(file.size, (chunk + 1) * chunkSize);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tfile.loaded = file.size;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tup.trigger('UploadProgress', file);\r\n\r\n\t\t\t\t\t\t\t\t\t// Check if file is uploaded\r\n\t\t\t\t\t\t\t\t\tif (!chunks || ++chunk >= chunks) {\r\n\t\t\t\t\t\t\t\t\t\tfile.status = plupload.DONE;\r\n\t\t\t\t\t\t\t\t\t\tup.trigger('FileUploaded', file, {\r\n\t\t\t\t\t\t\t\t\t\t\tresponse : xhr.responseText,\r\n\t\t\t\t\t\t\t\t\t\t\tstatus : httpStatus\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\tnativeFile = blob = html5files[file.id] = null; // Free memory\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t// Still chunks left\r\n\t\t\t\t\t\t\t\t\t\tuploadNextChunk();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\txhr = chunkBlob = formData = multipartBlob = null; // Free memory\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Set custom headers\r\n\t\t\t\t\t\tplupload.each(up.settings.headers, function(value, name) {\r\n\t\t\t\t\t\t\txhr.setRequestHeader(name, value);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Build multipart request\r\n\t\t\t\t\t\tif (up.settings.multipart && features.multipart) {\r\n\t\t\t\t\t\t\t// Has FormData support like Chrome 6+, Safari 5+, Firefox 4\r\n\t\t\t\t\t\t\tif (!xhr.sendAsBinary) {\r\n\t\t\t\t\t\t\t\tformData = new FormData();\r\n\r\n\t\t\t\t\t\t\t\t// Add multipart params\r\n\t\t\t\t\t\t\t\tplupload.each(plupload.extend(args, up.settings.multipart_params), function(value, name) {\r\n\t\t\t\t\t\t\t\t\tformData.append(name, value);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Add file and send it\r\n\t\t\t\t\t\t\t\tformData.append(up.settings.file_data_name, chunkBlob);\r\n\t\t\t\t\t\t\t\txhr.send(formData);\r\n\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Gecko multipart request\r\n\t\t\t\t\t\t\txhr.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + boundary);\r\n\r\n\t\t\t\t\t\t\t// Append multipart parameters\r\n\t\t\t\t\t\t\tplupload.each(plupload.extend(args, up.settings.multipart_params), function(value, name) {\r\n\t\t\t\t\t\t\t\tmultipartBlob += dashdash + boundary + crlf +\r\n\t\t\t\t\t\t\t\t\t'Content-Disposition: form-data; name=\"' + name + '\"' + crlf + crlf;\r\n\r\n\t\t\t\t\t\t\t\tmultipartBlob += unescape(encodeURIComponent(value)) + crlf;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tmimeType = plupload.mimeTypes[file.name.replace(/^.+\\.([^.]+)/, '$1')] || 'application/octet-stream';\r\n\r\n\t\t\t\t\t\t\t// Build RFC2388 blob\r\n\t\t\t\t\t\t\tmultipartBlob += dashdash + boundary + crlf +\r\n\t\t\t\t\t\t\t\t'Content-Disposition: form-data; name=\"' + up.settings.file_data_name + '\"; filename=\"' + unescape(encodeURIComponent(file.name)) + '\"' + crlf +\r\n\t\t\t\t\t\t\t\t'Content-Type: ' + mimeType + crlf + crlf +\r\n\t\t\t\t\t\t\t\tchunkBlob + crlf +\r\n\t\t\t\t\t\t\t\tdashdash + boundary + dashdash + crlf;\r\n\r\n\t\t\t\t\t\t\tmultipartDeltaSize = multipartBlob.length - chunkBlob.length;\r\n\t\t\t\t\t\t\tchunkBlob = multipartBlob;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Binary stream header\r\n\t\t\t\t\t\t\txhr.setRequestHeader('Content-Type', 'application/octet-stream');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (xhr.sendAsBinary) {\r\n\t\t\t\t\t\t\txhr.sendAsBinary(chunkBlob); // Gecko\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\txhr.send(chunkBlob); // WebKit\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Start uploading chunks\r\n\t\t\t\t\tuploadNextChunk();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnativeFile = html5files[file.id];\r\n\t\t\t\tresize = up.settings.resize;\r\n\r\n\t\t\t\tif (features.jpgresize) {\r\n\t\t\t\t\t// Resize image if it's a supported format and resize is enabled\r\n\t\t\t\t\tif (resize && /\\.(png|jpg|jpeg)$/i.test(file.name)) {\r\n\t\t\t\t\t\tscaleImage(nativeFile, resize.width, resize.height, /\\.png$/i.test(file.name) ? 'image/png' : 'image/jpeg', function(res) {\r\n\t\t\t\t\t\t\t// If it was scaled send the scaled image if it failed then\r\n\t\t\t\t\t\t\t// send the raw image and let the server do the scaling\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tfile.size = res.data.length;\r\n\t\t\t\t\t\t\t\tsendBinaryBlob(res.data);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treadFileAsBinary(nativeFile, sendBinaryBlob);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treadFileAsBinary(nativeFile, sendBinaryBlob);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsendBinaryBlob(nativeFile); // this works on older WebKits, but fails on fresh ones\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tuploader.bind('Destroy', function(up) {\r\n\t\t\t\tvar name, element, container = document.body,\r\n\t\t\t\t\telements = {\r\n\t\t\t\t\t\tinputContainer: up.id + '_html5_container',\r\n\t\t\t\t\t\tinputFile: up.id + '_html5',\r\n\t\t\t\t\t\tbrowseButton: up.settings.browse_button,\r\n\t\t\t\t\t\tdropElm: up.settings.drop_element\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t// Unbind event handlers\r\n\t\t\t\tfor (name in elements) {\r\n\t\t\t\t\telement = document.getElementById(elements[name]);\r\n\t\t\t\t\tif (element) {\r\n\t\t\t\t\t\tplupload.removeAllEvents(element, up.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tplupload.removeAllEvents(document.body, up.id);\r\n\t\t\t\t\r\n\t\t\t\tif (up.settings.container) {\r\n\t\t\t\t\tcontainer = document.getElementById(up.settings.container);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Remove mark-up\r\n\t\t\t\tcontainer.removeChild(document.getElementById(elements.inputContainer));\r\n\t\t\t});\r\n\r\n\t\t\tcallback({success : true});\r\n\t\t}\r\n\t});\r\n\r\n\tExifParser = function() {\r\n\t\t// Private ExifParser fields\r\n\t\tvar Tiff, Exif, GPS, app0, app0_offset, app0_length, app1, app1_offset, data,\r\n\t\t\tapp1_length, exifIFD_offset, gpsIFD_offset, IFD0_offset, TIFFHeader_offset, undef,\r\n\t\t\ttiffTags, exifTags, gpsTags, tagDescs;\r\n\r\n\t\t/**\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tfunction BinaryReader() {\r\n\t\t\tvar II = false, bin;\r\n\r\n\t\t\t// Private functions\r\n\t\t\tfunction read(idx, size) {\r\n\t\t\t\tvar mv = II ? 0 : -8 * (size - 1), sum = 0, i;\r\n\r\n\t\t\t\tfor (i = 0; i < size; i++) {\r\n\t\t\t\t\tsum |= (bin.charCodeAt(idx + i) << Math.abs(mv + i*8));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sum;\r\n\t\t\t}\r\n\r\n\t\t\tfunction putstr(idx, segment, replace) {\r\n\t\t\t\tbin = bin.substr(0, idx) + segment + bin.substr((replace === true ? segment.length : 0) + idx);\r\n\t\t\t}\r\n\r\n\t\t\tfunction write(idx, num, size) {\r\n\t\t\t\tvar str = '', mv = II ? 0 : -8 * (size - 1), i;\r\n\r\n\t\t\t\tfor (i = 0; i < size; i++) {\r\n\t\t\t\t\tstr += String.fromCharCode((num >> Math.abs(mv + i*8)) & 255);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tputstr(idx, str, true);\r\n\t\t\t}\r\n\r\n\t\t\t// Public functions\r\n\t\t\treturn {\r\n\t\t\t\tII: function(order) {\r\n\t\t\t\t\tif (order === undef) {\r\n\t\t\t\t\t\treturn II;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tII = order;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tinit: function(binData) {\r\n\t\t\t\t\tbin = binData;\r\n\t\t\t\t},\r\n\r\n\t\t\t\tSEGMENT: function(idx, segment, replace) {\r\n\t\t\t\t\tif (!arguments.length) {\r\n\t\t\t\t\t\treturn bin;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (typeof segment == 'number') {\r\n\t\t\t\t\t\treturn bin.substr(parseInt(idx, 10), segment);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tputstr(idx, segment, replace);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tBYTE: function(idx) {\r\n\t\t\t\t\treturn read(idx, 1);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tSHORT: function(idx) {\r\n\t\t\t\t\treturn read(idx, 2);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tLONG: function(idx, num) {\r\n\t\t\t\t\tif (num === undef) {\r\n\t\t\t\t\t\treturn read(idx, 4);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\twrite(idx, num, 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tSLONG: function(idx) { // 2's complement notation\r\n\t\t\t\t\tvar num = read(idx, 4);\r\n\r\n\t\t\t\t\treturn (num > 2147483647 ? num - 4294967296 : num);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tSTRING: function(idx, size) {\r\n\t\t\t\t\tvar str = '';\r\n\r\n\t\t\t\t\tfor (size += idx; idx < size; idx++) {\r\n\t\t\t\t\t\tstr += String.fromCharCode(read(idx, 1));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn str;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdata = new BinaryReader();\r\n\r\n\t\ttiffTags = {\r\n\t\t\t/*\r\n\t\t\tThe image orientation viewed in terms of rows and columns.\r\n\r\n\t\t\t1 - The 0th row is at the visual top of the image, and the 0th column is the visual left-hand side.\r\n\t\t\t2 - The 0th row is at the visual top of the image, and the 0th column is the visual left-hand side.\r\n\t\t\t3 - The 0th row is at the visual top of the image, and the 0th column is the visual right-hand side.\r\n\t\t\t4 - The 0th row is at the visual bottom of the image, and the 0th column is the visual right-hand side.\r\n\t\t\t5 - The 0th row is at the visual bottom of the image, and the 0th column is the visual left-hand side.\r\n\t\t\t6 - The 0th row is the visual left-hand side of the image, and the 0th column is the visual top.\r\n\t\t\t7 - The 0th row is the visual right-hand side of the image, and the 0th column is the visual top.\r\n\t\t\t8 - The 0th row is the visual right-hand side of the image, and the 0th column is the visual bottom.\r\n\t\t\t9 - The 0th row is the visual left-hand side of the image, and the 0th column is the visual bottom.\r\n\t\t\t*/\r\n\t\t\t0x0112: 'Orientation',\r\n\t\t\t0x8769: 'ExifIFDPointer',\r\n\t\t\t0x8825:\t'GPSInfoIFDPointer'\r\n\t\t};\r\n\r\n\t\texifTags = {\r\n\t\t\t0x9000: 'ExifVersion',\r\n\t\t\t0xA001: 'ColorSpace',\r\n\t\t\t0xA002: 'PixelXDimension',\r\n\t\t\t0xA003: 'PixelYDimension',\r\n\t\t\t0x9003: 'DateTimeOriginal',\r\n\t\t\t0x829A: 'ExposureTime',\r\n\t\t\t0x829D: 'FNumber',\r\n\t\t\t0x8827: 'ISOSpeedRatings',\r\n\t\t\t0x9201: 'ShutterSpeedValue',\r\n\t\t\t0x9202: 'ApertureValue'\t,\r\n\t\t\t0x9207: 'MeteringMode',\r\n\t\t\t0x9208: 'LightSource',\r\n\t\t\t0x9209: 'Flash',\r\n\t\t\t0xA402: 'ExposureMode',\r\n\t\t\t0xA403: 'WhiteBalance',\r\n\t\t\t0xA406: 'SceneCaptureType',\r\n\t\t\t0xA404: 'DigitalZoomRatio',\r\n\t\t\t0xA408: 'Contrast',\r\n\t\t\t0xA409: 'Saturation',\r\n\t\t\t0xA40A: 'Sharpness'\r\n\t\t};\r\n\r\n\t\tgpsTags = {\r\n\t\t\t0x0000: 'GPSVersionID',\r\n\t\t\t0x0001: 'GPSLatitudeRef',\r\n\t\t\t0x0002: 'GPSLatitude',\r\n\t\t\t0x0003: 'GPSLongitudeRef',\r\n\t\t\t0x0004: 'GPSLongitude'\r\n\t\t};\r\n\r\n\t\ttagDescs = {\r\n\t\t\t'ColorSpace': {\r\n\t\t\t\t1: 'sRGB',\r\n\t\t\t\t0: 'Uncalibrated'\r\n\t\t\t},\r\n\r\n\t\t\t'MeteringMode': {\r\n\t\t\t\t0: 'Unknown',\r\n\t\t\t\t1: 'Average',\r\n\t\t\t\t2: 'CenterWeightedAverage',\r\n\t\t\t\t3: 'Spot',\r\n\t\t\t\t4: 'MultiSpot',\r\n\t\t\t\t5: 'Pattern',\r\n\t\t\t\t6: 'Partial',\r\n\t\t\t\t255: 'Other'\r\n\t\t\t},\r\n\r\n\t\t\t'LightSource': {\r\n\t\t\t\t1: 'Daylight',\r\n\t\t\t\t2: 'Fliorescent',\r\n\t\t\t\t3: 'Tungsten',\r\n\t\t\t\t4: 'Flash',\r\n\t\t\t\t9: 'Fine weather',\r\n\t\t\t\t10: 'Cloudy weather',\r\n\t\t\t\t11: 'Shade',\r\n\t\t\t\t12: 'Daylight fluorescent (D 5700 - 7100K)',\r\n\t\t\t\t13: 'Day white fluorescent (N 4600 -5400K)',\r\n\t\t\t\t14: 'Cool white fluorescent (W 3900 - 4500K)',\r\n\t\t\t\t15: 'White fluorescent (WW 3200 - 3700K)',\r\n\t\t\t\t17: 'Standard light A',\r\n\t\t\t\t18: 'Standard light B',\r\n\t\t\t\t19: 'Standard light C',\r\n\t\t\t\t20: 'D55',\r\n\t\t\t\t21: 'D65',\r\n\t\t\t\t22: 'D75',\r\n\t\t\t\t23: 'D50',\r\n\t\t\t\t24: 'ISO studio tungsten',\r\n\t\t\t\t255: 'Other'\r\n\t\t\t},\r\n\r\n\t\t\t'Flash': {\r\n\t\t\t\t0x0000: 'Flash did not fire.',\r\n\t\t\t\t0x0001: 'Flash fired.',\r\n\t\t\t\t0x0005: 'Strobe return light not detected.',\r\n\t\t\t\t0x0007: 'Strobe return light detected.',\r\n\t\t\t\t0x0009: 'Flash fired, compulsory flash mode',\r\n\t\t\t\t0x000D: 'Flash fired, compulsory flash mode, return light not detected',\r\n\t\t\t\t0x000F: 'Flash fired, compulsory flash mode, return light detected',\r\n\t\t\t\t0x0010: 'Flash did not fire, compulsory flash mode',\r\n\t\t\t\t0x0018: 'Flash did not fire, auto mode',\r\n\t\t\t\t0x0019: 'Flash fired, auto mode',\r\n\t\t\t\t0x001D: 'Flash fired, auto mode, return light not detected',\r\n\t\t\t\t0x001F: 'Flash fired, auto mode, return light detected',\r\n\t\t\t\t0x0020: 'No flash function',\r\n\t\t\t\t0x0041: 'Flash fired, red-eye reduction mode',\r\n\t\t\t\t0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\r\n\t\t\t\t0x0047: 'Flash fired, red-eye reduction mode, return light detected',\r\n\t\t\t\t0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\r\n\t\t\t\t0x004D: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\r\n\t\t\t\t0x004F: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\r\n\t\t\t\t0x0059: 'Flash fired, auto mode, red-eye reduction mode',\r\n\t\t\t\t0x005D: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\r\n\t\t\t\t0x005F: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\r\n\t\t\t},\r\n\r\n\t\t\t'ExposureMode': {\r\n\t\t\t\t0: 'Auto exposure',\r\n\t\t\t\t1: 'Manual exposure',\r\n\t\t\t\t2: 'Auto bracket'\r\n\t\t\t},\r\n\r\n\t\t\t'WhiteBalance': {\r\n\t\t\t\t0: 'Auto white balance',\r\n\t\t\t\t1: 'Manual white balance'\r\n\t\t\t},\r\n\r\n\t\t\t'SceneCaptureType': {\r\n\t\t\t\t0: 'Standard',\r\n\t\t\t\t1: 'Landscape',\r\n\t\t\t\t2: 'Portrait',\r\n\t\t\t\t3: 'Night scene'\r\n\t\t\t},\r\n\r\n\t\t\t'Contrast': {\r\n\t\t\t\t0: 'Normal',\r\n\t\t\t\t1: 'Soft',\r\n\t\t\t\t2: 'Hard'\r\n\t\t\t},\r\n\r\n\t\t\t'Saturation': {\r\n\t\t\t\t0: 'Normal',\r\n\t\t\t\t1: 'Low saturation',\r\n\t\t\t\t2: 'High saturation'\r\n\t\t\t},\r\n\r\n\t\t\t'Sharpness': {\r\n\t\t\t\t0: 'Normal',\r\n\t\t\t\t1: 'Soft',\r\n\t\t\t\t2: 'Hard'\r\n\t\t\t},\r\n\r\n\t\t\t// GPS related\r\n\t\t\t'GPSLatitudeRef': {\r\n\t\t\t\tN: 'North latitude',\r\n\t\t\t\tS: 'South latitude'\r\n\t\t\t},\r\n\r\n\t\t\t'GPSLongitudeRef': {\r\n\t\t\t\tE: 'East longitude',\r\n\t\t\t\tW: 'West longitude'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction extractTags(IFD_offset, tags2extract) {\r\n\t\t\tvar length = data.SHORT(IFD_offset), i, ii,\r\n\t\t\t\ttag, type, count, tagOffset, offset, value, values = [], tags = {};\r\n\r\n\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t// Set binary reader pointer to beginning of the next tag\r\n\t\t\t\toffset = tagOffset = IFD_offset + 12 * i + 2;\r\n\r\n\t\t\t\ttag = tags2extract[data.SHORT(offset)];\r\n\r\n\t\t\t\tif (tag === undef) {\r\n\t\t\t\t\tcontinue; // Not the tag we requested\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttype = data.SHORT(offset+=2);\r\n\t\t\t\tcount = data.LONG(offset+=2);\r\n\r\n\t\t\t\toffset += 4;\r\n\t\t\t\tvalues = [];\r\n\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase 1: // BYTE\r\n\t\t\t\t\tcase 7: // UNDEFINED\r\n\t\t\t\t\t\tif (count > 4) {\r\n\t\t\t\t\t\t\toffset = data.LONG(offset) + TIFFHeader_offset;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (ii = 0; ii < count; ii++) {\r\n\t\t\t\t\t\t\tvalues[ii] = data.BYTE(offset + ii);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2: // STRING\r\n\t\t\t\t\t\tif (count > 4) {\r\n\t\t\t\t\t\t\toffset = data.LONG(offset) + TIFFHeader_offset;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttags[tag] = data.STRING(offset, count - 1);\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tcase 3: // SHORT\r\n\t\t\t\t\t\tif (count > 2) {\r\n\t\t\t\t\t\t\toffset = data.LONG(offset) + TIFFHeader_offset;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (ii = 0; ii < count; ii++) {\r\n\t\t\t\t\t\t\tvalues[ii] = data.SHORT(offset + ii*2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 4: // LONG\r\n\t\t\t\t\t\tif (count > 1) {\r\n\t\t\t\t\t\t\toffset = data.LONG(offset) + TIFFHeader_offset;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (ii = 0; ii < count; ii++) {\r\n\t\t\t\t\t\t\tvalues[ii] = data.LONG(offset + ii*4);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5: // RATIONAL\r\n\t\t\t\t\t\toffset = data.LONG(offset) + TIFFHeader_offset;\r\n\r\n\t\t\t\t\t\tfor (ii = 0; ii < count; ii++) {\r\n\t\t\t\t\t\t\tvalues[ii] = data.LONG(offset + ii*4) / data.LONG(offset + ii*4 + 4);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 9: // SLONG\r\n\t\t\t\t\t\toffset = data.LONG(offset) + TIFFHeader_offset;\r\n\r\n\t\t\t\t\t\tfor (ii = 0; ii < count; ii++) {\r\n\t\t\t\t\t\t\tvalues[ii] = data.SLONG(offset + ii*4);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 10: // SRATIONAL\r\n\t\t\t\t\t\toffset = data.LONG(offset) + TIFFHeader_offset;\r\n\r\n\t\t\t\t\t\tfor (ii = 0; ii < count; ii++) {\r\n\t\t\t\t\t\t\tvalues[ii] = data.SLONG(offset + ii*4) / data.SLONG(offset + ii*4 + 4);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = (count == 1 ? values[0] : values);\r\n\r\n\t\t\t\tif (tagDescs.hasOwnProperty(tag) && typeof value != 'object') {\r\n\t\t\t\t\ttags[tag] = tagDescs[tag][value];\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttags[tag] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn tags;\r\n\t\t}\r\n\r\n\t\tfunction getIFDOffsets() {\r\n\t\t\tvar idx = app1_offset + 4;\r\n\r\n\t\t\t// Fix TIFF header offset\r\n\t\t\tTIFFHeader_offset += app1_offset;\r\n\r\n\t\t\t// Check if that's EXIF we are reading\r\n\t\t\tif (data.STRING(idx, 4).toUpperCase() !== 'EXIF' || data.SHORT(idx+=4) !== 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set read order of multi-byte data\r\n\t\t\tdata.II(data.SHORT(idx+=2) == 0x4949);\r\n\r\n\t\t\t// Check if always present bytes are indeed present\r\n\t\t\tif (data.SHORT(idx+=2) !== 0x002A) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tIFD0_offset = TIFFHeader_offset + data.LONG(idx += 2);\r\n\t\t\tTiff = extractTags(IFD0_offset, tiffTags);\r\n\r\n\t\t\texifIFD_offset = ('ExifIFDPointer' in Tiff ? TIFFHeader_offset + Tiff.ExifIFDPointer : undef);\r\n\t\t\tgpsIFD_offset = ('GPSInfoIFDPointer' in Tiff ? TIFFHeader_offset + Tiff.GPSInfoIFDPointer : undef);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfunction findTagValueOffset(data_app1, tegHex, offset) {\r\n\t\t\tvar length = data_app1.SHORT(offset), tagOffset, i;\r\n\r\n\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\ttagOffset = offset + 12 * i + 2;\r\n\r\n\t\t\t\tif (data_app1.SHORT(tagOffset) == tegHex) {\r\n\t\t\t\t\treturn tagOffset + 8;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setNewWxH(width, height) {\r\n\t\t\tvar w_offset, h_offset,\r\n\t\t\t\toffset = exifIFD_offset != undef ? exifIFD_offset - app1_offset : undef,\r\n\t\t\t\tdata_app1 = new BinaryReader();\r\n\r\n\t\t\tdata_app1.init(app1);\r\n\t\t\tdata_app1.II(data.II());\r\n\r\n\t\t\tif (offset === undef) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Find offset for PixelXDimension tag\r\n\t\t\tw_offset = findTagValueOffset(data_app1, 0xA002, offset);\r\n\t\t\tif (w_offset !== undef) {\r\n\t\t\t\tdata_app1.LONG(w_offset, width);\r\n\t\t\t}\r\n\r\n\t\t\t// Find offset for PixelYDimension tag\r\n\t\t\th_offset = findTagValueOffset(data_app1, 0xA003, offset);\r\n\t\t\tif (h_offset !== undef) {\r\n\t\t\t\tdata_app1.LONG(h_offset, height);\r\n\t\t\t}\r\n\r\n\t\t\tapp1 = data_app1.SEGMENT();\r\n\t\t}\r\n\r\n\t\t// Public functions\r\n\t\treturn {\r\n\t\t\tinit: function(jpegData) {\r\n\t\t\t\t// Reset internal data\r\n\t\t\t\tTIFFHeader_offset = 10;\r\n\t\t\t\tTiff = Exif = GPS = app0 = app0_offset = app0_length = app1 = app1_offset = app1_length = undef;\r\n\r\n\t\t\t\tdata.init(jpegData);\r\n\r\n\t\t\t\t// Check if data is jpeg\r\n\t\t\t\tif (data.SHORT(0) !== 0xFFD8) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (data.SHORT(2)) {\r\n\t\t\t\t\t// app0\r\n\t\t\t\t\tcase 0xFFE0:\r\n\t\t\t\t\t\tapp0_offset = 2;\r\n\t\t\t\t\t\tapp0_length = data.SHORT(4) + 2;\r\n\r\n\t\t\t\t\t\t// check if app1 follows\r\n\t\t\t\t\t\tif (data.SHORT(app0_length) == 0xFFE1) {\r\n\t\t\t\t\t\t\tapp1_offset = app0_length;\r\n\t\t\t\t\t\t\tapp1_length = data.SHORT(app0_length + 2) + 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// app1\r\n\t\t\t\t\tcase 0xFFE1:\r\n\t\t\t\t\t\tapp1_offset = 2;\r\n\t\t\t\t\t\tapp1_length = data.SHORT(4) + 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (app1_length !== undef) {\r\n\t\t\t\t\tgetIFDOffsets();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tAPP1: function(args) {\r\n\t\t\t\tif (app1_offset === undef && app1_length === undef) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tapp1 = app1 || (app1 = data.SEGMENT(app1_offset, app1_length));\r\n\r\n\t\t\t\t// If requested alter width/height tags in app1\r\n\t\t\t\tif (args !== undef && 'width' in args && 'height' in args) {\r\n\t\t\t\t\tsetNewWxH(args.width, args.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn app1;\r\n\t\t\t},\r\n\r\n\t\t\tEXIF: function() {\r\n\t\t\t\t// Populate EXIF hash\r\n\t\t\t\tExif = extractTags(exifIFD_offset, exifTags);\r\n\r\n\t\t\t\t// Fix formatting of some tags\r\n\t\t\t\tExif.ExifVersion = String.fromCharCode(\r\n\t\t\t\t\tExif.ExifVersion[0],\r\n\t\t\t\t\tExif.ExifVersion[1],\r\n\t\t\t\t\tExif.ExifVersion[2],\r\n\t\t\t\t\tExif.ExifVersion[3]\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn Exif;\r\n\t\t\t},\r\n\r\n\t\t\tGPS: function() {\r\n\t\t\t\tGPS = extractTags(gpsIFD_offset, gpsTags);\r\n\t\t\t\tGPS.GPSVersionID = GPS.GPSVersionID.join('.');\r\n\r\n\t\t\t\treturn GPS;\r\n\t\t\t},\r\n\r\n\t\t\tsetAPP1: function(data_app1) {\r\n\t\t\t\tif (app1_offset !== undef) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.SEGMENT((app0_offset ? app0_offset + app0_length : 2), data_app1);\r\n\t\t\t},\r\n\r\n\t\t\tgetBinary: function() {\r\n\t\t\t\treturn data.SEGMENT();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n})(window, document, plupload);\r\n","/**\r\n * jquery.ui.plupload.js\r\n *\r\n * Copyright 2009, Moxiecode Systems AB\r\n * Released under GPL License.\r\n *\r\n * License: http://www.plupload.com/license\r\n * Contributing: http://www.plupload.com/contributing\r\n *\r\n * Depends:\r\n *\tjquery.ui.core.js\r\n *\tjquery.ui.widget.js\r\n *\t\r\n * Optionally:\r\n *\tjquery.ui.button.js\r\n *\tjquery.ui.progressbar.js\r\n *\tjquery.ui.sortable.js\r\n */\r\n\r\n// JSLint defined globals\r\n/*global window:false, document:false, plupload:false, jQuery:false */\r\n\r\n(function(window, document, plupload, $, undef) {\r\n\t\r\nvar uploaders = {};\t\r\n\t\r\nfunction _(str) {\r\n\treturn plupload.translate(str) || str;\r\n}\r\n\r\nfunction renderUI(obj) {\t\t\r\n\tobj.html(\r\n\t\t'<div class=\"plupload_wrapper\">' +\r\n\t\t\t'<div class=\"ui-widget-content plupload_container\">' +\r\n\t\t\t\t'<div class=\"plupload\">' +\r\n\t\t\t\t\t'<div class=\"ui-state-default ui-widget-header plupload_header\">' +\r\n\t\t\t\t\t\t'<div class=\"plupload_header_content\">' +\r\n\t\t\t\t\t\t\t'<div class=\"plupload_header_title\">' + _('Select files') + '</div>' +\r\n\t\t\t\t\t\t\t'<div class=\"plupload_header_text\">' + _('Add files to the upload queue and click the start button.') + '</div>' +\r\n\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'</div>' +\r\n\r\n\t\t\t\t\t'<div class=\"plupload_content\">' +\r\n\t\t\t\t\t\t'<table class=\"plupload_filelist\">' +\r\n\t\t\t\t\t\t'<tr class=\"ui-widget-header plupload_filelist_header\">' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_cell plupload_file_name\">' + _('Filename') + '</td>' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_cell plupload_file_status\">' + _('Status') + '</td>' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_cell plupload_file_size\">' + _('Size') + '</td>' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_cell plupload_file_action\">&nbsp;</td>' +\r\n\t\t\t\t\t\t'</tr>' +\r\n\t\t\t\t\t\t'</table>' +\r\n\r\n\t\t\t\t\t\t'<div class=\"plupload_scroll\">' +\r\n\t\t\t\t\t\t\t'<table class=\"plupload_filelist_content\"></table>' +\r\n\t\t\t\t\t\t'</div>' +\r\n\r\n\t\t\t\t\t\t'<table class=\"plupload_filelist\">' +\r\n\t\t\t\t\t\t'<tr class=\"ui-widget-header ui-widget-content plupload_filelist_footer\">' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_cell plupload_file_name\">' +\r\n\r\n\t\t\t\t\t\t\t\t'<div class=\"plupload_buttons\"><!-- Visible -->' +\r\n\t\t\t\t\t\t\t\t\t'<a class=\"plupload_button plupload_add\">' + _('Add Files') + '</a>&nbsp;' +\r\n\t\t\t\t\t\t\t\t\t'<a class=\"plupload_button plupload_start\">' + _('Start Upload') + '</a>&nbsp;' +\r\n\t\t\t\t\t\t\t\t\t'<a class=\"plupload_button plupload_stop plupload_hidden\">'+_('Stop Upload') + '</a>&nbsp;' +\r\n\t\t\t\t\t\t\t\t'</div>' +\r\n\r\n\t\t\t\t\t\t\t\t'<div class=\"plupload_started plupload_hidden\"><!-- Hidden -->' +\r\n\r\n\t\t\t\t\t\t\t\t\t'<div class=\"plupload_progress plupload_right\">' +\r\n\t\t\t\t\t\t\t\t\t\t'<div class=\"plupload_progress_container\"></div>' +\r\n\t\t\t\t\t\t\t\t\t'</div>' +\r\n\r\n\t\t\t\t\t\t\t\t\t'<div class=\"plupload_cell plupload_upload_status\"></div>' +\r\n\r\n\t\t\t\t\t\t\t\t\t'<div class=\"plupload_clearer\">&nbsp;</div>' +\r\n\r\n\t\t\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t\t\t'</td>' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_file_status\"><span class=\"plupload_total_status\">0%</span></td>' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_file_size\"><span class=\"plupload_total_file_size\">0 kb</span></td>' +\r\n\t\t\t\t\t\t\t'<td class=\"plupload_file_action\"></td>' +\r\n\t\t\t\t\t\t'</tr>' +\r\n\t\t\t\t\t\t'</table>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t'</div>' +\r\n\t\t\t'</div>' +\r\n\t\t\t'<input class=\"plupload_count\" value=\"0\" type=\"hidden\">' +\r\n\t\t'</div>'\r\n\t);\r\n}\r\n\r\n\r\n$.widget(\"ui.plupload\", {\r\n\t\r\n\tcontents_bak: '',\r\n\t\r\n\truntime: null,\r\n\t\r\n\toptions: {\r\n\t\tbrowse_button_hover: 'ui-state-hover',\r\n\t\tbrowse_button_active: 'ui-state-active',\r\n\t\t\r\n\t\t// widget specific\r\n\t\tdragdrop : true, \r\n\t\tmultiple_queues: true, // re-use widget by default\r\n\t\t\r\n\t\tbuttons: {\r\n\t\t\tbrowse: true,\r\n\t\t\tstart: true,\r\n\t\t\tstop: true\t\r\n\t\t},\r\n\t\tautostart: false,\r\n\t\tsortable: false,\r\n\t\trename: false,\r\n\t\tmax_file_count: 0 // unlimited\r\n\t},\r\n\t\r\n\tFILE_COUNT_ERROR: -9001,\r\n\t\r\n\t_create: function() {\r\n\t\tvar self = this, id, uploader;\r\n\t\t\r\n\t\tid = this.element.attr('id');\r\n\t\tif (!id) {\r\n\t\t\tid = plupload.guid();\r\n\t\t\tthis.element.attr('id', id);\r\n\t\t}\r\n\t\tthis.id = id;\r\n\t\t\t\t\r\n\t\t// backup the elements initial state\r\n\t\tthis.contents_bak = this.element.html();\r\n\t\trenderUI(this.element);\r\n\t\t\r\n\t\t// container, just in case\r\n\t\tthis.container = $('.plupload_container', this.element).attr('id', id + '_container');\t\r\n\t\t\r\n\t\t// list of files, may become sortable\r\n\t\tthis.filelist = $('.plupload_filelist_content', this.container).attr('id', id + '_filelist');\r\n\t\t\r\n\t\t// buttons\r\n\t\tthis.browse_button = $('.plupload_add', this.container).attr('id', id + '_browse');\r\n\t\tthis.start_button = $('.plupload_start', this.container).attr('id', id + '_start');\r\n\t\tthis.stop_button = $('.plupload_stop', this.container).attr('id', id + '_stop');\r\n\t\t\r\n\t\tif ($.ui.button) {\r\n\t\t\tthis.browse_button.button({\r\n\t\t\t\ticons: { primary: 'ui-icon-circle-plus' }\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.start_button.button({\r\n\t\t\t\ticons: { primary: 'ui-icon-circle-arrow-e' },\r\n\t\t\t\tdisabled: true\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.stop_button.button({\r\n\t\t\t\ticons: { primary: 'ui-icon-circle-close' }\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t// all buttons are optional, so they can be disabled and hidden\r\n\t\tif (!this.options.buttons.browse) {\r\n\t\t\tthis.browse_button.button('disable').hide();\r\n\t\t\t$('#' + id + self.runtime + '_container').hide();\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.options.buttons.start) {\r\n\t\t\tthis.start_button.button('disable').hide();\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.options.buttons.stop) {\r\n\t\t\tthis.stop_button.button('disable').hide();\r\n\t\t}\r\n\t\t\r\n\t\t// progressbar\r\n\t\tthis.progressbar = $('.plupload_progress_container', this.container);\t\t\r\n\t\t\r\n\t\tif ($.ui.progressbar) {\r\n\t\t\tthis.progressbar.progressbar();\r\n\t\t}\r\n\t\t\r\n\t\t// counter\r\n\t\tthis.counter = $('.plupload_count', this.element)\r\n\t\t\t.attr({\r\n\t\t\t\tid: id + '_count',\r\n\t\t\t\tname: id + '_count'\r\n\t\t\t});\r\n\t\t\r\n\t\t// initialize uploader instance\r\n\t\tuploader = this.uploader = uploaders[id] = new plupload.Uploader($.extend({ \r\n\t\t\tcontainer: id ,\r\n\t\t\tbrowse_button: id + '_browse'\r\n\t\t}, this.options));\r\n\t\t\r\n\t\t\r\n\t\tuploader.bind('Init', function(up, res) {\t\t\t\r\n\t\t\tif (!self.options.unique_names && self.options.rename) {\r\n\t\t\t\tself._enableRenaming();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (uploader.features.dragdrop && self.options.dragdrop) {\r\n\t\t\t\tself._enableDragAndDrop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.container.attr('title', _('Using runtime: ') + (self.runtime = res.runtime));\r\n\r\n\t\t\tself.start_button.click(function(e) {\r\n\t\t\t\tif (!$(this).button('option', 'disabled')) {\r\n\t\t\t\t\tself.start();\r\n\t\t\t\t}\r\n\t\t\t\te.preventDefault();\r\n\t\t\t});\r\n\r\n\t\t\tself.stop_button.click(function(e) {\r\n\t\t\t\tuploader.stop();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t// check if file count doesn't exceed the limit\r\n\t\tif (self.options.max_file_count) {\r\n\t\t\tuploader.bind('FilesAdded', function(up, files) {\r\n\t\t\t\tvar length = files.length, removed = [];\r\n\t\t\t\t\r\n\t\t\t\tif (length > self.options.max_file_count) {\r\n\t\t\t\t\tremoved = files.splice(self.options.max_file_count);\r\n\t\t\t\t\t\r\n\t\t\t\t\tup.trigger('Error', {\r\n\t\t\t\t\t\tcode : self.FILE_COUNT_ERROR,\r\n\t\t\t\t\t\tmessage : _('File count error.'),\r\n\t\t\t\t\t\tfile : removed\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t// uploader internal events must run first \r\n\t\tuploader.init();\r\n\t\t\r\n\t\tuploader.bind('FilesAdded', function(up, files) {\r\n\t\t\tself._trigger('selected', null, { up: up, files: files } );\r\n\t\t\t\r\n\t\t\tif (self.options.autostart) {\r\n\t\t\t\tself.start();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('FilesRemoved', function(up, files) {\r\n\t\t\tself._trigger('removed', null, { up: up, files: files } );\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('QueueChanged', function() {\r\n\t\t\tself._updateFileList();\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('StateChanged', function() {\r\n\t\t\tself._handleState();\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('UploadFile', function(up, file) {\r\n\t\t\tself._handleFileStatus(file);\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('FileUploaded', function(up, file) {\r\n\t\t\tself._handleFileStatus(file);\r\n\t\t\t\r\n\t\t\tself._trigger('uploaded', null, { up: up, file: file } );\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('UploadProgress', function(up, file) {\r\n\t\t\t// Set file specific progress\r\n\t\t\t$('#' + file.id + ' .plupload_file_status', self.element).html(file.percent + '%');\r\n\r\n\t\t\tself._handleFileStatus(file);\r\n\t\t\tself._updateTotalProgress();\r\n\t\t\t\r\n\t\t\tself._trigger('progress', null, { up: up, file: file } );\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('UploadComplete', function(up, files) {\t\t\t\r\n\t\t\tself._trigger('complete', null, { up: up, files: files } );\r\n\t\t});\r\n\t\t\r\n\t\tuploader.bind('Error', function(up, err) {\t\t\t\r\n\t\t\tvar file = err.file, message, details;\r\n\r\n\t\t\tif (file) {\r\n\t\t\t\tmessage = '<strong>' + err.message + '</strong>';\r\n\t\t\t\tdetails = err.details;\r\n\t\t\t\t\r\n\t\t\t\tif (details) {\r\n\t\t\t\t\tmessage += \" <br /><i>\" + err.details + \"</i>\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (err.code) {\r\n\t\t\t\t\t\tcase plupload.FILE_EXTENSION_ERROR:\r\n\t\t\t\t\t\t\tdetails = _(\"File: %s\").replace('%s', file.name);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase plupload.FILE_SIZE_ERROR:\r\n\t\t\t\t\t\t\tdetails = _(\"File: %f, size: %s, max file size: %m\").replace(/%([fsm])/g, function($0, $1) {\r\n\t\t\t\t\t\t\t\tswitch ($1) {\r\n\t\t\t\t\t\t\t\t\tcase 'f': return file.name;\r\n\t\t\t\t\t\t\t\t\tcase 's': return file.size;\t\r\n\t\t\t\t\t\t\t\t\tcase 'm': return plupload.parseSize(self.options.max_file_size);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase self.FILE_COUNT_ERROR:\r\n\t\t\t\t\t\t\tdetails = _(\"Upload element accepts only %d file(s) at a time. Extra files were stripped.\")\r\n\t\t\t\t\t\t\t\t.replace('%d', self.options.max_file_count);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase plupload.IMAGE_FORMAT_ERROR :\r\n\t\t\t\t\t\t\tdetails = plupload.translate('Image format either wrong or not supported.');\r\n\t\t\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase plupload.IMAGE_MEMORY_ERROR :\r\n\t\t\t\t\t\t\tdetails = plupload.translate('Runtime ran out of available memory.');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase plupload.IMAGE_DIMENSIONS_ERROR :\r\n\t\t\t\t\t\t\tdetails = plupload.translate('Resoultion out of boundaries! <b>%s</b> runtime supports images only up to %wx%hpx.').replace(/%([swh])/g, function($0, $1) {\r\n\t\t\t\t\t\t\t\tswitch ($1) {\r\n\t\t\t\t\t\t\t\t\tcase 's': return up.runtime;\r\n\t\t\t\t\t\t\t\t\tcase 'w': return up.features.maxWidth;\t\r\n\t\t\t\t\t\t\t\t\tcase 'h': return up.features.maxHeight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase plupload.HTTP_ERROR:\r\n\t\t\t\t\t\t\tdetails = _(\"Upload URL might be wrong or doesn't exist\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmessage += \" <br /><i>\" + details + \"</i>\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tself._notify('error', message);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t\r\n\t_setOption: function(key, value) {\r\n\t\t\t\t\r\n\t\tif (key == 'buttons' && typeof(value) == 'object') {\t\r\n\t\t\tvalue = $.extend(this.options.buttons, value);\r\n\t\t\t\r\n\t\t\tif (!value.browse) {\r\n\t\t\t\tthis.browse_button.button('disable').hide();\r\n\t\t\t\t$('#' + this.id + self.runtime + '_container').hide();\r\n\t\t\t} else {\r\n\t\t\t\tthis.browse_button.button('enable').show();\r\n\t\t\t\t$('#' + this.id + self.runtime + '_container').show();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!value.start) {\r\n\t\t\t\tthis.start_button.button('disable').hide();\r\n\t\t\t} else {\r\n\t\t\t\tthis.start_button.button('enable').show();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!value.stop) {\r\n\t\t\t\tthis.stop_button.button('disable').hide();\r\n\t\t\t} else {\r\n\t\t\t\tthis.start_button.button('enable').show();\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.uploader.settings[key] = value;\t\r\n\t},\r\n\t\r\n\t\r\n\tstart: function() {\r\n\t\tthis.uploader.start();\r\n\t\tthis._trigger('start', null);\r\n\t},\r\n\t\r\n\tstop: function() {\r\n\t\tthis.uploader.stop();\r\n\t\tthis._trigger('stop', null);\r\n\t},\r\n\t\r\n\tgetFile: function(id) {\r\n\t\tvar file;\r\n\t\t\r\n\t\tif (typeof id === 'number') {\r\n\t\t\tfile = this.uploader.files[id];\t\r\n\t\t} else {\r\n\t\t\tfile = this.uploader.getFile(id);\t\r\n\t\t}\r\n\t\treturn file;\r\n\t},\r\n\t\r\n\tremoveFile: function(id) {\r\n\t\tvar file = this.getFile(id);\r\n\t\tif (file) {\r\n\t\t\tthis.uploader.removeFile(file);\r\n\t\t}\r\n\t},\r\n\t\r\n\tclearQueue: function() {\r\n\t\tthis.uploader.splice();\r\n\t},\r\n\t\r\n\tgetUploader: function() {\r\n\t\treturn this.uploader;\r\n\t},\r\n\t\r\n\trefresh: function() {\r\n\t\tthis.uploader.refresh();\r\n\t},\r\n\t\r\n\t\r\n\t_handleState: function() {\r\n\t\tvar self = this, uploader = this.uploader;\r\n\t\t\t\t\t\t\r\n\t\tif (uploader.state === plupload.STARTED) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t$(self.start_button).button('disable');\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t$([])\r\n\t\t\t\t.add(self.stop_button)\r\n\t\t\t\t.add('.plupload_started')\r\n\t\t\t\t\t.removeClass('plupload_hidden');\r\n\t\t\t\t\t\t\t\r\n\t\t\t$('.plupload_upload_status', self.element).text(\r\n\t\t\t\t_('Uploaded %d/%d files').replace('%d/%d', uploader.total.uploaded+'/'+uploader.files.length)\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t$('.plupload_header_content', self.element).addClass('plupload_header_content_bw');\r\n\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t$([])\r\n\t\t\t\t.add(self.stop_button)\r\n\t\t\t\t.add('.plupload_started')\r\n\t\t\t\t\t.addClass('plupload_hidden');\r\n\t\t\t\r\n\t\t\tif (self.options.multiple_queues) {\r\n\t\t\t\t$(self.start_button).button('enable');\r\n\t\t\t\t\t\t\r\n\t\t\t\t$('.plupload_header_content', self.element).removeClass('plupload_header_content_bw');\r\n\t\t\t}\r\n\r\n\t\t\tself._updateFileList();\r\n\t\t}\r\n\t},\r\n\t\r\n\t\r\n\t_handleFileStatus: function(file) {\r\n\t\tvar actionClass, iconClass;\r\n\r\n\t\tswitch (file.status) {\r\n\t\t\tcase plupload.DONE: \r\n\t\t\t\tactionClass = 'plupload_done';\r\n\t\t\t\ticonClass = 'ui-icon ui-icon-circle-check';\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase plupload.FAILED:\r\n\t\t\t\tactionClass = 'ui-state-error plupload_failed';\r\n\t\t\t\ticonClass = 'ui-icon ui-icon-alert';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase plupload.QUEUED:\r\n\t\t\t\tactionClass = 'plupload_delete';\r\n\t\t\t\ticonClass = 'ui-icon ui-icon-circle-minus';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase plupload.UPLOADING:\r\n\t\t\t\tactionClass = 'ui-state-highlight plupload_uploading';\r\n\t\t\t\ticonClass = 'ui-icon ui-icon-circle-arrow-w';\r\n\t\t\t\t\r\n\t\t\t\t// scroll uploading file into the view if its bottom boundary is out of it\r\n\t\t\t\tvar scroller = $('.plupload_scroll', this.container),\r\n\t\t\t\t\tscrollTop = scroller.scrollTop(),\r\n\t\t\t\t\tscrollerHeight = scroller.height(),\r\n\t\t\t\t\trowOffset = $('#' + file.id).position().top + $('#' + file.id).height();\r\n\t\t\t\t\t\r\n\t\t\t\tif (scrollerHeight < rowOffset) {\r\n\t\t\t\t\tscroller.scrollTop(scrollTop + rowOffset - scrollerHeight);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tactionClass += ' ui-state-default plupload_file';\r\n\r\n\t\t$('#' + file.id)\r\n\t\t\t.attr('class', actionClass)\r\n\t\t\t.find('.ui-icon')\r\n\t\t\t\t.attr('class', iconClass);\r\n\t},\r\n\t\r\n\t\r\n\t_updateTotalProgress: function() {\r\n\t\tvar uploader = this.uploader;\r\n\t\t\r\n\t\tthis.progressbar.progressbar('value', uploader.total.percent);\r\n\t\t\r\n\t\t$('.plupload_total_status', this.element).html(uploader.total.percent + '%');\r\n\t\t\r\n\t\t$('.plupload_upload_status', this.element).text(\r\n\t\t\t_('Uploaded %d/%d files').replace('%d/%d', uploader.total.uploaded+'/'+uploader.files.length)\r\n\t\t);\r\n\r\n\t\t// All files are uploaded\r\n\t\tif (uploader.total.uploaded === uploader.files.length) {\r\n\t\t\tuploader.stop();\r\n\t\t}\r\n\t},\r\n\t\r\n\t\r\n\t_updateFileList: function() {\r\n\t\tvar self = this, uploader = this.uploader, filelist = this.filelist, \r\n\t\t\tcount = 0, \r\n\t\t\tid, prefix = this.id + '_',\r\n\t\t\tfields;\r\n\t\t\t\r\n\t\t// destroy sortable if enabled\r\n\t\tif ($.ui.sortable && this.options.sortable) {\r\n\t\t\t$('tbody', filelist).sortable('destroy');\t\r\n\t\t}\r\n\t\t\r\n\t\tfilelist.empty();\r\n\r\n\t\t$.each(uploader.files, function(i, file) {\r\n\t\t\tfields = '';\r\n\t\t\tid = prefix + count;\r\n\r\n\t\t\tif (file.status === plupload.DONE) {\r\n\t\t\t\tif (file.target_name) {\r\n\t\t\t\t\tfields += '<input type=\"hidden\" name=\"' + id + '_tmpname\" value=\"'+plupload.xmlEncode(file.target_name)+'\" />';\r\n\t\t\t\t}\r\n\t\t\t\tfields += '<input type=\"hidden\" name=\"' + id + '_name\" value=\"'+plupload.xmlEncode(file.name)+'\" />';\r\n\t\t\t\tfields += '<input type=\"hidden\" name=\"' + id + '_status\" value=\"' + (file.status === plupload.DONE ? 'done' : 'failed') + '\" />';\r\n\r\n\t\t\t\tcount++;\r\n\t\t\t\tself.counter.val(count);\r\n\t\t\t}\r\n\r\n\t\t\tfilelist.append(\r\n\t\t\t\t'<tr class=\"ui-state-default plupload_file\" id=\"' + file.id + '\">' +\r\n\t\t\t\t\t'<td class=\"plupload_cell plupload_file_name\"><span>' + file.name + '</span></td>' +\r\n\t\t\t\t\t'<td class=\"plupload_cell plupload_file_status\">' + file.percent + '%</td>' +\r\n\t\t\t\t\t'<td class=\"plupload_cell plupload_file_size\">' + plupload.formatSize(file.size) + '</td>' +\r\n\t\t\t\t\t'<td class=\"plupload_cell plupload_file_action\"><div class=\"ui-icon\"></div>' + fields + '</td>' +\r\n\t\t\t\t'</tr>'\r\n\t\t\t);\r\n\r\n\t\t\tself._handleFileStatus(file);\r\n\r\n\t\t\t$('#' + file.id + '.plupload_delete .ui-icon, #' + file.id + '.plupload_done .ui-icon')\r\n\t\t\t\t.click(function(e) {\r\n\t\t\t\t\t$('#' + file.id).remove();\r\n\t\t\t\t\tuploader.removeFile(file);\r\n\t\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\tself._trigger('updatelist', null, filelist);\r\n\t\t});\r\n\t\t\r\n\r\n\t\t$('.plupload_total_file_size', self.element).html(plupload.formatSize(uploader.total.size));\r\n\r\n\t\tif (uploader.total.queued === 0) {\r\n\t\t\t$('.ui-button-text', self.browse_button).text(_('Add Files'));\r\n\t\t} else {\r\n\t\t\t$('.ui-button-text', self.browse_button).text(_('%d files queued').replace('%d', uploader.total.queued));\r\n\t\t}\r\n\r\n\r\n\t\tif (uploader.files.length === (uploader.total.uploaded + uploader.total.failed)) {\r\n\t\t\tself.start_button.button('disable');\r\n\t\t} else {\r\n\t\t\tself.start_button.button('enable');\r\n\t\t}\r\n\r\n\r\n\t\t// Scroll to end of file list\r\n\t\tfilelist[0].scrollTop = filelist[0].scrollHeight;\r\n\r\n\t\tself._updateTotalProgress();\r\n\r\n\t\tif (!uploader.files.length && uploader.features.dragdrop && uploader.settings.dragdrop) {\r\n\t\t\t// Re-add drag message if there are no files\r\n\t\t\t$('#' + id + '_filelist').append('<tr><td class=\"plupload_droptext\">' + _(\"Drag files here.\") + '</td></tr>');\r\n\t\t} else {\r\n\t\t\t// Otherwise re-initialize sortable\r\n\t\t\tif (self.options.sortable && $.ui.sortable) {\r\n\t\t\t\t self._enableSortingList();\t\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t\r\n\t_enableRenaming: function() {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\t$('.plupload_file_name span', this.filelist).live('click', function(e) {\r\n\t\t\tvar targetSpan = $(e.target), file, parts, name, ext = \"\";\r\n\r\n\t\t\t// Get file name and split out name and extension\r\n\t\t\tfile = self.uploader.getFile(targetSpan.parents('tr')[0].id);\r\n\t\t\tname = file.name;\r\n\t\t\tparts = /^(.+)(\\.[^.]+)$/.exec(name);\r\n\t\t\tif (parts) {\r\n\t\t\t\tname = parts[1];\r\n\t\t\t\text = parts[2];\r\n\t\t\t}\r\n\r\n\t\t\t// Display input element\r\n\t\t\ttargetSpan.hide().after('<input class=\"plupload_file_rename\" type=\"text\" />');\r\n\t\t\ttargetSpan.next().val(name).focus().blur(function() {\r\n\t\t\t\ttargetSpan.show().next().remove();\r\n\t\t\t}).keydown(function(e) {\r\n\t\t\t\tvar targetInput = $(this);\r\n\r\n\t\t\t\tif ($.inArray(e.keyCode, [13, 27]) !== -1) {\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t// Rename file and glue extension back on\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\tfile.name = targetInput.val() + ext;\r\n\t\t\t\t\t\ttargetSpan.text(file.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargetInput.blur();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\t\r\n\t\r\n\t_enableDragAndDrop: function() {\r\n\t\tthis.filelist.append('<tr><td class=\"plupload_droptext\">' + _(\"Drag files here.\") + '</td></tr>');\r\n\t\t\r\n\t\tthis.filelist.parent().attr('id', this.id + '_dropbox');\r\n\t\t\r\n\t\tthis.uploader.settings.drop_element = this.options.drop_element = this.id + '_dropbox';\r\n\t},\r\n\t\r\n\t\r\n\t_enableSortingList: function() {\r\n\t\tvar idxStart, self = this;\r\n\t\t\r\n\t\tif ($('tbody tr', this.filelist).length < 2) {\r\n\t\t\treturn;\t\r\n\t\t}\r\n\t\t\r\n\t\t$('tbody', this.filelist).sortable({\r\n\t\t\tcontainment: 'parent',\r\n\t\t\titems: '.plupload_delete',\r\n\t\t\t\r\n\t\t\thelper: function(e, el) {\r\n\t\t\t\treturn el.clone(true).find('td:not(.plupload_file_name)').remove().end().css('width', '100%');\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tstart: function(e, ui) {\r\n\t\t\t\tidxStart = $('tr', this).index(ui.item);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tstop: function(e, ui) {\r\n\t\t\t\tvar i, length, idx, files = [], idxStop = $('tr', this).index(ui.item);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tfor (i = 0, length = self.uploader.files.length; i < length; i++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (i === idxStop) {\r\n\t\t\t\t\t\tidx = idxStart;\r\n\t\t\t\t\t} else if (i === idxStart) {\r\n\t\t\t\t\t\tidx = idxStop;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tidx = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfiles[files.length] = self.uploader.files[idx];\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfiles.unshift(files.length);\r\n\t\t\t\tfiles.unshift(0);\r\n\t\t\t\t\r\n\t\t\t\t// re-populate files array\t\t\t\t\r\n\t\t\t\tArray.prototype.splice.apply(self.uploader.files, files);\t\r\n\t\t\t}\r\n\t\t});\t\t\r\n\t},\r\n\t\r\n\t_notify: function(type, message) {\r\n\t\tvar popup = $(\r\n\t\t\t'<div class=\"plupload_message\">' + \r\n\t\t\t\t'<span class=\"plupload_message_close ui-icon ui-icon-circle-close\" title=\"'+_('Close')+'\"></span>' +\r\n\t\t\t\t'<p><span class=\"ui-icon\"></span>' + message + '</p>' +\r\n\t\t\t'</div>'\r\n\t\t);\r\n\t\t\t\t\t\r\n\t\tpopup\r\n\t\t\t.addClass('ui-state-' + (type === 'error' ? 'error' : 'highlight'))\r\n\t\t\t.find('p .ui-icon')\r\n\t\t\t\t.addClass('ui-icon-' + (type === 'error' ? 'alert' : 'info'))\r\n\t\t\t\t.end()\r\n\t\t\t.find('.plupload_message_close')\r\n\t\t\t\t.click(function() {\r\n\t\t\t\t\tpopup.remove();\t\r\n\t\t\t\t})\r\n\t\t\t\t.end()\r\n\t\t\t.appendTo('.plupload_header_content', this.container);\r\n\t},\r\n\t\r\n\r\n\r\n\tdestroy: function() {\r\n\t\t// unbind all button events\r\n\t\t$('.plupload_button', this.element).unbind();\r\n\t\t\r\n\t\t// destroy buttons\r\n\t\tif ($.ui.button) {\r\n\t\t\t$('.plupload_add, .plupload_start, .plupload_stop', this.container)\r\n\t\t\t\t.button('destroy');\r\n\t\t}\r\n\t\t\r\n\t\t// destroy progressbar\r\n\t\tif ($.ui.progressbar) {\r\n\t\t\t this.progressbar.progressbar('destroy');\t\r\n\t\t}\r\n\t\t\r\n\t\t// destroy sortable behavior\r\n\t\tif ($.ui.sortable && this.options.sortable) {\r\n\t\t\t$('tbody', this.filelist).sortable('destroy');\r\n\t\t}\r\n\t\t\r\n\t\t// destroy uploader instance\r\n\t\tthis.uploader.destroy();\r\n\t\t\r\n\t\t// restore the elements initial state\r\n\t\tthis.element\r\n\t\t\t.empty()\r\n\t\t\t.html(this.contents_bak);\r\n\t\tthis.contents_bak = '';\r\n\r\n\t\t$.Widget.prototype.destroy.apply(this);\r\n\t}\r\n});\r\n\r\n\r\n} (window, document, plupload, jQuery));\r\n"],"sourceRoot":"/source/"}