{"version":3,"sources":["jstemplate.js","jquery.timeago.js","karl.contentfeeds.js"],"names":[],"mappings":"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","file":"karl-contentfeeds.min.js","sourcesContent":["// A simple templating solution.\n// John Resig - http://ejohn.org/ - MIT Licensed\n\n(function(){\n  var cache = {};\n  \n  this.tmpl = function tmpl(str, data){\n    // Figure out if we're getting a template, or if we need to\n    // load the template - and be sure to cache the result.\n    var fn = !/\\W/.test(str) ?\n      cache[str] = cache[str] ||\n        tmpl(document.getElementById(str).innerHTML) :\n      \n      // Generate a reusable function that will serve as a template\n      // generator (and which will be cached).\n      new Function(\"obj\",\n        \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n        \n        // Introduce the data as local variables using with(){}\n        \"with(obj){p.push('\" +\n        \n        // Convert the template into pure JavaScript\n        str\n          .replace(/[\\r\\t\\n]/g, \" \")\n          .split(\"{%\").join(\"\\t\")\n          .replace(/((^|%})[^\\t]*)'/g, \"$1\\r\")\n          .replace(/\\t=(.*?)%}/g, \"',$1,'\")\n          .split(\"\\t\").join(\"');\")\n          .split(\"%}\").join(\"p.push('\")\n          .split(\"\\r\").join(\"\\\\'\")\n      + \"');}return p.join('');\");\n    \n    // Provide some basic currying to the user\n    return data ? fn( data ) : fn;\n  };\n})();\n","/*\n * timeago: a jQuery plugin, version: 0.9.3 (2011-01-21)\n * @requires jQuery v1.2.3 or later\n *\n * Timeago is a jQuery plugin that makes it easy to support automatically\n * updating fuzzy timestamps (e.g. \"4 minutes ago\" or \"about 1 day ago\").\n *\n * For usage and examples, visit:\n * http://timeago.yarp.com/\n *\n * Licensed under the MIT:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Copyright (c) 2008-2011, Ryan McGeary (ryanonjavascript -[at]- mcgeary [*dot*] org)\n */\n(function($) {\n  $.timeago = function(timestamp) {\n    if (timestamp instanceof Date) {\n      return inWords(timestamp);\n    } else if (typeof timestamp === \"string\") {\n      return inWords($.timeago.parse(timestamp));\n    } else {\n      return inWords($.timeago.datetime(timestamp));\n    }\n  };\n  var $t = $.timeago;\n\n  $.extend($.timeago, {\n    settings: {\n      refreshMillis: 60000,\n      allowFuture: false,\n      strings: {\n        prefixAgo: null,\n        prefixFromNow: null,\n        suffixAgo: \"ago\",\n        suffixFromNow: \"from now\",\n        seconds: \"less than a minute\",\n        minute: \"about a minute\",\n        minutes: \"%d minutes\",\n        hour: \"about an hour\",\n        hours: \"about %d hours\",\n        day: \"a day\",\n        days: \"%d days\",\n        month: \"about a month\",\n        months: \"%d months\",\n        year: \"about a year\",\n        years: \"%d years\",\n        numbers: []\n      }\n    },\n    inWords: function(distanceMillis) {\n      var $l = this.settings.strings;\n      var prefix = $l.prefixAgo;\n      var suffix = $l.suffixAgo;\n      if (this.settings.allowFuture) {\n        if (distanceMillis < 0) {\n          prefix = $l.prefixFromNow;\n          suffix = $l.suffixFromNow;\n        }\n        distanceMillis = Math.abs(distanceMillis);\n      }\n\n      var seconds = distanceMillis / 1000;\n      var minutes = seconds / 60;\n      var hours = minutes / 60;\n      var days = hours / 24;\n      var years = days / 365;\n\n      function substitute(stringOrFunction, number) {\n        var string = $.isFunction(stringOrFunction) ? stringOrFunction(number, distanceMillis) : stringOrFunction;\n        var value = ($l.numbers && $l.numbers[number]) || number;\n        return string.replace(/%d/i, value);\n      }\n\n      var words = seconds < 45 && substitute($l.seconds, Math.round(seconds)) ||\n        seconds < 90 && substitute($l.minute, 1) ||\n        minutes < 45 && substitute($l.minutes, Math.round(minutes)) ||\n        minutes < 90 && substitute($l.hour, 1) ||\n        hours < 24 && substitute($l.hours, Math.round(hours)) ||\n        hours < 48 && substitute($l.day, 1) ||\n        days < 30 && substitute($l.days, Math.floor(days)) ||\n        days < 60 && substitute($l.month, 1) ||\n        days < 365 && substitute($l.months, Math.floor(days / 30)) ||\n        years < 2 && substitute($l.year, 1) ||\n        substitute($l.years, Math.floor(years));\n\n      return $.trim([prefix, words, suffix].join(\" \"));\n    },\n    parse: function(iso8601) {\n      var s = $.trim(iso8601);\n      s = s.replace(/\\.\\d\\d\\d+/,\"\"); // remove milliseconds\n      s = s.replace(/-/,\"/\").replace(/-/,\"/\");\n      s = s.replace(/T/,\" \").replace(/Z/,\" UTC\");\n      s = s.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/,\" $1$2\"); // -04:00 -> -0400\n      return new Date(s);\n    },\n    datetime: function(elem) {\n      // jQuery's `is()` doesn't play well with HTML5 in IE\n      var isTime = $(elem).get(0).tagName.toLowerCase() === \"time\"; // $(elem).is(\"time\");\n      var iso8601 = isTime ? $(elem).attr(\"datetime\") : $(elem).attr(\"title\");\n      return $t.parse(iso8601);\n    }\n  });\n\n  $.fn.timeago = function() {\n    var self = this;\n    self.each(refresh);\n\n    var $s = $t.settings;\n    if ($s.refreshMillis > 0) {\n      setInterval(function() { self.each(refresh); }, $s.refreshMillis);\n    }\n    return self;\n  };\n\n  function refresh() {\n    var data = prepareData(this);\n    if (!isNaN(data.datetime)) {\n      $(this).text(inWords(data.datetime));\n    }\n    return this;\n  }\n\n  function prepareData(element) {\n    element = $(element);\n    if (!element.data(\"timeago\")) {\n      element.data(\"timeago\", { datetime: $t.datetime(element) });\n      var text = $.trim(element.text());\n      if (text.length > 0) {\n        element.attr(\"title\", text);\n      }\n    }\n    return element.data(\"timeago\");\n  }\n\n  function inWords(date) {\n    return $t.inWords(distance(date));\n  }\n\n  function distance(date) {\n    return (new Date().getTime() - date.getTime());\n  }\n\n  // fix for IE6 suckage\n  document.createElement(\"abbr\");\n  document.createElement(\"time\");\n}(jQuery));\n","\n(function($){\n\nvar log = function() {\n    // Shut up all logging for now.\n    var DEBUG = false;\n    if (DEBUG && window.console && console.log) {\n        // log for FireBug or WebKit console\n        console.log(Array.prototype.slice.call(arguments));\n    }\n};\n\n$.widget('karl.karlcontentfeeds', {\n\n    options: {\n        selectTimeAgo: 'abbr.timeago',\n        ajax_url: '',\n        filter: ''\n    },\n\n    _create: function() {\n        var self = this;\n\n        // set initial state\n        this._templates = {};\n        this._summary_info = {};\n        this._gen_feed_url();\n        // Valid states are: 'on', 'off', 'polling', 'error'\n        this._ajax_state = 'on';\n        // Base state can be 'on' or 'off',\n        // we use to return to after 'polling'.\n        this._ajax_base_state = this._ajax_state;\n\n    },\n\n    destroy: function() {\n        $.Widget.prototype.destroy.call( this );\n        // be paranoid about IE memory leaks\n        if (this._active_request) {\n            this._active_request.abort();\n        }\n        this._active_request = null;\n    },\n\n    // reset the state of the widget\n    start_over: function() {\n        // delete the content\n        this.element.empty();\n        // reset the summary state\n        this._summary_info = {};\n        this._gen_feed_url();\n\n        // dump active requests at this point\n        if (this._active_request) {\n            this._active_request.abort();\n        }\n        // re-set the throbber\n        this.setAjaxState(this._ajax_base_state, {notify: true});\n\n        // trigger a change\n        this.element.trigger('changed.karlcontentfeeds', [this._summary_info]);\n    },\n\n    get_items: function (d) {\n        // Custom version of getJSON, with error handling, making sure\n        // only one request is active at a time.\n        var self = this;\n        d = d || {};\n        // if d.force is true, the query will be done also in 'off'\n\n        // Parse state and decide whether to issue request.  If we are\n        // 'polling', or 'error', bail out.\n        var states = ['polling', 'error'];\n        if (! d.force) {\n            states.push('off');\n        }\n        if (jQuery.inArray(self._ajax_state, states) > -1) {\n            log('bailout: ' + self._ajax_state);\n            return;\n        }\n\n        self.setAjaxState('polling', {notify: true});\n        this._active_request = jQuery.ajax({\n                type: \"GET\",\n                url: this._summary_info.feed_url,\n                success: function(data) {\n                    // XXX It seems, that IE bumps us\n                    // here on abort(), with data=null.\n                    if (data !== null) {\n                        self._ajaxSuccess(data);\n                    }\n                },\n                error: function(xhr, textStatus, errorThrow) {\n                    self._ajaxError(xhr, textStatus, errorThrow);\n                },\n                cache: false,\n                dataType: 'json'\n        });\n\n        return this._active_request;\n    },\n\n    _getTemplate: function (key) {\n        // Pre-compile and cache templates\n        var self = this;\n\n        var template = self._templates[key];\n        if (! template) {\n            template = tmpl(key);\n            self._templates[key] = template;\n        }\n\n        return template;\n    },\n\n    _ajaxSuccess: function (data) {\n        // Bind some vars\n        var self = this;\n\n        var last_gen = data[0];\n        var last_index = data[1];\n        var earliest_gen = data[2];\n        var earliest_index = data[3];\n        var rows = data[4];\n        var row_template = this._getTemplate('item_row');\n\n        $.each(rows.reverse(), function (key, row) {\n            var flavor_template = self._getTemplate(row.flavor);\n            row.flavor = flavor_template({item: row});\n            $(row_template({item: row}))\n                .prependTo(self.element)\n                .find(self.options.selectTimeAgo).timeago();\n        });\n\n        var i = this._summary_info;\n\n        // Animate new items\n        // but only, if this is not the first time.\n        if (i.earliest_gen !== undefined) {\n            this._animate(rows.length);\n        }\n\n        // update summary info\n        if (i.earliest_gen !== undefined) {\n            earliest_gen = Math.min(i.earliest_gen, earliest_gen);\n            earliest_index = Math.min(i.earliest_index, earliest_index);\n        }\n        var now = this._now();\n        this._summary_info = {\n            last_gen: last_gen,\n            last_index: last_index,\n            earliest_gen: earliest_gen,\n            earliest_index: earliest_index,\n            last_update: now\n        };\n        this._gen_feed_url();\n\n        // set the ajax state to the base state\n        // but only if it's not already \"off\", in this\n        // case just leave it \"off\"\n        if (this._ajax_state != this._ajax_base_state) {\n            this.setAjaxState(this._ajax_base_state, {notify: true});\n        }\n\n        // trigger a change\n        this.element.trigger('changed.karlcontentfeeds', [this._summary_info]);\n    },\n\n    _animate: function(nr) {\n        var self = this;\n\n        // sum the full height, to see how large we need to go.\n        // (XXX hmmm... should there be a better way?)\n        var full_height = 0;\n        this.element.children().each(function(i) {\n            if (i == nr) {\n                // stop iteration after first nr items\n                return false;\n            }\n            full_height += $(this).outerHeight(true);\n        });\n\n        // wrapper is needed for overflow\n        // make sure element has no clear itself,\n        // because it breaks the animation.\n        var clear = this.element.css('clear');\n        var wrapper = $('<div></div>')\n            .css({overflow: 'hidden', 'clear': clear});\n\n        this.element\n            .wrap(wrapper)\n            .css({marginTop: -full_height, 'clear': 'none'});\n\n        // animate the new items\n        // from the negative top margin, to zero\n        this.element.animate({marginTop: 0}, {\n            queue: false,\n            duration: 4 * full_height, // speed proportional with nr of items.\n            complete: function() {\n                // when finished: remove the wrapper\n                self.element.unwrap();\n            }\n        });\n    },\n\n    _gen_feed_url: function() {\n        // calculate the URL to be used on next JSON request\n        // and store it in summary_info\n        var query = {};\n        var info = this._summary_info;\n        // has there been a recent query?\n        if (info.last_gen !== undefined) {\n            query.newer_than =  info.last_gen + ':' + info.last_index;\n        }\n        // is there a filter?\n        if (this.options.filter) {\n            query.filter = this.options.filter;\n        }\n        var query_string = $.param(query);\n        info.feed_url =\n            this.options.ajax_url + (query_string && '?') + query_string;\n    },\n\n    summary_info: function() {\n        // return the summary info\n        return this._summary_info;\n    },\n\n    _now: function() {\n        return new Date().toString();\n    },\n\n    _ajaxError: function (xhr, textStatus, errorThrown) {\n        log('error: ' + textStatus);\n\n        var errormsg = textStatus + \": \" + xhr.statusText;\n        this.setAjaxState('error', {errormsg: errormsg, notify: true});\n    },\n\n    setFilter: function (filter) {\n        // store the value\n        this.options.filter = filter;\n        // start over\n        this.start_over();\n        // get the initial items\n        // forced, means even in 'off' state.\n        this.get_items({force: true});\n    },\n\n    setAjaxState: function (newstate, d) {\n        // Set state and possibly update UI\n        log('Changing state from \"' + this._ajax_state +\n                    '\" to \"' + newstate + '\"');\n        this._ajax_state = newstate;\n        // base state is either on or off\n        if (newstate == 'on' || newstate == 'off') {\n            this._ajax_base_state = newstate;\n        }\n\n        if (d && d.notify) {\n            // Trigger only if we are calling.\n            // (to avoid circular events)\n            this.element.trigger('ajaxstatechanged.karlcontentfeeds', [newstate, d.errormsg]);\n        }\n\n    }\n\n});\n\n$.widget('karl.karlcontentfeeds_info', {\n\n    options: {\n        selectLastUpdate: '.last-update',\n        selectLastGen: '.last-gen',\n        selectLastIndex: '.last-index',\n        selectFeedUrl: '.feed-url'\n    },\n\n    _create: function() {\n        // locate markers where we will update\n        this.lastUpdate = this.element.find(this.options.selectLastUpdate);\n        this.lastGen = this.element.find(this.options.selectLastGen);\n        this.lastIndex = this.element.find(this.options.selectLastIndex);\n        this.feedUrl = this.element.find(this.options.selectFeedUrl);\n    },\n\n    //destroy: function() {\n    //    $.Widget.prototype.destroy.call( this );\n    //},\n\n    update: function(value) {\n        this.lastGen.text(value.last_gen);\n        this.lastIndex.text(value.last_index);\n        this.lastUpdate.text(value.last_update);\n        this.feedUrl\n            .text(value.feed_url)\n            .attr('href', value.feed_url);\n    }\n\n});\n\n\n$.widget('karl.karlcontentfeeds_polling', {\n\n    options: {\n        selectInfoButton: '#polling-info',\n        selectDetailsInfo: '.polling-details.info',\n        selectError: '.polling-details.errormessage',\n        selectErrorDetails: '#kf-errordetail',\n        selectCloseButton: '.close',\n        selectIndicator: '#poll-indicator'\n    },\n\n    _create: function() {\n        var self = this;\n\n        // locate markers where we will update\n        this.infoButton = this.element.find(this.options.selectInfoButton);\n        this.detailsInfo = this.element.find(this.options.selectDetailsInfo);\n        this.error = this.element.find(this.options.selectError);\n        this.errorDetails = this.element.find(this.options.selectErrorDetails);\n        this.closeButton = this.element.find(this.options.selectCloseButton);\n        this.indicator = this.element.find(this.options.selectIndicator);\n\n        //\n        // bind events\n        //\n\n        this.info_active = false;\n\n        this.infoButton.click(function() {\n            self._openDetailsInfo();\n        });\n        $('body').click(function(evt) {\n            // close the info details it if clicked outside of it.\n            if (self.info_active && (self.infoButton[0] !== evt.target) &&\n                    (self.detailsInfo[0] !== evt.target) &&\n                    ! jQuery.contains(self.detailsInfo[0], evt.target)) {\n                self._closeDetailsInfo();\n            }\n        });\n        this.closeButton.click(function() {\n            self._closeDetailsInfo();\n        });\n        // On-off indicator\n        var ind = this.indicator;\n        ind.click(function() {\n            if (ind.hasClass('on') || ind.hasClass('polling')) {\n                ind.removeClass('on polling');\n                ind.addClass('off');\n                // trigger a change\n                self.element.trigger('ajaxstatechanged.karlcontentfeeds', ['off']);\n            } else if (self.indicator.hasClass('off')) {\n                ind.removeClass('off');\n                ind.addClass('on');\n                // trigger a change\n                self.element.trigger('ajaxstatechanged.karlcontentfeeds', ['on']);\n            } else if (ind.hasClass('error')) {\n                self.error.fadeIn(\"fast\");\n            }\n        });\n    },\n\n    _openDetailsInfo: function() {\n        this.detailsInfo.fadeIn(\"fast\");\n        this.info_active = true;\n    },\n\n    _closeDetailsInfo: function() {\n        // The same class functions for both close buttons.\n        // This makes only either one of the following two lines\n        // active at the same time.\n        this.detailsInfo.fadeOut(\"fast\");\n        this.error.fadeOut(\"fast\");\n        this.info_active = false;\n    },\n\n    destroy: function() {\n        $.Widget.prototype.destroy.call( this );\n\n        // unbind events\n        this.infoButton.unbind('click');\n        this.closeButton.unbind('click');\n        this.indicator.unbind('click');\n    },\n\n    setAjaxState: function (newstate, d) {\n        // update UI\n        this.indicator.removeClass('on off polling error');\n        this.indicator.addClass(newstate);\n        // if it's an error, also update the error message\n        if (newstate == 'error') {\n            this.errorDetails.text(d.errormsg);\n        }\n\n        if (d && d.notify) {\n            // Trigger only if we are calling.\n            // (to avoid circular events)\n            this.element.trigger('ajaxstatechanged.karlcontentfeeds', [newstate, d.errormsg]);\n        }\n\n    }\n\n\n});\n\n\n})(jQuery);\n\n"],"sourceRoot":"/source/"}